{
    "classes": [
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/framework.dart",
                                    "name": "StatelessWidget"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": true,
            "wrap": false
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatefulWidget"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/framework.dart",
                                    "name": "StatefulWidget"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": true,
            "wrap": false
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/foundation/change_notifier.dart",
                        "name": "ChangeNotifier"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/foundation/change_notifier.dart",
                                    "name": "ChangeNotifier"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {
                "addListener": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "listener",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "dispose": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "notifyListeners": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "removeListener": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "listener",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": true,
            "wrap": false
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "State"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {
                    "T": {
                        "extends": {
                            "unresolved": {
                                "library": "package:flutter/src/widgets/framework.dart",
                                "name": "StatefulWidget"
                            },
                            "typeArgs": []
                        }
                    }
                }
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/framework.dart",
                                    "name": "State"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {
                "setState": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "fn",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "initState": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "build": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/widgets.dart",
                                    "name": "Widget"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "context",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "BuildContext"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "getters": {
                "widget": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "ref": "T",
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "setters": {},
            "fields": {},
            "bridge": true,
            "wrap": false
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "BuildContext"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/text.dart",
                        "name": "Text"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/text.dart",
                                    "name": "Text"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "data",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "style",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/container.dart",
                        "name": "Container"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/container.dart",
                                    "name": "Container"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "alignment",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/alignment.dart",
                                            "name": "AlignmentGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "padding",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/edge_insets.dart",
                                            "name": "EdgeInsetsGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "decoration",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/decoration.dart",
                                            "name": "Decoration"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "foregroundDecoration",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/decoration.dart",
                                            "name": "Decoration"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "width",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "height",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "constraints",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/box.dart",
                                            "name": "BoxConstraints"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "margin",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/edge_insets.dart",
                                            "name": "EdgeInsetsGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "transformAlignment",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/alignment.dart",
                                            "name": "AlignmentGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/foundation/key.dart",
                        "name": "Key"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "dart:ui",
                        "name": "Color"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "value",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                },
                "fromARGB": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "a",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "r",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "g",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "b",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                },
                "fromRGBO": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "r",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "g",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "b",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "o",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/edge_insets.dart",
                        "name": "EdgeInsetsGeometry"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/edge_insets.dart",
                        "name": "EdgeInsets"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/edge_insets.dart",
                        "name": "EdgeInsetsGeometry"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "fromLTRB": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/edge_insets.dart",
                                    "name": "EdgeInsets"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "left",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "top",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "right",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "bottom",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                },
                "all": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/edge_insets.dart",
                                    "name": "EdgeInsets"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "value",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                },
                "only": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/edge_insets.dart",
                                    "name": "EdgeInsets"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "left",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "top",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "right",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "bottom",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                },
                "symmetric": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/edge_insets.dart",
                                    "name": "EdgeInsets"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "vertical",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "horizontal",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/colors.dart",
                        "name": "ColorSwatch"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "dart:ui",
                        "name": "Color"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {
                    "T": {}
                }
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/colors.dart",
                                    "name": "ColorSwatch"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "primary",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "_swatch",
                                "type": {
                                    "type": {
                                        "id": -10,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/app.dart",
                        "name": "WidgetsApp"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/app.dart",
                                    "name": "WidgetsApp"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "home",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "title",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "builder",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/app.dart",
                        "name": "MaterialApp"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/app.dart",
                        "name": "WidgetsApp"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/app.dart",
                                    "name": "MaterialApp"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "navigatorKey",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "home",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "routes",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:core",
                                            "name": "Map"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "initialRoute",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "onUnknownRoute",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "builder",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "title",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "onGenerateTitle",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "theme",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/theme_data.dart",
                                            "name": "ThemeData"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "darkTheme",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/theme_data.dart",
                                            "name": "ThemeData"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "debugShowMaterialGrid",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "showPerformanceOverlay",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "checkerboardRasterCacheImages",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "checkerboardOffscreenLayers",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "debugShowCheckedModeBanner",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/colors.dart",
                        "name": "MaterialColor"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/colors.dart",
                        "name": "ColorSwatch"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {
                    "T": {}
                }
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/colors.dart",
                                    "name": "MaterialColor"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "primary",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "_swatch",
                                "type": {
                                    "type": {
                                        "id": -10,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/colors.dart",
                        "name": "MaterialAccentColor"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/colors.dart",
                        "name": "ColorSwatch"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {
                    "T": {}
                }
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/colors.dart",
                                    "name": "MaterialAccentColor"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "primary",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "_swatch",
                                "type": {
                                    "type": {
                                        "id": -10,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/scaffold.dart",
                        "name": "Scaffold"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/scaffold.dart",
                                    "name": "Scaffold"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "appBar",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/app_bar.dart",
                                            "name": "AppBar"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "body",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "floatingActionButton",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/floating_action_button.dart",
                                            "name": "FloatingActionButton"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/app_bar.dart",
                        "name": "AppBar"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/app_bar.dart",
                                    "name": "AppBar"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "leading",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "automaticallyImplyLeading",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "title",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/widgets/text.dart",
                                            "name": "Text"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "actions",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:core",
                                            "name": "List"
                                        },
                                        "typeArgs": [
                                            {
                                                "unresolved": {
                                                    "library": "package:flutter/widgets.dart",
                                                    "name": "Widget"
                                                },
                                                "typeArgs": []
                                            }
                                        ]
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "flexibleSpace",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "bottom",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "elevation",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "shadowColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "backgroundColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/basic.dart",
                        "name": "Padding"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/basic.dart",
                                    "name": "Padding"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "padding",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/edge_insets.dart",
                                            "name": "EdgeInsetsGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/basic.dart",
                        "name": "Row"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/basic.dart",
                                    "name": "Row"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "mainAxisAlignment",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/flex.dart",
                                            "name": "MainAxisAlignment"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "mainAxisSize",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/flex.dart",
                                            "name": "MainAxisSize"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "crossAxisAlignment",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/flex.dart",
                                            "name": "CrossAxisAlignment"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "textDirection",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "TextDirection"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "verticalDirection",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/basic_types.dart",
                                            "name": "VerticalDirection"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "children",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:core",
                                            "name": "List"
                                        },
                                        "typeArgs": [
                                            {
                                                "unresolved": {
                                                    "library": "package:flutter/widgets.dart",
                                                    "name": "Widget"
                                                },
                                                "typeArgs": []
                                            }
                                        ]
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/basic.dart",
                        "name": "Center"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/basic.dart",
                                    "name": "Center"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "widthFactor",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "heightFactor",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/basic.dart",
                        "name": "Column"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/basic.dart",
                                    "name": "Column"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "mainAxisAlignment",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/flex.dart",
                                            "name": "MainAxisAlignment"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "mainAxisSize",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/flex.dart",
                                            "name": "MainAxisSize"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "crossAxisAlignment",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/flex.dart",
                                            "name": "CrossAxisAlignment"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "verticalDirection",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/basic_types.dart",
                                            "name": "VerticalDirection"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "textBaseline",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "TextBaseline"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "children",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:core",
                                            "name": "List"
                                        },
                                        "typeArgs": [
                                            {
                                                "unresolved": {
                                                    "library": "package:flutter/widgets.dart",
                                                    "name": "Widget"
                                                },
                                                "typeArgs": []
                                            }
                                        ]
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/floating_action_button.dart",
                        "name": "FloatingActionButton"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/floating_action_button.dart",
                                    "name": "FloatingActionButton"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "onPressed",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "tooltip",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "foregroundColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "backgroundColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "focusColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "hoverColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "splashColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "focusElevation",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "hoverElevation",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "elevation",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "highlightElevation",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "disabledElevation",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "mini",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "autofocus",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "isExtended",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/navigator.dart",
                        "name": "Navigator"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatefulWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/navigator.dart",
                                    "name": "Navigator"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {
                "of": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/navigator.dart",
                                    "name": "NavigatorState"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "context",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "BuildContext"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": true
                }
            },
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/navigator.dart",
                        "name": "NavigatorState"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "State"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {
                "pushNamed": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/navigator.dart",
                                    "name": "NavigatorState"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "name",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": [
                            {
                                "name": "arguments",
                                "type": {
                                    "type": {
                                        "id": -4,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isStatic": false
                },
                "pushReplacementNamed": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/navigator.dart",
                                    "name": "NavigatorState"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "name",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": [
                            {
                                "name": "arguments",
                                "type": {
                                    "type": {
                                        "id": -4,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isStatic": false
                },
                "pop": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/navigator.dart",
                                    "name": "NavigatorState"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "result",
                                "type": {
                                    "type": {
                                        "id": -4,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/editable_text.dart",
                        "name": "TextEditingController"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/foundation/change_notifier.dart",
                        "name": "ChangeNotifier"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/editable_text.dart",
                                    "name": "TextEditingController"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "text",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {
                "clear": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "getters": {},
            "setters": {},
            "fields": {
                "text": {
                    "type": {
                        "type": {
                            "id": -7,
                            "typeArgs": []
                        },
                        "nullable": false
                    },
                    "isStatic": false
                }
            },
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/text_field.dart",
                        "name": "TextField"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatefulWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/text_field.dart",
                                    "name": "TextField"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "controller",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/widgets/editable_text.dart",
                                            "name": "TextEditingController"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "enabled",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "style",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "onChanged",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "onSubmitted",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/scaffold.dart",
                        "name": "ScaffoldMessenger"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatefulWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/scaffold.dart",
                                    "name": "ScaffoldMessenger"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {
                "of": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/scaffold.dart",
                                    "name": "ScaffoldMessengerState"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "context",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "BuildContext"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isStatic": true
                }
            },
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/scaffold.dart",
                        "name": "ScaffoldMessengerState"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "State"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {
                "showSnackBar": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -1,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "snackBar",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/snack_bar.dart",
                                            "name": "SnackBar"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isStatic": true
                }
            },
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/snack_bar.dart",
                        "name": "SnackBar"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatefulWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/snack_bar.dart",
                                    "name": "SnackBar"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "content",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "backgroundColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "elevation",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "padding",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/edge_insets.dart",
                                            "name": "EdgeInsetsGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/text_style.dart",
                        "name": "TextStyle"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "inherit",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "backgroundColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "fontSize",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "fontWeight",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "FontWeight"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "fontStyle",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "FontStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "letterSpacing",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "wordSpacing",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "height",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {
                "inherit": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -5,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "color": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "backgroundColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "fontSize": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "fontWeight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "FontWeight"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "fontStyle": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "FontStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "letterSpacing": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "wordSpacing": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "height": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/text_theme.dart",
                        "name": "TextTheme"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/text_theme.dart",
                                    "name": "TextTheme"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "displayLarge",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "displayMedium",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "displaySmall",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headlineLarge",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headlineMedium",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headlineSmall",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "titleLarge",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "titleMedium",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "titleSmall",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "bodyLarge",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "bodyMedium",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "bodySmall",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "labelLarge",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "labelMedium",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "labelSmall",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headline1",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headline2",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headline3",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headline4",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headline5",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "headline6",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "subtitle1",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "subtitle2",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "bodyText1",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "bodyText2",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "caption",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "button",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "overline",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/text_style.dart",
                                            "name": "TextStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {
                "displayLarge": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "displayMedium": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "displaySmall": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headlineLarge": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headlineMedium": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headlineSmall": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "titleLarge": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "titleMedium": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "titleSmall": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "bodyLarge": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "bodyMedium": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "bodySmall": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "labelLarge": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "labelMedium": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "labelSmall": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headline1": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headline2": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headline3": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headline4": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headline5": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "headline6": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "subtitle1": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "subtitle2": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "bodyText1": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "bodyText2": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "caption": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "button": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "overline": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/text_style.dart",
                                    "name": "TextStyle"
                                },
                                "typeArgs": []
                            },
                            "nullable": true
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/icon_button.dart",
                        "name": "IconButton"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/icon_button.dart",
                                    "name": "IconButton"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "iconSize",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "padding",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/edge_insets.dart",
                                            "name": "EdgeInsetsGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "alignment",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/alignment.dart",
                                            "name": "AlignmentGeometry"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "splashRadius",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "focusColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "hoverColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "highlightColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "splashColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "disabledColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "onPressed",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "autofocus",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "tooltip",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "enableFeedback",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "constraints",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/rendering/box.dart",
                                            "name": "BoxConstraints"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            },
                            {
                                "name": "icon",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/text_button.dart",
                        "name": "TextButton"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/text_button.dart",
                                    "name": "TextButton"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "onPressed",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": false
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/theme_data.dart",
                        "name": "ThemeData"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/theme_data.dart",
                                    "name": "ThemeData"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "useMaterial3",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "colorSchemeSeed",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "primarySwatch",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/colors.dart",
                                            "name": "MaterialColor"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "primaryColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "primaryColorLight",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "primaryColorDark",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "canvasColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "scaffoldBackgroundColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "bottomAppBarColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "cardColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "dividerColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "highlightColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "splashColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "selectedRowColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "unselectedWidgetColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "disabledColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "buttonColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "secondaryHeaderColor",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "textTheme",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/text_theme.dart",
                                            "name": "TextTheme"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "primaryTextTheme",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/text_theme.dart",
                                            "name": "TextTheme"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {
                "useMaterial3": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -5,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "colorSchemeSeed": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "primarySwatch": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/colors.dart",
                                    "name": "MaterialColor"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "primaryColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "primaryColorLight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "primaryColorDark": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "canvasColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "scaffoldBackgroundColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "bottomAppBarColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "cardColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "dividerColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "highlightColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "splashColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "selectedRowColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "unselectedWidgetColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "disabledColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "buttonColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "secondaryHeaderColor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Color"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "textTheme": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/text_theme.dart",
                                    "name": "TextTheme"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "primaryTextTheme": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/text_theme.dart",
                                    "name": "TextTheme"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/theme.dart",
                        "name": "Theme"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/theme.dart",
                                    "name": "Theme"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "data",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/material/theme_data.dart",
                                            "name": "ThemeData"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {
                "of": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/theme_data.dart",
                                    "name": "ThemeData"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "context",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "BuildContext"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": true
                }
            },
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/material/elevated_button.dart",
                        "name": "ElevatedButton"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatefulWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/material/elevated_button.dart",
                                    "name": "ElevatedButton"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "child",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/widgets.dart",
                                            "name": "Widget"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "onPressed",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/basic.dart",
                        "name": "Builder"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/widgets.dart",
                        "name": "Widget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/basic.dart",
                                    "name": "Builder"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "builder",
                                "type": {
                                    "type": {
                                        "id": -12,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/alignment.dart",
                        "name": "AlignmentGeometry"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/alignment.dart",
                        "name": "Alignment"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/alignment.dart",
                        "name": "AlignmentGeometry"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "x",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "y",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {
                "x": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "y": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "topLeft": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "topCenter": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "topRight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "centerLeft": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "center": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "centerRight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "bottomLeft": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "bottomCenter": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                },
                "bottomRight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/alignment.dart",
                                    "name": "Alignment"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": true
                }
            },
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/rendering/object.dart",
                        "name": "Constraints"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {
                "isTight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -5,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "isNormalized": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -5,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/rendering/box.dart",
                        "name": "BoxConstraints"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/rendering/box.dart",
                                    "name": "BoxConstraints"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "minWidth",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "maxWidth",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "minHeight",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "maxHeight",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                },
                "tightFor": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/rendering/box.dart",
                                    "name": "BoxConstraints"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "width",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "height",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                },
                "tightForFinite": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/rendering/box.dart",
                                    "name": "BoxConstraints"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "width",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "height",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                },
                "expand": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/rendering/box.dart",
                                    "name": "BoxConstraints"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "width",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "height",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {
                "minWidth": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "maxWidth": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "minHeight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                },
                "maxHeight": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "ParametricCurve"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "ParametricCurve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {
                "transform": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "id": -9,
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "t",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isStatic": false
                }
            },
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "_Linear"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "_": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "_Linear"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "SawTooth"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "SawTooth"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "count",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Interval"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "Interval"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "begin",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "end",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "curve",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/animation/curves.dart",
                                            "name": "Curve"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Threshold"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "Threshold"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "threshold",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Cubic"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "Cubic"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "a",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "b",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "c",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "d",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "_DecelerateCurve"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "_": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "_DecelerateCurve"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "ElasticInCurve"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "ElasticInCurve"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "period",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "ElasticOutCurve"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "ElasticOutCurve"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "period",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "ElasticInOutCurve"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/animation/curves.dart",
                        "name": "Curve"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/animation/curves.dart",
                                    "name": "ElasticInOutCurve"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "period",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "dart:ui",
                        "name": "Size"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "dart:ui",
                                    "name": "Size"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "width",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            },
                            {
                                "name": "height",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": []
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/icon_data.dart",
                        "name": "IconData"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/icon_data.dart",
                                    "name": "IconData"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "codePoint",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": [
                            {
                                "name": "fontFamily",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "fontPackage",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "matchTextDirection",
                                "type": {
                                    "type": {
                                        "id": -5,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/icon.dart",
                        "name": "Icon"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/icon.dart",
                                    "name": "Icon"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [
                            {
                                "name": "icon",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/widgets/icon_data.dart",
                                            "name": "IconData"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "size",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "semanticLabel",
                                "type": {
                                    "type": {
                                        "id": -7,
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "textDirection",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "TextDirection"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/spacer.dart",
                        "name": "Spacer"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "unresolved": {
                        "library": "package:flutter/src/widgets/framework.dart",
                        "name": "StatelessWidget"
                    },
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/widgets/spacer.dart",
                                    "name": "Spacer"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "key",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/foundation/key.dart",
                                            "name": "Key"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "flex",
                                "type": {
                                    "type": {
                                        "id": -8,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": false
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/decoration.dart",
                        "name": "Decoration"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/box_decoration.dart",
                        "name": "BoxDecoration"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/box_decoration.dart",
                                    "name": "BoxDecoration"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "border",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/box_border.dart",
                                            "name": "BoxBorder"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": true
                                },
                                "optional": true
                            },
                            {
                                "name": "boxShadow",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:core",
                                            "name": "List"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/borders.dart",
                        "name": "BorderSide"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/borders.dart",
                                    "name": "BorderSide"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "width",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "style",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/box_border.dart",
                        "name": "BoxBorder"
                    },
                    "typeArgs": []
                },
                "isAbstract": true,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {},
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        },
        {
            "type": {
                "type": {
                    "unresolved": {
                        "library": "package:flutter/src/painting/box_border.dart",
                        "name": "Border"
                    },
                    "typeArgs": []
                },
                "isAbstract": false,
                "$extends": {
                    "id": -4,
                    "typeArgs": []
                },
                "$implements": [],
                "$with": [],
                "generics": {}
            },
            "constructors": {
                "": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/box_border.dart",
                                    "name": "Border"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "top",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderSide"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "right",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderSide"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "bottom",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderSide"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "left",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderSide"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                },
                "all": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/box_border.dart",
                                    "name": "Border"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "color",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "dart:ui",
                                            "name": "Color"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "width",
                                "type": {
                                    "type": {
                                        "id": -9,
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "style",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderStyle"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": true
                },
                "fromBorderSide": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/box_border.dart",
                                    "name": "Border"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "side",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderSide"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                },
                "symmetric": {
                    "functionDescriptor": {
                        "returns": {
                            "type": {
                                "unresolved": {
                                    "library": "package:flutter/src/painting/box_border.dart",
                                    "name": "Border"
                                },
                                "typeArgs": []
                            },
                            "nullable": false
                        },
                        "generics": {},
                        "params": [],
                        "namedParams": [
                            {
                                "name": "vertical",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderSide"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            },
                            {
                                "name": "horizontal",
                                "type": {
                                    "type": {
                                        "unresolved": {
                                            "library": "package:flutter/src/painting/borders.dart",
                                            "name": "BorderSide"
                                        },
                                        "typeArgs": []
                                    },
                                    "nullable": false
                                },
                                "optional": true
                            }
                        ]
                    },
                    "isFactory": false
                }
            },
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {},
            "bridge": false,
            "wrap": true
        }
    ],
    "enums": [
        {
            "type": {
                "unresolved": {
                    "library": "package:flutter/src/rendering/flex.dart",
                    "name": "MainAxisAlignment"
                },
                "typeArgs": []
            },
            "values": [
                "start",
                "end",
                "center",
                "spaceBetween",
                "spaceAround",
                "spaceEvenly"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "package:flutter/src/rendering/flex.dart",
                    "name": "CrossAxisAlignment"
                },
                "typeArgs": []
            },
            "values": [
                "start",
                "end",
                "center",
                "stretch",
                "baseline"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "package:flutter/src/rendering/flex.dart",
                    "name": "MainAxisSize"
                },
                "typeArgs": []
            },
            "values": [
                "min",
                "max"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "dart:ui",
                    "name": "FontWeight"
                },
                "typeArgs": []
            },
            "values": [
                "w100",
                "w200",
                "w300",
                "w400",
                "w500",
                "w600",
                "w700",
                "w800",
                "w900"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "dart:ui",
                    "name": "FontStyle"
                },
                "typeArgs": []
            },
            "values": [
                "normal",
                "italic"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "dart:ui",
                    "name": "TextDirection"
                },
                "typeArgs": []
            },
            "values": [
                "rtl",
                "ltr"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "package:flutter/src/painting/basic_types.dart",
                    "name": "VerticalDirection"
                },
                "typeArgs": []
            },
            "values": [
                "up",
                "down"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "dart:ui",
                    "name": "TextBaseline"
                },
                "typeArgs": []
            },
            "values": [
                "alphabetic",
                "ideographic"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "package:flutter/src/painting/basic_types.dart",
                    "name": "Axis"
                },
                "typeArgs": []
            },
            "values": [
                "horizontal",
                "vertical"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        },
        {
            "type": {
                "unresolved": {
                    "library": "package:flutter/src/painting/borders.dart",
                    "name": "BorderStyle"
                },
                "typeArgs": []
            },
            "values": [
                "solid",
                "none"
            ],
            "methods": {},
            "getters": {},
            "setters": {},
            "fields": {}
        }
    ],
    "sources": [
        {
            "uri": "dart:ui",
            "source": "library dart.ui;\n"
        },
        {
            "uri": "package:flutter/animation.dart",
            "source": "library animation;\n\nexport 'package:flutter/src/animation/curves.dart';\n"
        },
        {
            "uri": "package:flutter/src/animation/curves.dart",
            "source": "class Curves {\n  Curves._();\n  static const Curve linear = _Linear._();\n  static const Curve decelerate = _DecelerateCurve._();\n  static const Cubic fastLinearToSlowEaseIn = Cubic(0.18, 1.0, 0.04, 1.0);\n  static const Cubic ease = Cubic(0.25, 0.1, 0.25, 1.0);\n  static const Cubic easeIn = Cubic(0.42, 0.0, 1.0, 1.0);\n  static const Cubic easeInToLinear = Cubic(0.67, 0.03, 0.65, 0.09);\n  static const Cubic easeInSine = Cubic(0.47, 0.0, 0.745, 0.715);\n  static const Cubic easeInQuad = Cubic(0.55, 0.085, 0.68, 0.53);\n  static const Cubic easeInCubic = Cubic(0.55, 0.055, 0.675, 0.19);\n  static const Cubic easeInQuart = Cubic(0.895, 0.03, 0.685, 0.22);\n  static const Cubic easeInQuint = Cubic(0.755, 0.05, 0.855, 0.06);\n  static const Cubic easeInExpo = Cubic(0.95, 0.05, 0.795, 0.035);\n  static const Cubic easeInCirc = Cubic(0.6, 0.04, 0.98, 0.335);\n  static const Cubic easeInBack = Cubic(0.6, -0.28, 0.735, 0.045);\n  static const Cubic easeOut = Cubic(0.0, 0.0, 0.58, 1.0);\n  static const Cubic linearToEaseOut = Cubic(0.35, 0.91, 0.33, 0.97);\n  static const Cubic easeOutSine = Cubic(0.39, 0.575, 0.565, 1.0);\n  static const Cubic easeOutQuad = Cubic(0.25, 0.46, 0.45, 0.94);\n  static const Cubic easeOutCubic = Cubic(0.215, 0.61, 0.355, 1.0);\n  static const Cubic easeOutQuart = Cubic(0.165, 0.84, 0.44, 1.0);\n  static const Cubic easeOutQuint = Cubic(0.23, 1.0, 0.32, 1.0);\n  static const Cubic easeOutExpo = Cubic(0.19, 1.0, 0.22, 1.0);\n  static const Cubic easeOutCirc = Cubic(0.075, 0.82, 0.165, 1.0);\n  static const Cubic easeOutBack = Cubic(0.175, 0.885, 0.32, 1.275);\n  static const Cubic easeInOut = Cubic(0.42, 0.0, 0.58, 1.0);\n  static const Cubic easeInOutSine = Cubic(0.445, 0.05, 0.55, 0.95);\n  static const Cubic easeInOutQuad = Cubic(0.455, 0.03, 0.515, 0.955);\n  static const Cubic easeInOutCubic = Cubic(0.645, 0.045, 0.355, 1.0);\n  /*\n  static const ThreePointCubic easeInOutCubicEmphasized = ThreePointCubic(\n      Offset(0.05, 0), Offset(0.133333, 0.06),\n      Offset(0.166666, 0.4),\n      Offset(0.208333, 0.82), Offset(0.25, 1),\n  );\n  */\n  static const Cubic easeInOutQuart = Cubic(0.77, 0.0, 0.175, 1.0);\n  static const Cubic easeInOutQuint = Cubic(0.86, 0.0, 0.07, 1.0);\n  static const Cubic easeInOutExpo = Cubic(1.0, 0.0, 0.0, 1.0);\n  static const Cubic easeInOutCirc = Cubic(0.785, 0.135, 0.15, 0.86);\n  static const Cubic easeInOutBack = Cubic(0.68, -0.55, 0.265, 1.55);\n\n  static const Cubic fastOutSlowIn = Cubic(0.4, 0.0, 0.2, 1.0);\n  static const Cubic slowMiddle = Cubic(0.15, 0.85, 0.85, 0.15);\n\n  static const ElasticInCurve elasticIn = ElasticInCurve();\n  static const ElasticOutCurve elasticOut = ElasticOutCurve();\n  static const ElasticInOutCurve elasticInOut = ElasticInOutCurve();\n}\n"
        },
        {
            "uri": "package:flutter/foundation.dart",
            "source": "library foundation;\nexport 'package:flutter/src/foundation/change_notifier.dart';\nexport 'package:flutter/src/foundation/key.dart';\n"
        },
        {
            "uri": "package:flutter/material.dart",
            "source": "library material;\n\nexport 'package:flutter/widgets.dart';\nexport 'package:flutter/src/material/app.dart';\nexport 'package:flutter/src/material/app_bar.dart';\nexport 'package:flutter/src/material/colors.dart';\nexport 'package:flutter/src/material/elevated_button.dart';\nexport 'package:flutter/src/material/floating_action_button.dart';\nexport 'package:flutter/src/material/icons.dart';\nexport 'package:flutter/src/material/scaffold.dart';\nexport 'package:flutter/src/material/snack_bar.dart';\nexport 'package:flutter/src/material/icon_button.dart';\nexport 'package:flutter/src/material/text_button.dart';\nexport 'package:flutter/src/material/text_field.dart';\nexport 'package:flutter/src/material/text_theme.dart';\nexport 'package:flutter/src/material/theme_data.dart';\nexport 'package:flutter/src/material/theme.dart';\n"
        },
        {
            "uri": "package:flutter/src/material/colors.dart",
            "source": "import 'package:flutter/painting.dart';\nclass Colors {\n  // This class is not meant to be instantiated or extended; this constructor\n  // prevents instantiation and extension.\n  Colors._();\n\n  /// Completely invisible.\n  static const Color transparent = Color(0x00000000);\n\n  /// Completely opaque black.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blacks.png)\n  ///\n  /// See also:\n  ///\n  ///  * [black87], [black54], [black45], [black38], [black26], [black12], which\n  ///    are variants on this color but with different opacities.\n  ///  * [white], a solid white color.\n  ///  * [transparent], a fully-transparent color.\n  static const Color black = Color(0xFF000000);\n\n  /// Black with 87% opacity.\n  ///\n  /// This is a good contrasting color for text in light themes.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blacks.png)\n  ///\n  /// See also:\n  ///\n  ///  * [Typography.black], which uses this color for its text styles.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [black], [black54], [black45], [black38], [black26], [black12], which\n  ///    are variants on this color but with different opacities.\n  static const Color black87 = Color(0xDD000000);\n\n  /// Black with 54% opacity.\n  ///\n  /// This is a color commonly used for headings in light themes. It's also used\n  /// as the mask color behind dialogs.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blacks.png)\n  ///\n  /// See also:\n  ///\n  ///  * [Typography.black], which uses this color for its text styles.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [black], [black87], [black45], [black38], [black26], [black12], which\n  ///    are variants on this color but with different opacities.\n  static const Color black54 = Color(0x8A000000);\n\n  /// Black with 45% opacity.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blacks.png)\n  ///\n  /// See also:\n  ///\n  ///  * [black], [black87], [black54], [black38], [black26], [black12], which\n  ///    are variants on this color but with different opacities.\n  static const Color black45 = Color(0x73000000);\n\n  /// Black with 38% opacity.\n  ///\n  /// For light themes, i.e. when the Theme's [ThemeData.brightness] is\n  /// [Brightness.light], this color is used for disabled icons and for\n  /// placeholder text in [DataTable].\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blacks.png)\n  ///\n  /// See also:\n  ///\n  ///  * [black], [black87], [black54], [black45], [black26], [black12], which\n  ///    are variants on this color but with different opacities.\n  static const Color black38 = Color(0x61000000);\n\n  /// Black with 26% opacity.\n  ///\n  /// Used for disabled radio buttons and the text of disabled flat buttons in light themes.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blacks.png)\n  ///\n  /// See also:\n  ///\n  ///  * [ThemeData.disabledColor], which uses this color by default in light themes.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [black], [black87], [black54], [black45], [black38], [black12], which\n  ///    are variants on this color but with different opacities.\n  static const Color black26 = Color(0x42000000);\n\n  /// Black with 12% opacity.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blacks.png)\n  ///\n  /// Used for the background of disabled raised buttons in light themes.\n  ///\n  /// See also:\n  ///\n  ///  * [black], [black87], [black54], [black45], [black38], [black26], which\n  ///    are variants on this color but with different opacities.\n  static const Color black12 = Color(0x1F000000);\n\n  /// Completely opaque white.\n  ///\n  /// This is a good contrasting color for the [ThemeData.primaryColor] in the\n  /// dark theme. See [ThemeData.brightness].\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// See also:\n  ///\n  ///  * [Typography.white], which uses this color for its text styles.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [white70], [white60], [white54], [white38], [white30], [white12],\n  ///    [white10], which are variants on this color but with different\n  ///    opacities.\n  ///  * [black], a solid black color.\n  ///  * [transparent], a fully-transparent color.\n  static const Color white = Color(0xFFFFFFFF);\n\n  /// White with 70% opacity.\n  ///\n  /// This is a color commonly used for headings in dark themes.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// See also:\n  ///\n  ///  * [Typography.white], which uses this color for its text styles.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [white], [white60], [white54], [white38], [white30], [white12],\n  ///    [white10], which are variants on this color but with different\n  ///    opacities.\n  static const Color white70 = Color(0xB3FFFFFF);\n\n  /// White with 60% opacity.\n  ///\n  /// Used for medium-emphasis text and hint text when [ThemeData.brightness] is\n  /// set to [Brightness.dark].\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// See also:\n  ///\n  ///  * [ExpandIcon], which uses this color for dark themes.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [white], [white54], [white30], [white38], [white12], [white10], which\n  ///    are variants on this color but with different opacities.\n  static const Color white60 = Color(0x99FFFFFF);\n\n  /// White with 54% opacity.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// See also:\n  ///\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [white], [white60], [white38], [white30], [white12], [white10], which\n  ///    are variants on this color but with different opacities.\n  static const Color white54 = Color(0x8AFFFFFF);\n\n  /// White with 38% opacity.\n  ///\n  /// Used for disabled radio buttons and the text of disabled flat buttons in dark themes.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// See also:\n  ///\n  ///  * [ThemeData.disabledColor], which uses this color by default in dark themes.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [white], [white60], [white54], [white70], [white30], [white12],\n  ///    [white10], which are variants on this color but with different\n  ///    opacities.\n  static const Color white38 = Color(0x62FFFFFF);\n\n  /// White with 30% opacity.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// See also:\n  ///\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  ///  * [white], [white60], [white54], [white70], [white38], [white12],\n  ///    [white10], which are variants on this color but with different\n  ///    opacities.\n  static const Color white30 = Color(0x4DFFFFFF);\n\n  /// White with 24% opacity.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// Used for the splash color for filled buttons.\n  ///\n  /// See also:\n  ///\n  ///  * [white], [white60], [white54], [white70], [white38], [white30],\n  ///    [white10], which are variants on this color\n  ///    but with different opacities.\n  static const Color white24 = Color(0x3DFFFFFF);\n\n  /// White with 12% opacity.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// Used for the background of disabled raised buttons in dark themes.\n  ///\n  /// See also:\n  ///\n  ///  * [white], [white60], [white54], [white70], [white38], [white30],\n  ///    [white10], which are variants on this color but with different\n  ///    opacities.\n  static const Color white12 = Color(0x1FFFFFFF);\n\n  /// White with 10% opacity.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.whites.png)\n  ///\n  /// See also:\n  ///\n  ///  * [white], [white60], [white54], [white70], [white38], [white30],\n  ///    [white12], which are variants on this color\n  ///    but with different opacities.\n  ///  * [transparent], a fully-transparent color, not far from this one.\n  static const Color white10 = Color(0x1AFFFFFF);\n\n  /// The red primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.red.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.redAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pink.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pinkAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.red[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [redAccent], the corresponding accent colors.\n  ///  * [deepOrange] and [pink], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _redPrimaryValue = 0xFFF44336;\n\n  static const MaterialColor red = MaterialColor(\n    _redPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFFFEBEE),\n      100: Color(0xFFFFCDD2),\n      200: Color(0xFFEF9A9A),\n      300: Color(0xFFE57373),\n      400: Color(0xFFEF5350),\n      500: Color(_redPrimaryValue),\n      600: Color(0xFFE53935),\n      700: Color(0xFFD32F2F),\n      800: Color(0xFFC62828),\n      900: Color(0xFFB71C1C),\n    },\n  );\n\n  /// The red accent swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.red.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.redAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pink.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pinkAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.redAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [red], the corresponding primary colors.\n  ///  * [deepOrangeAccent] and [pinkAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _redAccentValue = 0xFFFF5252;\n\n  static const MaterialAccentColor redAccent = MaterialAccentColor(\n    _redAccentValue,\n    <int, Color>{\n      100: Color(0xFFFF8A80),\n      200: Color(_redAccentValue),\n      400: Color(0xFFFF1744),\n      700: Color(0xFFD50000),\n    },\n  );\n\n  /// The pink primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pink.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pinkAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.red.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.redAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purpleAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.pink[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [pinkAccent], the corresponding accent colors.\n  ///  * [red] and [purple], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _pinkPrimaryValue = 0xFFE91E63;\n\n  static const MaterialColor pink = MaterialColor(\n    _pinkPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFFCE4EC),\n      100: Color(0xFFF8BBD0),\n      200: Color(0xFFF48FB1),\n      300: Color(0xFFF06292),\n      400: Color(0xFFEC407A),\n      500: Color(_pinkPrimaryValue),\n      600: Color(0xFFD81B60),\n      700: Color(0xFFC2185B),\n      800: Color(0xFFAD1457),\n      900: Color(0xFF880E4F),\n    },\n  );\n\n  /// The pink accent color swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pink.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pinkAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.red.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.redAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purpleAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.pinkAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [pink], the corresponding primary colors.\n  ///  * [redAccent] and [purpleAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _pinkAccentPrimaryValue = 0xFFFF4081;\n  static const MaterialAccentColor pinkAccent = MaterialAccentColor(\n    _pinkAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFFF80AB),\n      200: Color(_pinkAccentPrimaryValue),\n      400: Color(0xFFF50057),\n      700: Color(0xFFC51162),\n    },\n  );\n\n  /// The purple primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pink.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pinkAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.purple[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [purpleAccent], the corresponding accent colors.\n  ///  * [deepPurple] and [pink], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _purplePrimaryValue = 0xFF9C27B0;\n  static const MaterialColor purple = MaterialColor(\n    _purplePrimaryValue,\n    <int, Color>{\n       50: Color(0xFFF3E5F5),\n      100: Color(0xFFE1BEE7),\n      200: Color(0xFFCE93D8),\n      300: Color(0xFFBA68C8),\n      400: Color(0xFFAB47BC),\n      500: Color(_purplePrimaryValue),\n      600: Color(0xFF8E24AA),\n      700: Color(0xFF7B1FA2),\n      800: Color(0xFF6A1B9A),\n      900: Color(0xFF4A148C),\n    },\n  );\n\n  /// The purple accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pink.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.pinkAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.purpleAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [purple], the corresponding primary colors.\n  ///  * [deepPurpleAccent] and [pinkAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _purpleAccentPrimaryValue = 0xFFE040FB;\n  static const MaterialAccentColor purpleAccent = MaterialAccentColor(\n    _purpleAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFEA80FC),\n      200: Color(_purpleAccentPrimaryValue),\n      400: Color(0xFFD500F9),\n      700: Color(0xFFAA00FF),\n    },\n  );\n\n  /// The deep purple primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigo.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigoAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.deepPurple[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [deepPurpleAccent], the corresponding accent colors.\n  ///  * [purple] and [indigo], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _deepPurplePrimaryValue = 0xFF673AB7;\n  static const MaterialColor deepPurple = MaterialColor(\n    _deepPurplePrimaryValue,\n    <int, Color>{\n       50: Color(0xFFEDE7F6),\n      100: Color(0xFFD1C4E9),\n      200: Color(0xFFB39DDB),\n      300: Color(0xFF9575CD),\n      400: Color(0xFF7E57C2),\n      500: Color(_deepPurplePrimaryValue),\n      600: Color(0xFF5E35B1),\n      700: Color(0xFF512DA8),\n      800: Color(0xFF4527A0),\n      900: Color(0xFF311B92),\n    },\n  );\n\n  /// The deep purple accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.purpleAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigo.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigoAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.deepPurpleAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [deepPurple], the corresponding primary colors.\n  ///  * [purpleAccent] and [indigoAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _deepPurpleAccentPrimaryValue = 0xFF7C4DFF;\n  static const MaterialAccentColor deepPurpleAccent = MaterialAccentColor(\n    _deepPurpleAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFB388FF),\n      200: Color(_deepPurpleAccentPrimaryValue),\n      400: Color(0xFF651FFF),\n      700: Color(0xFF6200EA),\n    },\n  );\n\n  /// The indigo primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigo.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigoAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurpleAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.indigo[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [indigoAccent], the corresponding accent colors.\n  ///  * [blue] and [deepPurple], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _indigoPrimaryValue = 0xFF3F51B5;\n  static const MaterialColor indigo = MaterialColor(\n    _indigoPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFE8EAF6),\n      100: Color(0xFFC5CAE9),\n      200: Color(0xFF9FA8DA),\n      300: Color(0xFF7986CB),\n      400: Color(0xFF5C6BC0),\n      500: Color(_indigoPrimaryValue),\n      600: Color(0xFF3949AB),\n      700: Color(0xFF303F9F),\n      800: Color(0xFF283593),\n      900: Color(0xFF1A237E),\n    },\n  );\n\n  /// The indigo accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigo.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigoAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurple.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepPurpleAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.indigoAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [indigo], the corresponding primary colors.\n  ///  * [blueAccent] and [deepPurpleAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _indigoAccentPrimaryValue = 0xFF536DFE;\n  static const MaterialAccentColor indigoAccent = MaterialAccentColor(\n    _indigoAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFF8C9EFF),\n      200: Color(_indigoAccentPrimaryValue),\n      400: Color(0xFF3D5AFE),\n      700: Color(0xFF304FFE),\n    },\n  );\n\n  /// The blue primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigo.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigoAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueGrey.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.blue[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [blueAccent], the corresponding accent colors.\n  ///  * [indigo], [lightBlue], and [blueGrey], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _bluePrimaryValue = 0xFF2196F3;\n  static const MaterialColor blue = MaterialColor(\n    _bluePrimaryValue,\n    <int, Color>{\n       50: Color(0xFFE3F2FD),\n      100: Color(0xFFBBDEFB),\n      200: Color(0xFF90CAF9),\n      300: Color(0xFF64B5F6),\n      400: Color(0xFF42A5F5),\n      500: Color(_bluePrimaryValue),\n      600: Color(0xFF1E88E5),\n      700: Color(0xFF1976D2),\n      800: Color(0xFF1565C0),\n      900: Color(0xFF0D47A1),\n    },\n  );\n\n  /// The blue accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigo.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.indigoAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlueAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.blueAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [blue], the corresponding primary colors.\n  ///  * [indigoAccent] and [lightBlueAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _blueAccentPrimaryValue = 0xFF448AFF;\n  static const MaterialAccentColor blueAccent = MaterialAccentColor(\n    _blueAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFF82B1FF),\n      200: Color(_blueAccentPrimaryValue),\n      400: Color(0xFF2979FF),\n      700: Color(0xFF2962FF),\n    },\n  );\n\n  /// The light blue primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyan.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyanAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.lightBlue[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [lightBlueAccent], the corresponding accent colors.\n  ///  * [blue] and [cyan], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _lightBluePrimaryValue = 0xFF03A9F4;\n  static const MaterialColor lightBlue = MaterialColor(\n    _lightBluePrimaryValue,\n    <int, Color>{\n       50: Color(0xFFE1F5FE),\n      100: Color(0xFFB3E5FC),\n      200: Color(0xFF81D4FA),\n      300: Color(0xFF4FC3F7),\n      400: Color(0xFF29B6F6),\n      500: Color(_lightBluePrimaryValue),\n      600: Color(0xFF039BE5),\n      700: Color(0xFF0288D1),\n      800: Color(0xFF0277BD),\n      900: Color(0xFF01579B),\n    },\n  );\n\n  /// The light blue accent swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyan.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyanAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.lightBlueAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [lightBlue], the corresponding primary colors.\n  ///  * [blueAccent] and [cyanAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _lightBlueAccentPrimaryValue = 0xFF40C4FF;\n  static const MaterialAccentColor lightBlueAccent = MaterialAccentColor(\n    _lightBlueAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFF80D8FF),\n      200: Color(_lightBlueAccentPrimaryValue),\n      400: Color(0xFF00B0FF),\n      700: Color(0xFF0091EA),\n    },\n  );\n\n  /// The cyan primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyan.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyanAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.teal.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.tealAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueGrey.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.cyan[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [cyanAccent], the corresponding accent colors.\n  ///  * [lightBlue], [teal], and [blueGrey], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _cyanPrimaryValue = 0xFF00BCD4;\n  static const MaterialColor cyan = MaterialColor(\n    _cyanPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFE0F7FA),\n      100: Color(0xFFB2EBF2),\n      200: Color(0xFF80DEEA),\n      300: Color(0xFF4DD0E1),\n      400: Color(0xFF26C6DA),\n      500: Color(_cyanPrimaryValue),\n      600: Color(0xFF00ACC1),\n      700: Color(0xFF0097A7),\n      800: Color(0xFF00838F),\n      900: Color(0xFF006064),\n    },\n  );\n\n  /// The cyan accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyan.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyanAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlue.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightBlueAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.teal.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.tealAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.cyanAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [cyan], the corresponding primary colors.\n  ///  * [lightBlueAccent] and [tealAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _cyanAccentPrimaryValue = 0xFF18FFFF;\n  static const MaterialAccentColor cyanAccent = MaterialAccentColor(\n    _cyanAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFF84FFFF),\n      200: Color(_cyanAccentPrimaryValue),\n      400: Color(0xFF00E5FF),\n      700: Color(0xFF00B8D4),\n    },\n  );\n\n  /// The teal primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.teal.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.tealAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.green.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.greenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyan.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyanAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.teal[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [tealAccent], the corresponding accent colors.\n  ///  * [green] and [cyan], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _tealPrimaryValue = 0xFF009688;\n  static const MaterialColor teal = MaterialColor(\n    _tealPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFE0F2F1),\n      100: Color(0xFFB2DFDB),\n      200: Color(0xFF80CBC4),\n      300: Color(0xFF4DB6AC),\n      400: Color(0xFF26A69A),\n      500: Color(_tealPrimaryValue),\n      600: Color(0xFF00897B),\n      700: Color(0xFF00796B),\n      800: Color(0xFF00695C),\n      900: Color(0xFF004D40),\n    },\n  );\n\n  /// The teal accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.teal.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.tealAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.green.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.greenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyan.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyanAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.tealAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [teal], the corresponding primary colors.\n  ///  * [greenAccent] and [cyanAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _tealAccentPrimaryValue = 0xFF64FFDA;\n  static const MaterialAccentColor tealAccent = MaterialAccentColor(\n    _tealAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFA7FFEB),\n      200: Color(_tealAccentPrimaryValue),\n      400: Color(0xFF1DE9B6),\n      700: Color(0xFF00BFA5),\n    },\n  );\n\n  /// The green primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.green.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.greenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.teal.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.tealAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreen.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.green[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [greenAccent], the corresponding accent colors.\n  ///  * [teal], [lightGreen], and [lime], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _greenPrimaryValue = 0xFF4CAF50;\n  static const MaterialColor green = MaterialColor(\n    _greenPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFE8F5E9),\n      100: Color(0xFFC8E6C9),\n      200: Color(0xFFA5D6A7),\n      300: Color(0xFF81C784),\n      400: Color(0xFF66BB6A),\n      500: Color(_greenPrimaryValue),\n      600: Color(0xFF43A047),\n      700: Color(0xFF388E3C),\n      800: Color(0xFF2E7D32),\n      900: Color(0xFF1B5E20),\n    },\n  );\n\n  /// The green accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.green.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.greenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.teal.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.tealAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreen.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.greenAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [green], the corresponding primary colors.\n  ///  * [tealAccent], [lightGreenAccent], and [limeAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _greenAccentPrimaryValue = 0xFF69F0AE;\n  static const MaterialAccentColor greenAccent = MaterialAccentColor(\n    _greenAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFB9F6CA),\n      200: Color(_greenAccentPrimaryValue),\n      400: Color(0xFF00E676),\n      700: Color(0xFF00C853),\n    },\n  );\n\n  /// The light green primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreen.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.green.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.greenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.lightGreen[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [lightGreenAccent], the corresponding accent colors.\n  ///  * [green] and [lime], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _lightGreenPrimaryValue = 0xFF8BC34A;\n  static const MaterialColor lightGreen = MaterialColor(\n    _lightGreenPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFF1F8E9),\n      100: Color(0xFFDCEDC8),\n      200: Color(0xFFC5E1A5),\n      300: Color(0xFFAED581),\n      400: Color(0xFF9CCC65),\n      500: Color(_lightGreenPrimaryValue),\n      600: Color(0xFF7CB342),\n      700: Color(0xFF689F38),\n      800: Color(0xFF558B2F),\n      900: Color(0xFF33691E),\n    },\n  );\n\n  /// The light green accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreen.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.green.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.greenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.lightGreenAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [lightGreen], the corresponding primary colors.\n  ///  * [greenAccent] and [limeAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _lightGreenAccentPrimaryValue = 0xFFB2FF59;\n  static const MaterialAccentColor lightGreenAccent = MaterialAccentColor(\n    _lightGreenAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFCCFF90),\n      200: Color(_lightGreenAccentPrimaryValue),\n      400: Color(0xFF76FF03),\n      700: Color(0xFF64DD17),\n    },\n  );\n\n  /// The lime primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreen.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellow.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellowAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.lime[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [limeAccent], the corresponding accent colors.\n  ///  * [lightGreen] and [yellow], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _limePrimaryValue = 0xFFCDDC39;\n  static const MaterialColor lime = MaterialColor(\n    _limePrimaryValue,\n    <int, Color>{\n       50: Color(0xFFF9FBE7),\n      100: Color(0xFFF0F4C3),\n      200: Color(0xFFE6EE9C),\n      300: Color(0xFFDCE775),\n      400: Color(0xFFD4E157),\n      500: Color(_limePrimaryValue),\n      600: Color(0xFFC0CA33),\n      700: Color(0xFFAFB42B),\n      800: Color(0xFF9E9D24),\n      900: Color(0xFF827717),\n    },\n  );\n\n  /// The lime accent primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreen.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lightGreenAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellow.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellowAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.limeAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [lime], the corresponding primary colors.\n  ///  * [lightGreenAccent] and [yellowAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _limeAccentPrimaryValue = 0xFFEEFF41;\n  static const MaterialAccentColor limeAccent = MaterialAccentColor(\n    _limeAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFF4FF81),\n      200: Color(_limeAccentPrimaryValue),\n      400: Color(0xFFC6FF00),\n      700: Color(0xFFAEEA00),\n    },\n  );\n\n  /// The yellow primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellow.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellowAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amber.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amberAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.yellow[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [yellowAccent], the corresponding accent colors.\n  ///  * [lime] and [amber], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _yellowPrimaryValue = 0xFFFFEB3B;\n  static const MaterialColor yellow = MaterialColor(\n    _yellowPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFFFFDE7),\n      100: Color(0xFFFFF9C4),\n      200: Color(0xFFFFF59D),\n      300: Color(0xFFFFF176),\n      400: Color(0xFFFFEE58),\n      500: Color(_yellowPrimaryValue),\n      600: Color(0xFFFDD835),\n      700: Color(0xFFFBC02D),\n      800: Color(0xFFF9A825),\n      900: Color(0xFFF57F17),\n    },\n  );\n\n  /// The yellow accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellow.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellowAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.lime.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.limeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amber.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amberAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.yellowAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [yellow], the corresponding primary colors.\n  ///  * [limeAccent] and [amberAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _yellowAccentPrimaryValue = 0xFFFFFF00;\n  static const MaterialAccentColor yellowAccent = MaterialAccentColor(\n    _yellowAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFFFFF8D),\n      200: Color(_yellowAccentPrimaryValue),\n      400: Color(0xFFFFEA00),\n      700: Color(0xFFFFD600),\n    },\n  );\n\n  /// The amber primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amber.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amberAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellow.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellowAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orangeAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.amber[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [amberAccent], the corresponding accent colors.\n  ///  * [yellow] and [orange], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _amberPrimaryValue = 0xFFFFC107;\n  static const MaterialColor amber = MaterialColor(\n    _amberPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFFFF8E1),\n      100: Color(0xFFFFECB3),\n      200: Color(0xFFFFE082),\n      300: Color(0xFFFFD54F),\n      400: Color(0xFFFFCA28),\n      500: Color(_amberPrimaryValue),\n      600: Color(0xFFFFB300),\n      700: Color(0xFFFFA000),\n      800: Color(0xFFFF8F00),\n      900: Color(0xFFFF6F00),\n    },\n  );\n\n  /// The amber accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amber.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amberAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellow.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.yellowAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orangeAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.amberAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [amber], the corresponding primary colors.\n  ///  * [yellowAccent] and [orangeAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _amberAccentPrimaryValue = 0xFFFFD740;\n  static const MaterialAccentColor amberAccent = MaterialAccentColor(\n    _amberAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFFFE57F),\n      200: Color(_amberAccentPrimaryValue),\n      400: Color(0xFFFFC400),\n      700: Color(0xFFFFAB00),\n    },\n  );\n\n  /// The orange primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amber.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amberAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.brown.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.orange[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [orangeAccent], the corresponding accent colors.\n  ///  * [amber], [deepOrange], and [brown], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _orangePrimaryValue = 0xFFFF9800;\n  static const MaterialColor orange = MaterialColor(\n    _orangePrimaryValue,\n    <int, Color>{\n       50: Color(0xFFFFF3E0),\n      100: Color(0xFFFFE0B2),\n      200: Color(0xFFFFCC80),\n      300: Color(0xFFFFB74D),\n      400: Color(0xFFFFA726),\n      500: Color(_orangePrimaryValue),\n      600: Color(0xFFFB8C00),\n      700: Color(0xFFF57C00),\n      800: Color(0xFFEF6C00),\n      900: Color(0xFFE65100),\n    },\n  );\n\n\n  /// The orange accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amber.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.amberAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrangeAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.orangeAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [orange], the corresponding primary colors.\n  ///  * [amberAccent] and [deepOrangeAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _orangeAccentPrimaryValue = 0xFFFFAB40;\n  static const MaterialAccentColor orangeAccent = MaterialAccentColor(\n    _orangeAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFFFD180),\n      200: Color(_orangeAccentPrimaryValue),\n      400: Color(0xFFFF9100),\n      700: Color(0xFFFF6D00),\n    },\n  );\n\n\n  /// The deep orange primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.red.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.redAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.brown.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.deepOrange[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [deepOrangeAccent], the corresponding accent colors.\n  ///  * [orange], [red], and [brown], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _deepOrangePrimaryValue = 0xFFFF5722;\n  static const MaterialColor deepOrange = MaterialColor(\n    _deepOrangePrimaryValue,\n    <int, Color>{\n       50: Color(0xFFFBE9E7),\n      100: Color(0xFFFFCCBC),\n      200: Color(0xFFFFAB91),\n      300: Color(0xFFFF8A65),\n      400: Color(0xFFFF7043),\n      500: Color(_deepOrangePrimaryValue),\n      600: Color(0xFFF4511E),\n      700: Color(0xFFE64A19),\n      800: Color(0xFFD84315),\n      900: Color(0xFFBF360C),\n    },\n  );\n\n\n  /// The deep orange accent color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.deepOrangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orange.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orangeAccent.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.red.png)\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.redAccent.png)\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.deepOrangeAccent[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [deepOrange], the corresponding primary colors.\n  ///  * [orangeAccent] [redAccent], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _deepOrangeAccentPrimaryValue = 0xFFFF6E40;\n\n  static const MaterialAccentColor deepOrangeAccent = MaterialAccentColor(\n    _deepOrangeAccentPrimaryValue,\n    <int, Color>{\n      100: Color(0xFFFF9E80),\n      200: Color(_deepOrangeAccentPrimaryValue),\n      400: Color(0xFFFF3D00),\n      700: Color(0xFFDD2C00),\n    },\n  );\n\n  /// The brown primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.brown.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.orange.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueGrey.png)\n  ///\n  /// This swatch has no corresponding accent color and swatch.\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.brown[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [orange] and [blueGrey], vaguely similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  \n  static const int _brownPrimaryValue = 0xFF795548;\n  static const MaterialColor brown = MaterialColor(\n    _brownPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFEFEBE9),\n      100: Color(0xFFD7CCC8),\n      200: Color(0xFFBCAAA4),\n      300: Color(0xFFA1887F),\n      400: Color(0xFF8D6E63),\n      500: Color(_brownPrimaryValue),\n      600: Color(0xFF6D4C41),\n      700: Color(0xFF5D4037),\n      800: Color(0xFF4E342E),\n      900: Color(0xFF3E2723),\n    },\n  );\n\n  /// The grey primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.grey.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueGrey.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.brown.png)\n  ///\n  /// This swatch has no corresponding accent swatch.\n  ///\n  /// This swatch, in addition to the values 50 and 100 to 900 in 100\n  /// increments, also features the special values 350 and 850. The 350 value is\n  /// used for raised button while pressed in light themes, and 850 is used for\n  /// the background color of the dark theme. See [ThemeData.brightness].\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.grey[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [blueGrey] and [brown], somewhat similar colors.\n  ///  * [black], [black87], [black54], [black45], [black38], [black26], [black12], which\n  ///    provide a different approach to showing shades of grey.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _greyPrimaryValue = 0xFF9E9E9E;\n  static const MaterialColor grey = MaterialColor(\n    _greyPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFFAFAFA),\n      100: Color(0xFFF5F5F5),\n      200: Color(0xFFEEEEEE),\n      300: Color(0xFFE0E0E0),\n      350: Color(0xFFD6D6D6), // only for raised button while pressed in light theme\n      400: Color(0xFFBDBDBD),\n      500: Color(_greyPrimaryValue),\n      600: Color(0xFF757575),\n      700: Color(0xFF616161),\n      800: Color(0xFF424242),\n      850: Color(0xFF303030), // only for background color in dark theme\n      900: Color(0xFF212121),\n    },\n  );\n\n  /// The blue-grey primary color and swatch.\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blueGrey.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.grey.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.cyan.png)\n  ///\n  /// ![](https://flutter.github.io/assets-for-api-docs/assets/material/Colors.blue.png)\n  ///\n  /// This swatch has no corresponding accent swatch.\n  ///\n  /// {@tool snippet}\n  ///\n  /// ```dart\n  /// Icon(\n  ///   Icons.widgets,\n  ///   color: Colors.blueGrey[400],\n  /// )\n  /// ```\n  /// {@end-tool}\n  ///\n  /// See also:\n  ///\n  ///  * [grey], [cyan], and [blue], similar colors.\n  ///  * [Theme.of], which allows you to select colors from the current theme\n  ///    rather than hard-coding colors in your build methods.\n  static const int _blueGreyPrimaryValue = 0xFF607D8B;\n  \n  static const MaterialColor blueGrey = MaterialColor(\n    _blueGreyPrimaryValue,\n    <int, Color>{\n       50: Color(0xFFECEFF1),\n      100: Color(0xFFCFD8DC),\n      200: Color(0xFFB0BEC5),\n      300: Color(0xFF90A4AE),\n      400: Color(0xFF78909C),\n      500: Color(_blueGreyPrimaryValue),\n      600: Color(0xFF546E7A),\n      700: Color(0xFF455A64),\n      800: Color(0xFF37474F),\n      900: Color(0xFF263238),\n    },\n  );\n\n}\n\n\n"
        },
        {
            "uri": "package:flutter/src/material/icons.dart",
            "source": "import 'package:flutter/widgets.dart';\n\nclass Icons {\n  // This class is not meant to be instantiated or extended; this constructor\n  // prevents instantiation and extension.\n  Icons._();\n  static const IconData ten_k = IconData(0xe000, fontFamily: 'MaterialIcons');\n  static const IconData ten_mp = IconData(0xe001, fontFamily: 'MaterialIcons');\n  static const IconData eleven_mp = IconData(0xe002, fontFamily: 'MaterialIcons');\n  static const IconData onetwothree = IconData(0xf04b5, fontFamily: 'MaterialIcons');\n  static const IconData twelve_mp = IconData(0xe003, fontFamily: 'MaterialIcons');\n  static const IconData thirteen_mp = IconData(0xe004, fontFamily: 'MaterialIcons');\n  static const IconData fourteen_mp = IconData(0xe005, fontFamily: 'MaterialIcons');\n  static const IconData fifteen_mp = IconData(0xe006, fontFamily: 'MaterialIcons');\n  static const IconData sixteen_mp = IconData(0xe007, fontFamily: 'MaterialIcons');\n  static const IconData seventeen_mp = IconData(0xe008, fontFamily: 'MaterialIcons');\n  static const IconData eighteen_up_rating = IconData(0xf0784, fontFamily: 'MaterialIcons');\n  static const IconData eighteen_mp = IconData(0xe009, fontFamily: 'MaterialIcons');\n  static const IconData nineteen_mp = IconData(0xe00a, fontFamily: 'MaterialIcons');\n  static const IconData one_k = IconData(0xe00b, fontFamily: 'MaterialIcons');\n  static const IconData one_k_plus = IconData(0xe00c, fontFamily: 'MaterialIcons');\n  static const IconData one_x_mobiledata = IconData(0xe00d, fontFamily: 'MaterialIcons');\n  static const IconData twenty_mp = IconData(0xe00e, fontFamily: 'MaterialIcons');\n  static const IconData twenty_one_mp = IconData(0xe00f, fontFamily: 'MaterialIcons');\n  static const IconData twenty_two_mp = IconData(0xe010, fontFamily: 'MaterialIcons');\n  static const IconData twenty_three_mp = IconData(0xe011, fontFamily: 'MaterialIcons');\n  static const IconData twenty_four_mp = IconData(0xe012, fontFamily: 'MaterialIcons');\n  static const IconData two_k = IconData(0xe013, fontFamily: 'MaterialIcons');\n  static const IconData two_k_plus = IconData(0xe014, fontFamily: 'MaterialIcons');\n  static const IconData two_mp = IconData(0xe015, fontFamily: 'MaterialIcons');\n  static const IconData thirty_fps = IconData(0xe016, fontFamily: 'MaterialIcons');\n  static const IconData thirty_fps_select = IconData(0xe017, fontFamily: 'MaterialIcons');\n  static const IconData threesixty = IconData(0xe018, fontFamily: 'MaterialIcons');\n  static const IconData threed_rotation = IconData(0xe019, fontFamily: 'MaterialIcons');\n  static const IconData three_g_mobiledata = IconData(0xe01a, fontFamily: 'MaterialIcons');\n  static const IconData three_k = IconData(0xe01b, fontFamily: 'MaterialIcons');\n  static const IconData three_k_plus = IconData(0xe01c, fontFamily: 'MaterialIcons');\n  static const IconData three_mp = IconData(0xe01d, fontFamily: 'MaterialIcons');\n  static const IconData three_p = IconData(0xe01e, fontFamily: 'MaterialIcons');\n  static const IconData four_g_mobiledata = IconData(0xe01f, fontFamily: 'MaterialIcons');\n  static const IconData four_g_plus_mobiledata = IconData(0xe020, fontFamily: 'MaterialIcons');\n  static const IconData four_k = IconData(0xe021, fontFamily: 'MaterialIcons');\n  static const IconData four_k_plus = IconData(0xe022, fontFamily: 'MaterialIcons');\n  static const IconData four_mp = IconData(0xe023, fontFamily: 'MaterialIcons');\n  static const IconData five_g = IconData(0xe024, fontFamily: 'MaterialIcons');\n  static const IconData five_k = IconData(0xe025, fontFamily: 'MaterialIcons');\n  static const IconData five_k_plus = IconData(0xe026, fontFamily: 'MaterialIcons');\n  static const IconData five_mp = IconData(0xe027, fontFamily: 'MaterialIcons');\n  static const IconData sixty_fps = IconData(0xe028, fontFamily: 'MaterialIcons');\n  static const IconData sixty_fps_select = IconData(0xe029, fontFamily: 'MaterialIcons');\n  static const IconData six_ft_apart = IconData(0xe02a, fontFamily: 'MaterialIcons');\n  static const IconData six_k = IconData(0xe02b, fontFamily: 'MaterialIcons');\n  static const IconData six_k_plus = IconData(0xe02c, fontFamily: 'MaterialIcons');\n  static const IconData six_mp = IconData(0xe02d, fontFamily: 'MaterialIcons');\n  static const IconData seven_k = IconData(0xe02e, fontFamily: 'MaterialIcons');\n  static const IconData seven_k_plus = IconData(0xe02f, fontFamily: 'MaterialIcons');\n  static const IconData seven_mp = IconData(0xe030, fontFamily: 'MaterialIcons');\n  static const IconData eight_k = IconData(0xe031, fontFamily: 'MaterialIcons');\n  static const IconData eight_k_plus = IconData(0xe032, fontFamily: 'MaterialIcons');\n  static const IconData eight_mp = IconData(0xe033, fontFamily: 'MaterialIcons');\n  static const IconData nine_k = IconData(0xe034, fontFamily: 'MaterialIcons');\n  static const IconData nine_k_plus = IconData(0xe035, fontFamily: 'MaterialIcons');\n  static const IconData nine_mp = IconData(0xe036, fontFamily: 'MaterialIcons');\n  static const IconData abc = IconData(0xf04b6, fontFamily: 'MaterialIcons');\n  static const IconData ac_unit = IconData(0xe037, fontFamily: 'MaterialIcons');\n  static const IconData access_alarm = IconData(0xe038, fontFamily: 'MaterialIcons');\n  static const IconData access_alarms = IconData(0xe039, fontFamily: 'MaterialIcons');\n  static const IconData access_time = IconData(0xe03a, fontFamily: 'MaterialIcons');\n  static const IconData access_time_filled = IconData(0xe03b, fontFamily: 'MaterialIcons');\n  static const IconData accessibility = IconData(0xe03c, fontFamily: 'MaterialIcons');\n  static const IconData accessibility_new = IconData(0xe03d, fontFamily: 'MaterialIcons');\n  static const IconData accessible = IconData(0xe03e, fontFamily: 'MaterialIcons');\n  static const IconData accessible_forward = IconData(0xe03f, fontFamily: 'MaterialIcons');\n  static const IconData account_balance = IconData(0xe040, fontFamily: 'MaterialIcons');\n  static const IconData account_balance_wallet = IconData(0xe041, fontFamily: 'MaterialIcons');\n  static const IconData account_box = IconData(0xe042, fontFamily: 'MaterialIcons');\n  static const IconData account_circle = IconData(0xe043, fontFamily: 'MaterialIcons');\n  static const IconData account_tree = IconData(0xe044, fontFamily: 'MaterialIcons');\n  static const IconData ad_units = IconData(0xe045, fontFamily: 'MaterialIcons');\n  static const IconData adb = IconData(0xe046, fontFamily: 'MaterialIcons');\n  static const IconData add = IconData(0xe047, fontFamily: 'MaterialIcons');\n  static const IconData add_a_photo = IconData(0xe048, fontFamily: 'MaterialIcons');\n  static const IconData add_alarm = IconData(0xe049, fontFamily: 'MaterialIcons');\n  static const IconData add_alert = IconData(0xe04a, fontFamily: 'MaterialIcons');\n  static const IconData add_box = IconData(0xe04b, fontFamily: 'MaterialIcons');\n  static const IconData add_business = IconData(0xe04c, fontFamily: 'MaterialIcons');\n  static const IconData add_call = IconData(0xe04d, fontFamily: 'MaterialIcons');\n  static const IconData add_card = IconData(0xf04b7, fontFamily: 'MaterialIcons');\n  static const IconData add_chart = IconData(0xe04e, fontFamily: 'MaterialIcons');\n  static const IconData add_circle = IconData(0xe04f, fontFamily: 'MaterialIcons');\n  static const IconData add_circle_outline = IconData(0xe050, fontFamily: 'MaterialIcons');\n  static const IconData add_comment = IconData(0xe051, fontFamily: 'MaterialIcons');\n  static const IconData add_home = IconData(0xf0785, fontFamily: 'MaterialIcons');\n  static const IconData add_home_work = IconData(0xf0786, fontFamily: 'MaterialIcons');\n  static const IconData add_ic_call = IconData(0xe052, fontFamily: 'MaterialIcons');\n  static const IconData add_link = IconData(0xe053, fontFamily: 'MaterialIcons');\n  static const IconData add_location = IconData(0xe054, fontFamily: 'MaterialIcons');\n  static const IconData add_location_alt = IconData(0xe055, fontFamily: 'MaterialIcons');\n  static const IconData add_moderator = IconData(0xe056, fontFamily: 'MaterialIcons');\n  static const IconData add_photo_alternate = IconData(0xe057, fontFamily: 'MaterialIcons');\n  static const IconData add_reaction = IconData(0xe058, fontFamily: 'MaterialIcons');\n  static const IconData add_road = IconData(0xe059, fontFamily: 'MaterialIcons');\n  static const IconData add_shopping_cart = IconData(0xe05a, fontFamily: 'MaterialIcons');\n  static const IconData add_task = IconData(0xe05b, fontFamily: 'MaterialIcons');\n  static const IconData add_to_drive = IconData(0xe05c, fontFamily: 'MaterialIcons');\n  static const IconData add_to_home_screen = IconData(0xe05d, fontFamily: 'MaterialIcons');\n  static const IconData add_to_photos = IconData(0xe05e, fontFamily: 'MaterialIcons');\n  static const IconData add_to_queue = IconData(0xe05f, fontFamily: 'MaterialIcons');\n  static const IconData addchart = IconData(0xe060, fontFamily: 'MaterialIcons');\n  static const IconData adf_scanner = IconData(0xf04b8, fontFamily: 'MaterialIcons');\n  static const IconData adjust = IconData(0xe061, fontFamily: 'MaterialIcons');\n  static const IconData admin_panel_settings = IconData(0xe062, fontFamily: 'MaterialIcons');\n  static const IconData adobe = IconData(0xf04b9, fontFamily: 'MaterialIcons');\n  static const IconData ads_click = IconData(0xf04ba, fontFamily: 'MaterialIcons');\n  static const IconData agriculture = IconData(0xe063, fontFamily: 'MaterialIcons');\n  static const IconData air = IconData(0xe064, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_flat = IconData(0xe065, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_flat_angled = IconData(0xe066, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_individual_suite = IconData(0xe067, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_legroom_extra = IconData(0xe068, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_legroom_normal = IconData(0xe069, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_legroom_reduced = IconData(0xe06a, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_recline_extra = IconData(0xe06b, fontFamily: 'MaterialIcons');\n  static const IconData airline_seat_recline_normal = IconData(0xe06c, fontFamily: 'MaterialIcons');\n  static const IconData airline_stops = IconData(0xf04bb, fontFamily: 'MaterialIcons');\n  static const IconData airlines = IconData(0xf04bc, fontFamily: 'MaterialIcons');\n  static const IconData airplane_ticket = IconData(0xe06d, fontFamily: 'MaterialIcons');\n  static const IconData airplanemode_active = IconData(0xe06e, fontFamily: 'MaterialIcons');\n  static const IconData airplanemode_inactive = IconData(0xe06f, fontFamily: 'MaterialIcons');\n  static const IconData airplanemode_off = IconData(0xe06f, fontFamily: 'MaterialIcons');\n  static const IconData airplanemode_on = IconData(0xe06e, fontFamily: 'MaterialIcons');\n  static const IconData airplay = IconData(0xe070, fontFamily: 'MaterialIcons');\n  static const IconData airport_shuttle = IconData(0xe071, fontFamily: 'MaterialIcons');\n  static const IconData alarm = IconData(0xe072, fontFamily: 'MaterialIcons');\n  static const IconData alarm_add = IconData(0xe073, fontFamily: 'MaterialIcons');\n  static const IconData alarm_off = IconData(0xe074, fontFamily: 'MaterialIcons');\n  static const IconData alarm_on = IconData(0xe075, fontFamily: 'MaterialIcons');\n  static const IconData album = IconData(0xe076, fontFamily: 'MaterialIcons');\n  static const IconData align_horizontal_center = IconData(0xe077, fontFamily: 'MaterialIcons');\n  static const IconData align_horizontal_left = IconData(0xe078, fontFamily: 'MaterialIcons');\n  static const IconData align_horizontal_right = IconData(0xe079, fontFamily: 'MaterialIcons');\n  static const IconData align_vertical_bottom = IconData(0xe07a, fontFamily: 'MaterialIcons');\n  static const IconData align_vertical_center = IconData(0xe07b, fontFamily: 'MaterialIcons');\n  static const IconData align_vertical_top = IconData(0xe07c, fontFamily: 'MaterialIcons');\n  static const IconData all_inbox = IconData(0xe07d, fontFamily: 'MaterialIcons');\n  static const IconData all_inclusive = IconData(0xe07e, fontFamily: 'MaterialIcons');\n  static const IconData all_out = IconData(0xe07f, fontFamily: 'MaterialIcons');\n  static const IconData alt_route = IconData(0xe080, fontFamily: 'MaterialIcons');\n  static const IconData alternate_email = IconData(0xe081, fontFamily: 'MaterialIcons');\n  static const IconData amp_stories = IconData(0xe082, fontFamily: 'MaterialIcons');\n  static const IconData analytics = IconData(0xe083, fontFamily: 'MaterialIcons');\n  static const IconData anchor = IconData(0xe084, fontFamily: 'MaterialIcons');\n  static const IconData android = IconData(0xe085, fontFamily: 'MaterialIcons');\n  static const IconData animation = IconData(0xe086, fontFamily: 'MaterialIcons');\n  static const IconData announcement = IconData(0xe087, fontFamily: 'MaterialIcons');\n  static const IconData aod = IconData(0xe088, fontFamily: 'MaterialIcons');\n  static const IconData apartment = IconData(0xe089, fontFamily: 'MaterialIcons');\n  static const IconData api = IconData(0xe08a, fontFamily: 'MaterialIcons');\n  static const IconData app_blocking = IconData(0xe08b, fontFamily: 'MaterialIcons');\n  static const IconData app_registration = IconData(0xe08c, fontFamily: 'MaterialIcons');\n  static const IconData app_settings_alt = IconData(0xe08d, fontFamily: 'MaterialIcons');\n  static const IconData app_shortcut = IconData(0xf04bd, fontFamily: 'MaterialIcons');\n  static const IconData apple = IconData(0xf04be, fontFamily: 'MaterialIcons');\n  static const IconData approval = IconData(0xe08e, fontFamily: 'MaterialIcons');\n  static const IconData apps = IconData(0xe08f, fontFamily: 'MaterialIcons');\n  static const IconData apps_outage = IconData(0xf04bf, fontFamily: 'MaterialIcons');\n  static const IconData architecture = IconData(0xe090, fontFamily: 'MaterialIcons');\n  static const IconData archive = IconData(0xe091, fontFamily: 'MaterialIcons');\n  static const IconData area_chart = IconData(0xf04c0, fontFamily: 'MaterialIcons');\n  static const IconData arrow_back = IconData(0xe092, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData arrow_back_ios = IconData(0xe093, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData arrow_back_ios_new = IconData(0xe094, fontFamily: 'MaterialIcons');\n  static const IconData arrow_circle_down = IconData(0xe095, fontFamily: 'MaterialIcons');\n  static const IconData arrow_circle_left = IconData(0xf04c1, fontFamily: 'MaterialIcons');\n  static const IconData arrow_circle_right = IconData(0xf04c2, fontFamily: 'MaterialIcons');\n  static const IconData arrow_circle_up = IconData(0xe096, fontFamily: 'MaterialIcons');\n  static const IconData arrow_downward = IconData(0xe097, fontFamily: 'MaterialIcons');\n  static const IconData arrow_drop_down = IconData(0xe098, fontFamily: 'MaterialIcons');\n  static const IconData arrow_drop_down_circle = IconData(0xe099, fontFamily: 'MaterialIcons');\n  static const IconData arrow_drop_up = IconData(0xe09a, fontFamily: 'MaterialIcons');\n  static const IconData arrow_forward = IconData(0xe09b, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData arrow_forward_ios = IconData(0xe09c, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData arrow_left = IconData(0xe09d, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData arrow_right = IconData(0xe09e, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData arrow_right_alt = IconData(0xe09f, fontFamily: 'MaterialIcons');\n  static const IconData arrow_upward = IconData(0xe0a0, fontFamily: 'MaterialIcons');\n  static const IconData art_track = IconData(0xe0a1, fontFamily: 'MaterialIcons');\n  static const IconData article = IconData(0xe0a2, fontFamily: 'MaterialIcons');\n  static const IconData aspect_ratio = IconData(0xe0a3, fontFamily: 'MaterialIcons');\n  static const IconData assessment = IconData(0xe0a4, fontFamily: 'MaterialIcons');\n  static const IconData assignment = IconData(0xe0a5, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData assignment_ind = IconData(0xe0a6, fontFamily: 'MaterialIcons');\n  static const IconData assignment_late = IconData(0xe0a7, fontFamily: 'MaterialIcons');\n  static const IconData assignment_return = IconData(0xe0a8, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData assignment_returned = IconData(0xe0a9, fontFamily: 'MaterialIcons');\n  static const IconData assignment_turned_in = IconData(0xe0aa, fontFamily: 'MaterialIcons');\n  static const IconData assistant = IconData(0xe0ab, fontFamily: 'MaterialIcons');\n  static const IconData assistant_direction = IconData(0xe0ac, fontFamily: 'MaterialIcons');\n  static const IconData assistant_navigation = IconData(0xe0ad, fontFamily: 'MaterialIcons');\n  static const IconData assistant_photo = IconData(0xe0ae, fontFamily: 'MaterialIcons');\n  static const IconData assured_workload = IconData(0xf04c3, fontFamily: 'MaterialIcons');\n  static const IconData atm = IconData(0xe0af, fontFamily: 'MaterialIcons');\n  static const IconData attach_email = IconData(0xe0b0, fontFamily: 'MaterialIcons');\n  static const IconData attach_file = IconData(0xe0b1, fontFamily: 'MaterialIcons');\n  static const IconData attach_money = IconData(0xe0b2, fontFamily: 'MaterialIcons');\n  static const IconData attachment = IconData(0xe0b3, fontFamily: 'MaterialIcons');\n  static const IconData attractions = IconData(0xe0b4, fontFamily: 'MaterialIcons');\n  static const IconData attribution = IconData(0xe0b5, fontFamily: 'MaterialIcons');\n  static const IconData audio_file = IconData(0xf04c4, fontFamily: 'MaterialIcons');\n  static const IconData audiotrack = IconData(0xe0b6, fontFamily: 'MaterialIcons');\n  static const IconData auto_awesome = IconData(0xe0b7, fontFamily: 'MaterialIcons');\n  static const IconData auto_awesome_mosaic = IconData(0xe0b8, fontFamily: 'MaterialIcons');\n  static const IconData auto_awesome_motion = IconData(0xe0b9, fontFamily: 'MaterialIcons');\n  static const IconData auto_delete = IconData(0xe0ba, fontFamily: 'MaterialIcons');\n  static const IconData auto_fix_high = IconData(0xe0bb, fontFamily: 'MaterialIcons');\n  static const IconData auto_fix_normal = IconData(0xe0bc, fontFamily: 'MaterialIcons');\n  static const IconData auto_fix_off = IconData(0xe0bd, fontFamily: 'MaterialIcons');\n  static const IconData auto_graph = IconData(0xe0be, fontFamily: 'MaterialIcons');\n  static const IconData auto_mode = IconData(0xf0787, fontFamily: 'MaterialIcons');\n  static const IconData auto_stories = IconData(0xe0bf, fontFamily: 'MaterialIcons');\n  static const IconData autofps_select = IconData(0xe0c0, fontFamily: 'MaterialIcons');\n  static const IconData autorenew = IconData(0xe0c1, fontFamily: 'MaterialIcons');\n  static const IconData av_timer = IconData(0xe0c2, fontFamily: 'MaterialIcons');\n  static const IconData baby_changing_station = IconData(0xe0c3, fontFamily: 'MaterialIcons');\n  static const IconData back_hand = IconData(0xf04c5, fontFamily: 'MaterialIcons');\n  static const IconData backpack = IconData(0xe0c4, fontFamily: 'MaterialIcons');\n  static const IconData backspace = IconData(0xe0c5, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData backup = IconData(0xe0c6, fontFamily: 'MaterialIcons');\n  static const IconData backup_table = IconData(0xe0c7, fontFamily: 'MaterialIcons');\n  static const IconData badge = IconData(0xe0c8, fontFamily: 'MaterialIcons');\n  static const IconData bakery_dining = IconData(0xe0c9, fontFamily: 'MaterialIcons');\n  static const IconData balance = IconData(0xf04c6, fontFamily: 'MaterialIcons');\n  static const IconData balcony = IconData(0xe0ca, fontFamily: 'MaterialIcons');\n  static const IconData ballot = IconData(0xe0cb, fontFamily: 'MaterialIcons');\n  static const IconData bar_chart = IconData(0xe0cc, fontFamily: 'MaterialIcons');\n  static const IconData batch_prediction = IconData(0xe0cd, fontFamily: 'MaterialIcons');\n  static const IconData bathroom = IconData(0xe0ce, fontFamily: 'MaterialIcons');\n  static const IconData bathtub = IconData(0xe0cf, fontFamily: 'MaterialIcons');\n  static const IconData battery_0_bar = IconData(0xf0788, fontFamily: 'MaterialIcons');\n  static const IconData battery_1_bar = IconData(0xf0789, fontFamily: 'MaterialIcons');\n  static const IconData battery_2_bar = IconData(0xf078a, fontFamily: 'MaterialIcons');\n  static const IconData battery_3_bar = IconData(0xf078b, fontFamily: 'MaterialIcons');\n  static const IconData battery_4_bar = IconData(0xf078c, fontFamily: 'MaterialIcons');\n  static const IconData battery_5_bar = IconData(0xf078d, fontFamily: 'MaterialIcons');\n  static const IconData battery_6_bar = IconData(0xf078e, fontFamily: 'MaterialIcons');\n  static const IconData battery_alert = IconData(0xe0d0, fontFamily: 'MaterialIcons');\n  static const IconData battery_charging_full = IconData(0xe0d1, fontFamily: 'MaterialIcons');\n  static const IconData battery_full = IconData(0xe0d2, fontFamily: 'MaterialIcons');\n  static const IconData battery_saver = IconData(0xe0d3, fontFamily: 'MaterialIcons');\n  static const IconData battery_std = IconData(0xe0d4, fontFamily: 'MaterialIcons');\n  static const IconData battery_unknown = IconData(0xe0d5, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData beach_access = IconData(0xe0d6, fontFamily: 'MaterialIcons');\n  static const IconData bed = IconData(0xe0d7, fontFamily: 'MaterialIcons');\n  static const IconData bedroom_baby = IconData(0xe0d8, fontFamily: 'MaterialIcons');\n  static const IconData bedroom_child = IconData(0xe0d9, fontFamily: 'MaterialIcons');\n  static const IconData bedroom_parent = IconData(0xe0da, fontFamily: 'MaterialIcons');\n  static const IconData bedtime = IconData(0xe0db, fontFamily: 'MaterialIcons');\n  static const IconData bedtime_off = IconData(0xf04c7, fontFamily: 'MaterialIcons');\n  static const IconData beenhere = IconData(0xe0dc, fontFamily: 'MaterialIcons');\n  static const IconData bento = IconData(0xe0dd, fontFamily: 'MaterialIcons');\n  static const IconData bike_scooter = IconData(0xe0de, fontFamily: 'MaterialIcons');\n  static const IconData biotech = IconData(0xe0df, fontFamily: 'MaterialIcons');\n  static const IconData blender = IconData(0xe0e0, fontFamily: 'MaterialIcons');\n  static const IconData blinds = IconData(0xf078f, fontFamily: 'MaterialIcons');\n  static const IconData blinds_closed = IconData(0xf0790, fontFamily: 'MaterialIcons');\n  static const IconData block = IconData(0xe0e1, fontFamily: 'MaterialIcons');\n  static const IconData block_flipped = IconData(0xe0e2, fontFamily: 'MaterialIcons');\n  static const IconData bloodtype = IconData(0xe0e3, fontFamily: 'MaterialIcons');\n  static const IconData bluetooth = IconData(0xe0e4, fontFamily: 'MaterialIcons');\n  static const IconData bluetooth_audio = IconData(0xe0e5, fontFamily: 'MaterialIcons');\n  static const IconData bluetooth_connected = IconData(0xe0e6, fontFamily: 'MaterialIcons');\n  static const IconData bluetooth_disabled = IconData(0xe0e7, fontFamily: 'MaterialIcons');\n  static const IconData bluetooth_drive = IconData(0xe0e8, fontFamily: 'MaterialIcons');\n  static const IconData bluetooth_searching = IconData(0xe0e9, fontFamily: 'MaterialIcons');\n  static const IconData blur_circular = IconData(0xe0ea, fontFamily: 'MaterialIcons');\n  static const IconData blur_linear = IconData(0xe0eb, fontFamily: 'MaterialIcons');\n  static const IconData blur_off = IconData(0xe0ec, fontFamily: 'MaterialIcons');\n  static const IconData blur_on = IconData(0xe0ed, fontFamily: 'MaterialIcons');\n  static const IconData bolt = IconData(0xe0ee, fontFamily: 'MaterialIcons');\n  static const IconData book = IconData(0xe0ef, fontFamily: 'MaterialIcons');\n  static const IconData book_online = IconData(0xe0f0, fontFamily: 'MaterialIcons');\n  static const IconData bookmark = IconData(0xe0f1, fontFamily: 'MaterialIcons');\n  static const IconData bookmark_add = IconData(0xe0f2, fontFamily: 'MaterialIcons');\n  static const IconData bookmark_added = IconData(0xe0f3, fontFamily: 'MaterialIcons');\n  static const IconData bookmark_border = IconData(0xe0f4, fontFamily: 'MaterialIcons');\n  static const IconData bookmark_outline = IconData(0xe0f4, fontFamily: 'MaterialIcons');\n  static const IconData bookmark_remove = IconData(0xe0f5, fontFamily: 'MaterialIcons');\n  static const IconData bookmarks = IconData(0xe0f6, fontFamily: 'MaterialIcons');\n  static const IconData border_all = IconData(0xe0f7, fontFamily: 'MaterialIcons');\n  static const IconData border_bottom = IconData(0xe0f8, fontFamily: 'MaterialIcons');\n  static const IconData border_clear = IconData(0xe0f9, fontFamily: 'MaterialIcons');\n  static const IconData border_color = IconData(0xe0fa, fontFamily: 'MaterialIcons');\n  static const IconData border_horizontal = IconData(0xe0fb, fontFamily: 'MaterialIcons');\n  static const IconData border_inner = IconData(0xe0fc, fontFamily: 'MaterialIcons');\n  static const IconData border_left = IconData(0xe0fd, fontFamily: 'MaterialIcons');\n  static const IconData border_outer = IconData(0xe0fe, fontFamily: 'MaterialIcons');\n  static const IconData border_right = IconData(0xe0ff, fontFamily: 'MaterialIcons');\n  static const IconData border_style = IconData(0xe100, fontFamily: 'MaterialIcons');\n  static const IconData border_top = IconData(0xe101, fontFamily: 'MaterialIcons');\n  static const IconData border_vertical = IconData(0xe102, fontFamily: 'MaterialIcons');\n  static const IconData boy = IconData(0xf04c8, fontFamily: 'MaterialIcons');\n  static const IconData branding_watermark = IconData(0xe103, fontFamily: 'MaterialIcons');\n  static const IconData breakfast_dining = IconData(0xe104, fontFamily: 'MaterialIcons');\n  static const IconData brightness_1 = IconData(0xe105, fontFamily: 'MaterialIcons');\n  static const IconData brightness_2 = IconData(0xe106, fontFamily: 'MaterialIcons');\n  static const IconData brightness_3 = IconData(0xe107, fontFamily: 'MaterialIcons');\n  static const IconData brightness_4 = IconData(0xe108, fontFamily: 'MaterialIcons');\n  static const IconData brightness_5 = IconData(0xe109, fontFamily: 'MaterialIcons');\n  static const IconData brightness_6 = IconData(0xe10a, fontFamily: 'MaterialIcons');\n  static const IconData brightness_7 = IconData(0xe10b, fontFamily: 'MaterialIcons');\n  static const IconData brightness_auto = IconData(0xe10c, fontFamily: 'MaterialIcons');\n  static const IconData brightness_high = IconData(0xe10d, fontFamily: 'MaterialIcons');\n  static const IconData brightness_low = IconData(0xe10e, fontFamily: 'MaterialIcons');\n  static const IconData brightness_medium = IconData(0xe10f, fontFamily: 'MaterialIcons');\n  static const IconData broadcast_on_home = IconData(0xf0791, fontFamily: 'MaterialIcons');\n  static const IconData broadcast_on_personal = IconData(0xf0792, fontFamily: 'MaterialIcons');\n  static const IconData broken_image = IconData(0xe110, fontFamily: 'MaterialIcons');\n  static const IconData browse_gallery = IconData(0xf06ba, fontFamily: 'MaterialIcons');\n  static const IconData browser_not_supported = IconData(0xe111, fontFamily: 'MaterialIcons');\n  static const IconData browser_updated = IconData(0xf04c9, fontFamily: 'MaterialIcons');\n  static const IconData brunch_dining = IconData(0xe112, fontFamily: 'MaterialIcons');\n  static const IconData brush = IconData(0xe113, fontFamily: 'MaterialIcons');\n  static const IconData bubble_chart = IconData(0xe114, fontFamily: 'MaterialIcons');\n  static const IconData bug_report = IconData(0xe115, fontFamily: 'MaterialIcons');\n  static const IconData build = IconData(0xe116, fontFamily: 'MaterialIcons');\n  static const IconData build_circle = IconData(0xe117, fontFamily: 'MaterialIcons');\n  static const IconData bungalow = IconData(0xe118, fontFamily: 'MaterialIcons');\n  static const IconData burst_mode = IconData(0xe119, fontFamily: 'MaterialIcons');\n  static const IconData bus_alert = IconData(0xe11a, fontFamily: 'MaterialIcons');\n  static const IconData business = IconData(0xe11b, fontFamily: 'MaterialIcons');\n  static const IconData business_center = IconData(0xe11c, fontFamily: 'MaterialIcons');\n  static const IconData cabin = IconData(0xe11d, fontFamily: 'MaterialIcons');\n  static const IconData cable = IconData(0xe11e, fontFamily: 'MaterialIcons');\n  static const IconData cached = IconData(0xe11f, fontFamily: 'MaterialIcons');\n  static const IconData cake = IconData(0xe120, fontFamily: 'MaterialIcons');\n  static const IconData calculate = IconData(0xe121, fontFamily: 'MaterialIcons');\n  static const IconData calendar_month = IconData(0xf06bb, fontFamily: 'MaterialIcons');\n  static const IconData calendar_today = IconData(0xe122, fontFamily: 'MaterialIcons');\n  static const IconData calendar_view_day = IconData(0xe123, fontFamily: 'MaterialIcons');\n  static const IconData calendar_view_month = IconData(0xe124, fontFamily: 'MaterialIcons');\n  static const IconData calendar_view_week = IconData(0xe125, fontFamily: 'MaterialIcons');\n  static const IconData call = IconData(0xe126, fontFamily: 'MaterialIcons');\n  static const IconData call_end = IconData(0xe127, fontFamily: 'MaterialIcons');\n  static const IconData call_made = IconData(0xe128, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData call_merge = IconData(0xe129, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData call_missed = IconData(0xe12a, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData call_missed_outgoing = IconData(0xe12b, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData call_received = IconData(0xe12c, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData call_split = IconData(0xe12d, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData call_to_action = IconData(0xe12e, fontFamily: 'MaterialIcons');\n  static const IconData camera = IconData(0xe12f, fontFamily: 'MaterialIcons');\n  static const IconData camera_alt = IconData(0xe130, fontFamily: 'MaterialIcons');\n  static const IconData camera_enhance = IconData(0xe131, fontFamily: 'MaterialIcons');\n  static const IconData camera_front = IconData(0xe132, fontFamily: 'MaterialIcons');\n  static const IconData camera_indoor = IconData(0xe133, fontFamily: 'MaterialIcons');\n  static const IconData camera_outdoor = IconData(0xe134, fontFamily: 'MaterialIcons');\n  static const IconData camera_rear = IconData(0xe135, fontFamily: 'MaterialIcons');\n  static const IconData camera_roll = IconData(0xe136, fontFamily: 'MaterialIcons');\n  static const IconData cameraswitch = IconData(0xe137, fontFamily: 'MaterialIcons');\n  static const IconData campaign = IconData(0xe138, fontFamily: 'MaterialIcons');\n  static const IconData cancel = IconData(0xe139, fontFamily: 'MaterialIcons');\n  static const IconData cancel_presentation = IconData(0xe13a, fontFamily: 'MaterialIcons');\n  static const IconData cancel_schedule_send = IconData(0xe13b, fontFamily: 'MaterialIcons');\n  static const IconData candlestick_chart = IconData(0xf04ca, fontFamily: 'MaterialIcons');\n  static const IconData car_crash = IconData(0xf0793, fontFamily: 'MaterialIcons');\n  static const IconData car_rental = IconData(0xe13c, fontFamily: 'MaterialIcons');\n  static const IconData car_repair = IconData(0xe13d, fontFamily: 'MaterialIcons');\n  static const IconData card_giftcard = IconData(0xe13e, fontFamily: 'MaterialIcons');\n  static const IconData card_membership = IconData(0xe13f, fontFamily: 'MaterialIcons');\n  static const IconData card_travel = IconData(0xe140, fontFamily: 'MaterialIcons');\n  static const IconData carpenter = IconData(0xe141, fontFamily: 'MaterialIcons');\n  static const IconData cases = IconData(0xe142, fontFamily: 'MaterialIcons');\n  static const IconData casino = IconData(0xe143, fontFamily: 'MaterialIcons');\n  static const IconData cast = IconData(0xe144, fontFamily: 'MaterialIcons');\n  static const IconData cast_connected = IconData(0xe145, fontFamily: 'MaterialIcons');\n  static const IconData cast_for_education = IconData(0xe146, fontFamily: 'MaterialIcons');\n  static const IconData castle = IconData(0xf04cb, fontFamily: 'MaterialIcons');\n  static const IconData catching_pokemon = IconData(0xe147, fontFamily: 'MaterialIcons');\n  static const IconData category = IconData(0xe148, fontFamily: 'MaterialIcons');\n  static const IconData celebration = IconData(0xe149, fontFamily: 'MaterialIcons');\n  static const IconData cell_tower = IconData(0xf04cc, fontFamily: 'MaterialIcons');\n  static const IconData cell_wifi = IconData(0xe14a, fontFamily: 'MaterialIcons');\n  static const IconData center_focus_strong = IconData(0xe14b, fontFamily: 'MaterialIcons');\n  static const IconData center_focus_weak = IconData(0xe14c, fontFamily: 'MaterialIcons');\n  static const IconData chair = IconData(0xe14d, fontFamily: 'MaterialIcons');\n  static const IconData chair_alt = IconData(0xe14e, fontFamily: 'MaterialIcons');\n  static const IconData chalet = IconData(0xe14f, fontFamily: 'MaterialIcons');\n  static const IconData change_circle = IconData(0xe150, fontFamily: 'MaterialIcons');\n  static const IconData change_history = IconData(0xe151, fontFamily: 'MaterialIcons');\n  static const IconData charging_station = IconData(0xe152, fontFamily: 'MaterialIcons');\n  static const IconData chat = IconData(0xe153, fontFamily: 'MaterialIcons');\n  static const IconData chat_bubble = IconData(0xe154, fontFamily: 'MaterialIcons');\n  static const IconData chat_bubble_outline = IconData(0xe155, fontFamily: 'MaterialIcons');\n  static const IconData check = IconData(0xe156, fontFamily: 'MaterialIcons');\n  static const IconData check_box = IconData(0xe157, fontFamily: 'MaterialIcons');\n  static const IconData check_box_outline_blank = IconData(0xe158, fontFamily: 'MaterialIcons');\n  static const IconData check_circle = IconData(0xe159, fontFamily: 'MaterialIcons');\n  static const IconData check_circle_outline = IconData(0xe15a, fontFamily: 'MaterialIcons');\n  static const IconData checklist = IconData(0xe15b, fontFamily: 'MaterialIcons');\n  static const IconData checklist_rtl = IconData(0xe15c, fontFamily: 'MaterialIcons');\n  static const IconData checkroom = IconData(0xe15d, fontFamily: 'MaterialIcons');\n  static const IconData chevron_left = IconData(0xe15e, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData chevron_right = IconData(0xe15f, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData child_care = IconData(0xe160, fontFamily: 'MaterialIcons');\n  static const IconData child_friendly = IconData(0xe161, fontFamily: 'MaterialIcons');\n  static const IconData chrome_reader_mode = IconData(0xe162, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData church = IconData(0xf04cd, fontFamily: 'MaterialIcons');\n  static const IconData circle = IconData(0xe163, fontFamily: 'MaterialIcons');\n  static const IconData circle_notifications = IconData(0xe164, fontFamily: 'MaterialIcons');\n  static const IconData class_ = IconData(0xe165, fontFamily: 'MaterialIcons');\n  static const IconData clean_hands = IconData(0xe166, fontFamily: 'MaterialIcons');\n  static const IconData cleaning_services = IconData(0xe167, fontFamily: 'MaterialIcons');\n  static const IconData clear = IconData(0xe168, fontFamily: 'MaterialIcons');\n  static const IconData clear_all = IconData(0xe169, fontFamily: 'MaterialIcons');\n  static const IconData close = IconData(0xe16a, fontFamily: 'MaterialIcons');\n  static const IconData close_fullscreen = IconData(0xe16b, fontFamily: 'MaterialIcons');\n  static const IconData closed_caption = IconData(0xe16c, fontFamily: 'MaterialIcons');\n  static const IconData closed_caption_disabled = IconData(0xe16d, fontFamily: 'MaterialIcons');\n  static const IconData closed_caption_off = IconData(0xe16e, fontFamily: 'MaterialIcons');\n  static const IconData cloud = IconData(0xe16f, fontFamily: 'MaterialIcons');\n  static const IconData cloud_circle = IconData(0xe170, fontFamily: 'MaterialIcons');\n  static const IconData cloud_done = IconData(0xe171, fontFamily: 'MaterialIcons');\n  static const IconData cloud_download = IconData(0xe172, fontFamily: 'MaterialIcons');\n  static const IconData cloud_off = IconData(0xe173, fontFamily: 'MaterialIcons');\n  static const IconData cloud_queue = IconData(0xe174, fontFamily: 'MaterialIcons');\n  static const IconData cloud_sync = IconData(0xf04ce, fontFamily: 'MaterialIcons');\n  static const IconData cloud_upload = IconData(0xe175, fontFamily: 'MaterialIcons');\n  static const IconData cloudy_snowing = IconData(0xf04cf, fontFamily: 'MaterialIcons');\n  static const IconData co2 = IconData(0xf04d0, fontFamily: 'MaterialIcons');\n  static const IconData co_present = IconData(0xf04d1, fontFamily: 'MaterialIcons');\n  static const IconData code = IconData(0xe176, fontFamily: 'MaterialIcons');\n  static const IconData code_off = IconData(0xe177, fontFamily: 'MaterialIcons');\n  static const IconData coffee = IconData(0xe178, fontFamily: 'MaterialIcons');\n  static const IconData coffee_maker = IconData(0xe179, fontFamily: 'MaterialIcons');\n  static const IconData collections = IconData(0xe17a, fontFamily: 'MaterialIcons');\n  static const IconData collections_bookmark = IconData(0xe17b, fontFamily: 'MaterialIcons');\n  static const IconData color_lens = IconData(0xe17c, fontFamily: 'MaterialIcons');\n  static const IconData colorize = IconData(0xe17d, fontFamily: 'MaterialIcons');\n  static const IconData comment = IconData(0xe17e, fontFamily: 'MaterialIcons');\n  static const IconData comment_bank = IconData(0xe17f, fontFamily: 'MaterialIcons');\n  static const IconData comments_disabled = IconData(0xf04d2, fontFamily: 'MaterialIcons');\n  static const IconData commit = IconData(0xf04d3, fontFamily: 'MaterialIcons');\n  static const IconData commute = IconData(0xe180, fontFamily: 'MaterialIcons');\n  static const IconData compare = IconData(0xe181, fontFamily: 'MaterialIcons');\n  static const IconData compare_arrows = IconData(0xe182, fontFamily: 'MaterialIcons');\n  static const IconData compass_calibration = IconData(0xe183, fontFamily: 'MaterialIcons');\n  static const IconData compost = IconData(0xf04d4, fontFamily: 'MaterialIcons');\n  static const IconData compress = IconData(0xe184, fontFamily: 'MaterialIcons');\n  static const IconData computer = IconData(0xe185, fontFamily: 'MaterialIcons');\n  static const IconData confirmation_num = IconData(0xe186, fontFamily: 'MaterialIcons');\n  static const IconData confirmation_number = IconData(0xe186, fontFamily: 'MaterialIcons');\n  static const IconData connect_without_contact = IconData(0xe187, fontFamily: 'MaterialIcons');\n  static const IconData connected_tv = IconData(0xe188, fontFamily: 'MaterialIcons');\n  static const IconData connecting_airports = IconData(0xf04d5, fontFamily: 'MaterialIcons');\n  static const IconData construction = IconData(0xe189, fontFamily: 'MaterialIcons');\n  static const IconData contact_mail = IconData(0xe18a, fontFamily: 'MaterialIcons');\n  static const IconData contact_page = IconData(0xe18b, fontFamily: 'MaterialIcons');\n  static const IconData contact_phone = IconData(0xe18c, fontFamily: 'MaterialIcons');\n  static const IconData contact_support = IconData(0xe18d, fontFamily: 'MaterialIcons');\n  static const IconData contactless = IconData(0xe18e, fontFamily: 'MaterialIcons');\n  static const IconData contacts = IconData(0xe18f, fontFamily: 'MaterialIcons');\n  static const IconData content_copy = IconData(0xe190, fontFamily: 'MaterialIcons');\n  static const IconData content_cut = IconData(0xe191, fontFamily: 'MaterialIcons');\n  static const IconData content_paste = IconData(0xe192, fontFamily: 'MaterialIcons');\n  static const IconData content_paste_go = IconData(0xf04d6, fontFamily: 'MaterialIcons');\n  static const IconData content_paste_off = IconData(0xe193, fontFamily: 'MaterialIcons');\n  static const IconData content_paste_search = IconData(0xf04d7, fontFamily: 'MaterialIcons');\n  static const IconData contrast = IconData(0xf04d8, fontFamily: 'MaterialIcons');\n  static const IconData control_camera = IconData(0xe194, fontFamily: 'MaterialIcons');\n  static const IconData control_point = IconData(0xe195, fontFamily: 'MaterialIcons');\n  static const IconData control_point_duplicate = IconData(0xe196, fontFamily: 'MaterialIcons');\n  static const IconData cookie = IconData(0xf04d9, fontFamily: 'MaterialIcons');\n  static const IconData copy = IconData(0xe190, fontFamily: 'MaterialIcons');\n  static const IconData copy_all = IconData(0xe197, fontFamily: 'MaterialIcons');\n  static const IconData copyright = IconData(0xe198, fontFamily: 'MaterialIcons');\n  static const IconData coronavirus = IconData(0xe199, fontFamily: 'MaterialIcons');\n  static const IconData corporate_fare = IconData(0xe19a, fontFamily: 'MaterialIcons');\n  static const IconData cottage = IconData(0xe19b, fontFamily: 'MaterialIcons');\n  static const IconData countertops = IconData(0xe19c, fontFamily: 'MaterialIcons');\n  static const IconData create = IconData(0xe19d, fontFamily: 'MaterialIcons');\n  static const IconData create_new_folder = IconData(0xe19e, fontFamily: 'MaterialIcons');\n  static const IconData credit_card = IconData(0xe19f, fontFamily: 'MaterialIcons');\n  static const IconData credit_card_off = IconData(0xe1a0, fontFamily: 'MaterialIcons');\n  static const IconData credit_score = IconData(0xe1a1, fontFamily: 'MaterialIcons');\n  static const IconData crib = IconData(0xe1a2, fontFamily: 'MaterialIcons');\n  static const IconData crisis_alert = IconData(0xf0794, fontFamily: 'MaterialIcons');\n  static const IconData crop = IconData(0xe1a3, fontFamily: 'MaterialIcons');\n  static const IconData crop_16_9 = IconData(0xe1a4, fontFamily: 'MaterialIcons');\n  static const IconData crop_3_2 = IconData(0xe1a5, fontFamily: 'MaterialIcons');\n  static const IconData crop_5_4 = IconData(0xe1a6, fontFamily: 'MaterialIcons');\n  static const IconData crop_7_5 = IconData(0xe1a7, fontFamily: 'MaterialIcons');\n  static const IconData crop_din = IconData(0xe1a8, fontFamily: 'MaterialIcons');\n  static const IconData crop_free = IconData(0xe1a9, fontFamily: 'MaterialIcons');\n  static const IconData crop_landscape = IconData(0xe1aa, fontFamily: 'MaterialIcons');\n  static const IconData crop_original = IconData(0xe1ab, fontFamily: 'MaterialIcons');\n  static const IconData crop_portrait = IconData(0xe1ac, fontFamily: 'MaterialIcons');\n  static const IconData crop_rotate = IconData(0xe1ad, fontFamily: 'MaterialIcons');\n  static const IconData crop_square = IconData(0xe1ae, fontFamily: 'MaterialIcons');\n  static const IconData cruelty_free = IconData(0xf04da, fontFamily: 'MaterialIcons');\n  static const IconData css = IconData(0xf04db, fontFamily: 'MaterialIcons');\n  static const IconData currency_bitcoin = IconData(0xf06bc, fontFamily: 'MaterialIcons');\n  static const IconData currency_exchange = IconData(0xf04dc, fontFamily: 'MaterialIcons');\n  static const IconData currency_franc = IconData(0xf04dd, fontFamily: 'MaterialIcons');\n  static const IconData currency_lira = IconData(0xf04de, fontFamily: 'MaterialIcons');\n  static const IconData currency_pound = IconData(0xf04df, fontFamily: 'MaterialIcons');\n  static const IconData currency_ruble = IconData(0xf04e0, fontFamily: 'MaterialIcons');\n  static const IconData currency_rupee = IconData(0xf04e1, fontFamily: 'MaterialIcons');\n  static const IconData currency_yen = IconData(0xf04e2, fontFamily: 'MaterialIcons');\n  static const IconData currency_yuan = IconData(0xf04e3, fontFamily: 'MaterialIcons');\n  static const IconData curtains = IconData(0xf0795, fontFamily: 'MaterialIcons');\n  static const IconData curtains_closed = IconData(0xf0796, fontFamily: 'MaterialIcons');\n  static const IconData cut = IconData(0xe191, fontFamily: 'MaterialIcons');\n  static const IconData cyclone = IconData(0xf0797, fontFamily: 'MaterialIcons');\n  static const IconData dangerous = IconData(0xe1af, fontFamily: 'MaterialIcons');\n  static const IconData dark_mode = IconData(0xe1b0, fontFamily: 'MaterialIcons');\n  static const IconData dashboard = IconData(0xe1b1, fontFamily: 'MaterialIcons');\n  static const IconData dashboard_customize = IconData(0xe1b2, fontFamily: 'MaterialIcons');\n  static const IconData data_array = IconData(0xf04e4, fontFamily: 'MaterialIcons');\n  static const IconData data_exploration = IconData(0xf04e5, fontFamily: 'MaterialIcons');\n  static const IconData data_object = IconData(0xf04e6, fontFamily: 'MaterialIcons');\n  static const IconData data_saver_off = IconData(0xe1b3, fontFamily: 'MaterialIcons');\n  static const IconData data_saver_on = IconData(0xe1b4, fontFamily: 'MaterialIcons');\n  static const IconData data_thresholding = IconData(0xf04e7, fontFamily: 'MaterialIcons');\n  static const IconData data_usage = IconData(0xe1b5, fontFamily: 'MaterialIcons');\n  static const IconData dataset = IconData(0xf0798, fontFamily: 'MaterialIcons');\n  static const IconData dataset_linked = IconData(0xf0799, fontFamily: 'MaterialIcons');\n  static const IconData date_range = IconData(0xe1b6, fontFamily: 'MaterialIcons');\n  static const IconData deblur = IconData(0xf04e8, fontFamily: 'MaterialIcons');\n  static const IconData deck = IconData(0xe1b7, fontFamily: 'MaterialIcons');\n  static const IconData dehaze = IconData(0xe1b8, fontFamily: 'MaterialIcons');\n  static const IconData delete = IconData(0xe1b9, fontFamily: 'MaterialIcons');\n  static const IconData delete_forever = IconData(0xe1ba, fontFamily: 'MaterialIcons');\n  static const IconData delete_outline = IconData(0xe1bb, fontFamily: 'MaterialIcons');\n  static const IconData delete_sweep = IconData(0xe1bc, fontFamily: 'MaterialIcons');\n  static const IconData delivery_dining = IconData(0xe1bd, fontFamily: 'MaterialIcons');\n  static const IconData density_large = IconData(0xf04e9, fontFamily: 'MaterialIcons');\n  static const IconData density_medium = IconData(0xf04ea, fontFamily: 'MaterialIcons');\n  static const IconData density_small = IconData(0xf04eb, fontFamily: 'MaterialIcons');\n  static const IconData departure_board = IconData(0xe1be, fontFamily: 'MaterialIcons');\n  static const IconData description = IconData(0xe1bf, fontFamily: 'MaterialIcons');\n  static const IconData deselect = IconData(0xf04ec, fontFamily: 'MaterialIcons');\n  static const IconData design_services = IconData(0xe1c0, fontFamily: 'MaterialIcons');\n  static const IconData desk = IconData(0xf079a, fontFamily: 'MaterialIcons');\n  static const IconData desktop_access_disabled = IconData(0xe1c1, fontFamily: 'MaterialIcons');\n  static const IconData desktop_mac = IconData(0xe1c2, fontFamily: 'MaterialIcons');\n  static const IconData desktop_windows = IconData(0xe1c3, fontFamily: 'MaterialIcons');\n  static const IconData details = IconData(0xe1c4, fontFamily: 'MaterialIcons');\n  static const IconData developer_board = IconData(0xe1c5, fontFamily: 'MaterialIcons');\n  static const IconData developer_board_off = IconData(0xe1c6, fontFamily: 'MaterialIcons');\n  static const IconData developer_mode = IconData(0xe1c7, fontFamily: 'MaterialIcons');\n  static const IconData device_hub = IconData(0xe1c8, fontFamily: 'MaterialIcons');\n  static const IconData device_thermostat = IconData(0xe1c9, fontFamily: 'MaterialIcons');\n  static const IconData device_unknown = IconData(0xe1ca, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData devices = IconData(0xe1cb, fontFamily: 'MaterialIcons');\n  static const IconData devices_fold = IconData(0xf079b, fontFamily: 'MaterialIcons');\n  static const IconData devices_other = IconData(0xe1cc, fontFamily: 'MaterialIcons');\n  static const IconData dialer_sip = IconData(0xe1cd, fontFamily: 'MaterialIcons');\n  static const IconData dialpad = IconData(0xe1ce, fontFamily: 'MaterialIcons');\n  static const IconData diamond = IconData(0xf04ed, fontFamily: 'MaterialIcons');\n  static const IconData difference = IconData(0xf04ee, fontFamily: 'MaterialIcons');\n  static const IconData dining = IconData(0xe1cf, fontFamily: 'MaterialIcons');\n  static const IconData dinner_dining = IconData(0xe1d0, fontFamily: 'MaterialIcons');\n  static const IconData directions = IconData(0xe1d1, fontFamily: 'MaterialIcons');\n  static const IconData directions_bike = IconData(0xe1d2, fontFamily: 'MaterialIcons');\n  static const IconData directions_boat = IconData(0xe1d3, fontFamily: 'MaterialIcons');\n  static const IconData directions_boat_filled = IconData(0xe1d4, fontFamily: 'MaterialIcons');\n  static const IconData directions_bus = IconData(0xe1d5, fontFamily: 'MaterialIcons');\n  static const IconData directions_bus_filled = IconData(0xe1d6, fontFamily: 'MaterialIcons');\n  static const IconData directions_car = IconData(0xe1d7, fontFamily: 'MaterialIcons');\n  static const IconData directions_car_filled = IconData(0xe1d8, fontFamily: 'MaterialIcons');\n  static const IconData directions_ferry = IconData(0xe1d3, fontFamily: 'MaterialIcons');\n  static const IconData directions_off = IconData(0xe1d9, fontFamily: 'MaterialIcons');\n  static const IconData directions_railway = IconData(0xe1da, fontFamily: 'MaterialIcons');\n  static const IconData directions_railway_filled = IconData(0xe1db, fontFamily: 'MaterialIcons');\n  static const IconData directions_run = IconData(0xe1dc, fontFamily: 'MaterialIcons');\n  static const IconData directions_subway = IconData(0xe1dd, fontFamily: 'MaterialIcons');\n  static const IconData directions_subway_filled = IconData(0xe1de, fontFamily: 'MaterialIcons');\n  static const IconData directions_train = IconData(0xe1da, fontFamily: 'MaterialIcons');\n  static const IconData directions_transit = IconData(0xe1df, fontFamily: 'MaterialIcons');\n  static const IconData directions_transit_filled = IconData(0xe1e0, fontFamily: 'MaterialIcons');\n  static const IconData directions_walk = IconData(0xe1e1, fontFamily: 'MaterialIcons');\n  static const IconData dirty_lens = IconData(0xe1e2, fontFamily: 'MaterialIcons');\n  static const IconData disabled_by_default = IconData(0xe1e3, fontFamily: 'MaterialIcons');\n  static const IconData disabled_visible = IconData(0xf04ef, fontFamily: 'MaterialIcons');\n  static const IconData disc_full = IconData(0xe1e4, fontFamily: 'MaterialIcons');\n  static const IconData discord = IconData(0xf04f0, fontFamily: 'MaterialIcons');\n  static const IconData discount = IconData(0xf06bd, fontFamily: 'MaterialIcons');\n  static const IconData display_settings = IconData(0xf04f1, fontFamily: 'MaterialIcons');\n  static const IconData dnd_forwardslash = IconData(0xe1eb, fontFamily: 'MaterialIcons');\n  static const IconData dns = IconData(0xe1e5, fontFamily: 'MaterialIcons');\n  static const IconData do_disturb = IconData(0xe1e6, fontFamily: 'MaterialIcons');\n  static const IconData do_disturb_alt = IconData(0xe1e7, fontFamily: 'MaterialIcons');\n  static const IconData do_disturb_off = IconData(0xe1e8, fontFamily: 'MaterialIcons');\n  static const IconData do_disturb_on = IconData(0xe1e9, fontFamily: 'MaterialIcons');\n  static const IconData do_not_disturb = IconData(0xe1ea, fontFamily: 'MaterialIcons');\n  static const IconData do_not_disturb_alt = IconData(0xe1eb, fontFamily: 'MaterialIcons');\n  static const IconData do_not_disturb_off = IconData(0xe1ec, fontFamily: 'MaterialIcons');\n  static const IconData do_not_disturb_on = IconData(0xe1ed, fontFamily: 'MaterialIcons');\n  static const IconData do_not_disturb_on_total_silence = IconData(0xe1ee, fontFamily: 'MaterialIcons');\n  static const IconData do_not_step = IconData(0xe1ef, fontFamily: 'MaterialIcons');\n  static const IconData do_not_touch = IconData(0xe1f0, fontFamily: 'MaterialIcons');\n  static const IconData dock = IconData(0xe1f1, fontFamily: 'MaterialIcons');\n  static const IconData document_scanner = IconData(0xe1f2, fontFamily: 'MaterialIcons');\n  static const IconData domain = IconData(0xe1f3, fontFamily: 'MaterialIcons');\n  static const IconData domain_add = IconData(0xf04f2, fontFamily: 'MaterialIcons');\n  static const IconData domain_disabled = IconData(0xe1f4, fontFamily: 'MaterialIcons');\n  static const IconData domain_verification = IconData(0xe1f5, fontFamily: 'MaterialIcons');\n  static const IconData done = IconData(0xe1f6, fontFamily: 'MaterialIcons');\n  static const IconData done_all = IconData(0xe1f7, fontFamily: 'MaterialIcons');\n  static const IconData done_outline = IconData(0xe1f8, fontFamily: 'MaterialIcons');\n  static const IconData donut_large = IconData(0xe1f9, fontFamily: 'MaterialIcons');\n  static const IconData donut_small = IconData(0xe1fa, fontFamily: 'MaterialIcons');\n  static const IconData door_back_door = IconData(0xe1fb, fontFamily: 'MaterialIcons');\n  static const IconData door_front_door = IconData(0xe1fc, fontFamily: 'MaterialIcons');\n  static const IconData door_sliding = IconData(0xe1fd, fontFamily: 'MaterialIcons');\n  static const IconData doorbell = IconData(0xe1fe, fontFamily: 'MaterialIcons');\n  static const IconData double_arrow = IconData(0xe1ff, fontFamily: 'MaterialIcons');\n  static const IconData downhill_skiing = IconData(0xe200, fontFamily: 'MaterialIcons');\n  static const IconData download = IconData(0xe201, fontFamily: 'MaterialIcons');\n  static const IconData download_done = IconData(0xe202, fontFamily: 'MaterialIcons');\n  static const IconData download_for_offline = IconData(0xe203, fontFamily: 'MaterialIcons');\n  static const IconData downloading = IconData(0xe204, fontFamily: 'MaterialIcons');\n  static const IconData drafts = IconData(0xe205, fontFamily: 'MaterialIcons');\n  static const IconData drag_handle = IconData(0xe206, fontFamily: 'MaterialIcons');\n  static const IconData drag_indicator = IconData(0xe207, fontFamily: 'MaterialIcons');\n  static const IconData draw = IconData(0xf04f3, fontFamily: 'MaterialIcons');\n  static const IconData drive_eta = IconData(0xe208, fontFamily: 'MaterialIcons');\n  static const IconData drive_file_move = IconData(0xe209, fontFamily: 'MaterialIcons');\n  static const IconData drive_file_move_outline = IconData(0xe20a, fontFamily: 'MaterialIcons');\n  static const IconData drive_file_move_rtl = IconData(0xf04f4, fontFamily: 'MaterialIcons');\n  static const IconData drive_file_rename_outline = IconData(0xe20b, fontFamily: 'MaterialIcons');\n  static const IconData drive_folder_upload = IconData(0xe20c, fontFamily: 'MaterialIcons');\n  static const IconData dry = IconData(0xe20d, fontFamily: 'MaterialIcons');\n  static const IconData dry_cleaning = IconData(0xe20e, fontFamily: 'MaterialIcons');\n  static const IconData duo = IconData(0xe20f, fontFamily: 'MaterialIcons');\n  static const IconData dvr = IconData(0xe210, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData dynamic_feed = IconData(0xe211, fontFamily: 'MaterialIcons');\n  static const IconData dynamic_form = IconData(0xe212, fontFamily: 'MaterialIcons');\n  static const IconData e_mobiledata = IconData(0xe213, fontFamily: 'MaterialIcons');\n  static const IconData earbuds = IconData(0xe214, fontFamily: 'MaterialIcons');\n  static const IconData earbuds_battery = IconData(0xe215, fontFamily: 'MaterialIcons');\n  static const IconData east = IconData(0xe216, fontFamily: 'MaterialIcons');\n  static const IconData eco = IconData(0xe217, fontFamily: 'MaterialIcons');\n  static const IconData edgesensor_high = IconData(0xe218, fontFamily: 'MaterialIcons');\n  static const IconData edgesensor_low = IconData(0xe219, fontFamily: 'MaterialIcons');\n  static const IconData edit = IconData(0xe21a, fontFamily: 'MaterialIcons');\n  static const IconData edit_attributes = IconData(0xe21b, fontFamily: 'MaterialIcons');\n  static const IconData edit_calendar = IconData(0xf04f5, fontFamily: 'MaterialIcons');\n  static const IconData edit_location = IconData(0xe21c, fontFamily: 'MaterialIcons');\n  static const IconData edit_location_alt = IconData(0xe21d, fontFamily: 'MaterialIcons');\n  static const IconData edit_note = IconData(0xf04f6, fontFamily: 'MaterialIcons');\n  static const IconData edit_notifications = IconData(0xe21e, fontFamily: 'MaterialIcons');\n  static const IconData edit_off = IconData(0xe21f, fontFamily: 'MaterialIcons');\n  static const IconData edit_road = IconData(0xe220, fontFamily: 'MaterialIcons');\n  static const IconData egg = IconData(0xf04f8, fontFamily: 'MaterialIcons');\n  static const IconData egg_alt = IconData(0xf04f7, fontFamily: 'MaterialIcons');\n  static const IconData eject = IconData(0xe221, fontFamily: 'MaterialIcons');\n  static const IconData elderly = IconData(0xe222, fontFamily: 'MaterialIcons');\n  static const IconData elderly_woman = IconData(0xf04f9, fontFamily: 'MaterialIcons');\n  static const IconData electric_bike = IconData(0xe223, fontFamily: 'MaterialIcons');\n  static const IconData electric_bolt = IconData(0xf079c, fontFamily: 'MaterialIcons');\n  static const IconData electric_car = IconData(0xe224, fontFamily: 'MaterialIcons');\n  static const IconData electric_meter = IconData(0xf079d, fontFamily: 'MaterialIcons');\n  static const IconData electric_moped = IconData(0xe225, fontFamily: 'MaterialIcons');\n  static const IconData electric_rickshaw = IconData(0xe226, fontFamily: 'MaterialIcons');\n  static const IconData electric_scooter = IconData(0xe227, fontFamily: 'MaterialIcons');\n  static const IconData electrical_services = IconData(0xe228, fontFamily: 'MaterialIcons');\n  static const IconData elevator = IconData(0xe229, fontFamily: 'MaterialIcons');\n  static const IconData email = IconData(0xe22a, fontFamily: 'MaterialIcons');\n  static const IconData emergency = IconData(0xf04fa, fontFamily: 'MaterialIcons');\n  static const IconData emergency_recording = IconData(0xf079e, fontFamily: 'MaterialIcons');\n  static const IconData emergency_share = IconData(0xf079f, fontFamily: 'MaterialIcons');\n  static const IconData emoji_emotions = IconData(0xe22b, fontFamily: 'MaterialIcons');\n  static const IconData emoji_events = IconData(0xe22c, fontFamily: 'MaterialIcons');\n  static const IconData emoji_flags = IconData(0xe22d, fontFamily: 'MaterialIcons');\n  static const IconData emoji_food_beverage = IconData(0xe22e, fontFamily: 'MaterialIcons');\n  static const IconData emoji_nature = IconData(0xe22f, fontFamily: 'MaterialIcons');\n  static const IconData emoji_objects = IconData(0xe230, fontFamily: 'MaterialIcons');\n  static const IconData emoji_people = IconData(0xe231, fontFamily: 'MaterialIcons');\n  static const IconData emoji_symbols = IconData(0xe232, fontFamily: 'MaterialIcons');\n  static const IconData emoji_transportation = IconData(0xe233, fontFamily: 'MaterialIcons');\n  static const IconData energy_savings_leaf = IconData(0xf07a0, fontFamily: 'MaterialIcons');\n  static const IconData engineering = IconData(0xe234, fontFamily: 'MaterialIcons');\n  static const IconData enhance_photo_translate = IconData(0xe131, fontFamily: 'MaterialIcons');\n  static const IconData enhanced_encryption = IconData(0xe235, fontFamily: 'MaterialIcons');\n  static const IconData equalizer = IconData(0xe236, fontFamily: 'MaterialIcons');\n  static const IconData error = IconData(0xe237, fontFamily: 'MaterialIcons');\n  static const IconData error_outline = IconData(0xe238, fontFamily: 'MaterialIcons');\n  static const IconData escalator = IconData(0xe239, fontFamily: 'MaterialIcons');\n  static const IconData escalator_warning = IconData(0xe23a, fontFamily: 'MaterialIcons');\n  static const IconData euro = IconData(0xe23b, fontFamily: 'MaterialIcons');\n  static const IconData euro_symbol = IconData(0xe23c, fontFamily: 'MaterialIcons');\n  static const IconData ev_station = IconData(0xe23d, fontFamily: 'MaterialIcons');\n  static const IconData event = IconData(0xe23e, fontFamily: 'MaterialIcons');\n  static const IconData event_available = IconData(0xe23f, fontFamily: 'MaterialIcons');\n  static const IconData event_busy = IconData(0xe240, fontFamily: 'MaterialIcons');\n  static const IconData event_note = IconData(0xe241, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData event_repeat = IconData(0xf04fb, fontFamily: 'MaterialIcons');\n  static const IconData event_seat = IconData(0xe242, fontFamily: 'MaterialIcons');\n  static const IconData exit_to_app = IconData(0xe243, fontFamily: 'MaterialIcons');\n  static const IconData expand = IconData(0xe244, fontFamily: 'MaterialIcons');\n  static const IconData expand_circle_down = IconData(0xf04fc, fontFamily: 'MaterialIcons');\n  static const IconData expand_less = IconData(0xe245, fontFamily: 'MaterialIcons');\n  static const IconData expand_more = IconData(0xe246, fontFamily: 'MaterialIcons');\n  static const IconData explicit = IconData(0xe247, fontFamily: 'MaterialIcons');\n  static const IconData explore = IconData(0xe248, fontFamily: 'MaterialIcons');\n  static const IconData explore_off = IconData(0xe249, fontFamily: 'MaterialIcons');\n  static const IconData exposure = IconData(0xe24a, fontFamily: 'MaterialIcons');\n  static const IconData exposure_minus_1 = IconData(0xe24b, fontFamily: 'MaterialIcons');\n  static const IconData exposure_minus_2 = IconData(0xe24c, fontFamily: 'MaterialIcons');\n  static const IconData exposure_neg_1 = IconData(0xe24b, fontFamily: 'MaterialIcons');\n  static const IconData exposure_neg_2 = IconData(0xe24c, fontFamily: 'MaterialIcons');\n  static const IconData exposure_plus_1 = IconData(0xe24d, fontFamily: 'MaterialIcons');\n  static const IconData exposure_plus_2 = IconData(0xe24e, fontFamily: 'MaterialIcons');\n  static const IconData exposure_zero = IconData(0xe24f, fontFamily: 'MaterialIcons');\n  static const IconData extension = IconData(0xe250, fontFamily: 'MaterialIcons');\n  static const IconData extension_off = IconData(0xe251, fontFamily: 'MaterialIcons');\n  static const IconData face = IconData(0xe252, fontFamily: 'MaterialIcons');\n  static const IconData face_retouching_natural = IconData(0xe253, fontFamily: 'MaterialIcons');\n  static const IconData face_retouching_off = IconData(0xe254, fontFamily: 'MaterialIcons');\n  static const IconData facebook = IconData(0xe255, fontFamily: 'MaterialIcons');\n  static const IconData fact_check = IconData(0xe256, fontFamily: 'MaterialIcons');\n  static const IconData factory = IconData(0xf04fd, fontFamily: 'MaterialIcons');\n  static const IconData family_restroom = IconData(0xe257, fontFamily: 'MaterialIcons');\n  static const IconData fast_forward = IconData(0xe258, fontFamily: 'MaterialIcons');\n  static const IconData fast_rewind = IconData(0xe259, fontFamily: 'MaterialIcons');\n  static const IconData fastfood = IconData(0xe25a, fontFamily: 'MaterialIcons');\n  static const IconData favorite = IconData(0xe25b, fontFamily: 'MaterialIcons');\n  static const IconData favorite_border = IconData(0xe25c, fontFamily: 'MaterialIcons');\n  static const IconData favorite_outline = IconData(0xe25c, fontFamily: 'MaterialIcons');\n  static const IconData fax = IconData(0xf04fe, fontFamily: 'MaterialIcons');\n  static const IconData featured_play_list = IconData(0xe25d, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData featured_video = IconData(0xe25e, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData feed = IconData(0xe25f, fontFamily: 'MaterialIcons');\n  static const IconData feedback = IconData(0xe260, fontFamily: 'MaterialIcons');\n  static const IconData female = IconData(0xe261, fontFamily: 'MaterialIcons');\n  static const IconData fence = IconData(0xe262, fontFamily: 'MaterialIcons');\n  static const IconData festival = IconData(0xe263, fontFamily: 'MaterialIcons');\n  static const IconData fiber_dvr = IconData(0xe264, fontFamily: 'MaterialIcons');\n  static const IconData fiber_manual_record = IconData(0xe265, fontFamily: 'MaterialIcons');\n  static const IconData fiber_new = IconData(0xe266, fontFamily: 'MaterialIcons');\n  static const IconData fiber_pin = IconData(0xe267, fontFamily: 'MaterialIcons');\n  static const IconData fiber_smart_record = IconData(0xe268, fontFamily: 'MaterialIcons');\n  static const IconData file_copy = IconData(0xe269, fontFamily: 'MaterialIcons');\n  static const IconData file_download = IconData(0xe26a, fontFamily: 'MaterialIcons');\n  static const IconData file_download_done = IconData(0xe26b, fontFamily: 'MaterialIcons');\n  static const IconData file_download_off = IconData(0xe26c, fontFamily: 'MaterialIcons');\n  static const IconData file_open = IconData(0xf04ff, fontFamily: 'MaterialIcons');\n  static const IconData file_present = IconData(0xe26d, fontFamily: 'MaterialIcons');\n  static const IconData file_upload = IconData(0xe26e, fontFamily: 'MaterialIcons');\n  static const IconData filter = IconData(0xe26f, fontFamily: 'MaterialIcons');\n  static const IconData filter_1 = IconData(0xe270, fontFamily: 'MaterialIcons');\n  static const IconData filter_2 = IconData(0xe271, fontFamily: 'MaterialIcons');\n  static const IconData filter_3 = IconData(0xe272, fontFamily: 'MaterialIcons');\n  static const IconData filter_4 = IconData(0xe273, fontFamily: 'MaterialIcons');\n  static const IconData filter_5 = IconData(0xe274, fontFamily: 'MaterialIcons');\n  static const IconData filter_6 = IconData(0xe275, fontFamily: 'MaterialIcons');\n  static const IconData filter_7 = IconData(0xe276, fontFamily: 'MaterialIcons');\n  static const IconData filter_8 = IconData(0xe277, fontFamily: 'MaterialIcons');\n  static const IconData filter_9 = IconData(0xe278, fontFamily: 'MaterialIcons');\n  static const IconData filter_9_plus = IconData(0xe279, fontFamily: 'MaterialIcons');\n  static const IconData filter_alt = IconData(0xe27a, fontFamily: 'MaterialIcons');\n  static const IconData filter_alt_off = IconData(0xf0500, fontFamily: 'MaterialIcons');\n  static const IconData filter_b_and_w = IconData(0xe27b, fontFamily: 'MaterialIcons');\n  static const IconData filter_center_focus = IconData(0xe27c, fontFamily: 'MaterialIcons');\n  static const IconData filter_drama = IconData(0xe27d, fontFamily: 'MaterialIcons');\n  static const IconData filter_frames = IconData(0xe27e, fontFamily: 'MaterialIcons');\n  static const IconData filter_hdr = IconData(0xe27f, fontFamily: 'MaterialIcons');\n  static const IconData filter_list = IconData(0xe280, fontFamily: 'MaterialIcons');\n  static const IconData filter_list_alt = IconData(0xe281, fontFamily: 'MaterialIcons');\n  static const IconData filter_list_off = IconData(0xf0501, fontFamily: 'MaterialIcons');\n  static const IconData filter_none = IconData(0xe282, fontFamily: 'MaterialIcons');\n  static const IconData filter_tilt_shift = IconData(0xe283, fontFamily: 'MaterialIcons');\n  static const IconData filter_vintage = IconData(0xe284, fontFamily: 'MaterialIcons');\n  static const IconData find_in_page = IconData(0xe285, fontFamily: 'MaterialIcons');\n  static const IconData find_replace = IconData(0xe286, fontFamily: 'MaterialIcons');\n  static const IconData fingerprint = IconData(0xe287, fontFamily: 'MaterialIcons');\n  static const IconData fire_extinguisher = IconData(0xe288, fontFamily: 'MaterialIcons');\n  static const IconData fire_hydrant = IconData(0xe289, fontFamily: 'MaterialIcons');\n  static const IconData fire_hydrant_alt = IconData(0xf07a1, fontFamily: 'MaterialIcons');\n  static const IconData fire_truck = IconData(0xf07a2, fontFamily: 'MaterialIcons');\n  static const IconData fireplace = IconData(0xe28a, fontFamily: 'MaterialIcons');\n  static const IconData first_page = IconData(0xe28b, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData fit_screen = IconData(0xe28c, fontFamily: 'MaterialIcons');\n  static const IconData fitbit = IconData(0xf0502, fontFamily: 'MaterialIcons');\n  static const IconData fitness_center = IconData(0xe28d, fontFamily: 'MaterialIcons');\n  static const IconData flag = IconData(0xe28e, fontFamily: 'MaterialIcons');\n  static const IconData flag_circle = IconData(0xf0503, fontFamily: 'MaterialIcons');\n  static const IconData flaky = IconData(0xe28f, fontFamily: 'MaterialIcons');\n  static const IconData flare = IconData(0xe290, fontFamily: 'MaterialIcons');\n  static const IconData flash_auto = IconData(0xe291, fontFamily: 'MaterialIcons');\n  static const IconData flash_off = IconData(0xe292, fontFamily: 'MaterialIcons');\n  static const IconData flash_on = IconData(0xe293, fontFamily: 'MaterialIcons');\n  static const IconData flashlight_off = IconData(0xe294, fontFamily: 'MaterialIcons');\n  static const IconData flashlight_on = IconData(0xe295, fontFamily: 'MaterialIcons');\n  static const IconData flatware = IconData(0xe296, fontFamily: 'MaterialIcons');\n  static const IconData flight = IconData(0xe297, fontFamily: 'MaterialIcons');\n  static const IconData flight_class = IconData(0xf0504, fontFamily: 'MaterialIcons');\n  static const IconData flight_land = IconData(0xe298, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData flight_takeoff = IconData(0xe299, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData flip = IconData(0xe29a, fontFamily: 'MaterialIcons');\n  static const IconData flip_camera_android = IconData(0xe29b, fontFamily: 'MaterialIcons');\n  static const IconData flip_camera_ios = IconData(0xe29c, fontFamily: 'MaterialIcons');\n  static const IconData flip_to_back = IconData(0xe29d, fontFamily: 'MaterialIcons');\n  static const IconData flip_to_front = IconData(0xe29e, fontFamily: 'MaterialIcons');\n  static const IconData flood = IconData(0xf07a3, fontFamily: 'MaterialIcons');\n  static const IconData flourescent = IconData(0xe29f, fontFamily: 'MaterialIcons');\n  static const IconData flutter_dash = IconData(0xe2a0, fontFamily: 'MaterialIcons');\n  static const IconData fmd_bad = IconData(0xe2a1, fontFamily: 'MaterialIcons');\n  static const IconData fmd_good = IconData(0xe2a2, fontFamily: 'MaterialIcons');\n  static const IconData foggy = IconData(0xf0505, fontFamily: 'MaterialIcons');\n  static const IconData folder = IconData(0xe2a3, fontFamily: 'MaterialIcons');\n  static const IconData folder_copy = IconData(0xf0506, fontFamily: 'MaterialIcons');\n  static const IconData folder_delete = IconData(0xf0507, fontFamily: 'MaterialIcons');\n  static const IconData folder_off = IconData(0xf0508, fontFamily: 'MaterialIcons');\n  static const IconData folder_open = IconData(0xe2a4, fontFamily: 'MaterialIcons');\n  static const IconData folder_shared = IconData(0xe2a5, fontFamily: 'MaterialIcons');\n  static const IconData folder_special = IconData(0xe2a6, fontFamily: 'MaterialIcons');\n  static const IconData folder_zip = IconData(0xf0509, fontFamily: 'MaterialIcons');\n  static const IconData follow_the_signs = IconData(0xe2a7, fontFamily: 'MaterialIcons');\n  static const IconData font_download = IconData(0xe2a8, fontFamily: 'MaterialIcons');\n  static const IconData font_download_off = IconData(0xe2a9, fontFamily: 'MaterialIcons');\n  static const IconData food_bank = IconData(0xe2aa, fontFamily: 'MaterialIcons');\n  static const IconData forest = IconData(0xf050a, fontFamily: 'MaterialIcons');\n  static const IconData fork_left = IconData(0xf050b, fontFamily: 'MaterialIcons');\n  static const IconData fork_right = IconData(0xf050c, fontFamily: 'MaterialIcons');\n  static const IconData format_align_center = IconData(0xe2ab, fontFamily: 'MaterialIcons');\n  static const IconData format_align_justify = IconData(0xe2ac, fontFamily: 'MaterialIcons');\n  static const IconData format_align_left = IconData(0xe2ad, fontFamily: 'MaterialIcons');\n  static const IconData format_align_right = IconData(0xe2ae, fontFamily: 'MaterialIcons');\n  static const IconData format_bold = IconData(0xe2af, fontFamily: 'MaterialIcons');\n  static const IconData format_clear = IconData(0xe2b0, fontFamily: 'MaterialIcons');\n  static const IconData format_color_fill = IconData(0xe2b1, fontFamily: 'MaterialIcons');\n  static const IconData format_color_reset = IconData(0xe2b2, fontFamily: 'MaterialIcons');\n  static const IconData format_color_text = IconData(0xe2b3, fontFamily: 'MaterialIcons');\n  static const IconData format_indent_decrease = IconData(0xe2b4, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData format_indent_increase = IconData(0xe2b5, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData format_italic = IconData(0xe2b6, fontFamily: 'MaterialIcons');\n  static const IconData format_line_spacing = IconData(0xe2b7, fontFamily: 'MaterialIcons');\n  static const IconData format_list_bulleted = IconData(0xe2b8, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData format_list_numbered = IconData(0xe2b9, fontFamily: 'MaterialIcons');\n  static const IconData format_list_numbered_rtl = IconData(0xe2ba, fontFamily: 'MaterialIcons');\n  static const IconData format_overline = IconData(0xf050d, fontFamily: 'MaterialIcons');\n  static const IconData format_paint = IconData(0xe2bb, fontFamily: 'MaterialIcons');\n  static const IconData format_quote = IconData(0xe2bc, fontFamily: 'MaterialIcons');\n  static const IconData format_shapes = IconData(0xe2bd, fontFamily: 'MaterialIcons');\n  static const IconData format_size = IconData(0xe2be, fontFamily: 'MaterialIcons');\n  static const IconData format_strikethrough = IconData(0xe2bf, fontFamily: 'MaterialIcons');\n  static const IconData format_textdirection_l_to_r = IconData(0xe2c0, fontFamily: 'MaterialIcons');\n  static const IconData format_textdirection_r_to_l = IconData(0xe2c1, fontFamily: 'MaterialIcons');\n  static const IconData format_underline = IconData(0xe2c2, fontFamily: 'MaterialIcons');\n  static const IconData format_underlined = IconData(0xe2c2, fontFamily: 'MaterialIcons');\n  static const IconData fort = IconData(0xf050e, fontFamily: 'MaterialIcons');\n  static const IconData forum = IconData(0xe2c3, fontFamily: 'MaterialIcons');\n  static const IconData forward = IconData(0xe2c4, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData forward_10 = IconData(0xe2c5, fontFamily: 'MaterialIcons');\n  static const IconData forward_30 = IconData(0xe2c6, fontFamily: 'MaterialIcons');\n  static const IconData forward_5 = IconData(0xe2c7, fontFamily: 'MaterialIcons');\n  static const IconData forward_to_inbox = IconData(0xe2c8, fontFamily: 'MaterialIcons');\n  static const IconData foundation = IconData(0xe2c9, fontFamily: 'MaterialIcons');\n  static const IconData free_breakfast = IconData(0xe2ca, fontFamily: 'MaterialIcons');\n  static const IconData free_cancellation = IconData(0xf050f, fontFamily: 'MaterialIcons');\n  static const IconData front_hand = IconData(0xf0510, fontFamily: 'MaterialIcons');\n  static const IconData fullscreen = IconData(0xe2cb, fontFamily: 'MaterialIcons');\n  static const IconData fullscreen_exit = IconData(0xe2cc, fontFamily: 'MaterialIcons');\n  static const IconData functions = IconData(0xe2cd, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData g_mobiledata = IconData(0xe2ce, fontFamily: 'MaterialIcons');\n  static const IconData g_translate = IconData(0xe2cf, fontFamily: 'MaterialIcons');\n  static const IconData gamepad = IconData(0xe2d0, fontFamily: 'MaterialIcons');\n  static const IconData games = IconData(0xe2d1, fontFamily: 'MaterialIcons');\n  static const IconData garage = IconData(0xe2d2, fontFamily: 'MaterialIcons');\n  static const IconData gas_meter = IconData(0xf07a4, fontFamily: 'MaterialIcons');\n  static const IconData gavel = IconData(0xe2d3, fontFamily: 'MaterialIcons');\n  static const IconData generating_tokens = IconData(0xf0511, fontFamily: 'MaterialIcons');\n  static const IconData gesture = IconData(0xe2d4, fontFamily: 'MaterialIcons');\n  static const IconData get_app = IconData(0xe2d5, fontFamily: 'MaterialIcons');\n  static const IconData gif = IconData(0xe2d6, fontFamily: 'MaterialIcons');\n  static const IconData gif_box = IconData(0xf0512, fontFamily: 'MaterialIcons');\n  static const IconData girl = IconData(0xf0513, fontFamily: 'MaterialIcons');\n  static const IconData gite = IconData(0xe2d7, fontFamily: 'MaterialIcons');\n  static const IconData golf_course = IconData(0xe2d8, fontFamily: 'MaterialIcons');\n  static const IconData gpp_bad = IconData(0xe2d9, fontFamily: 'MaterialIcons');\n  static const IconData gpp_good = IconData(0xe2da, fontFamily: 'MaterialIcons');\n  static const IconData gpp_maybe = IconData(0xe2db, fontFamily: 'MaterialIcons');\n  static const IconData gps_fixed = IconData(0xe2dc, fontFamily: 'MaterialIcons');\n  static const IconData gps_not_fixed = IconData(0xe2dd, fontFamily: 'MaterialIcons');\n  static const IconData gps_off = IconData(0xe2de, fontFamily: 'MaterialIcons');\n  static const IconData grade = IconData(0xe2df, fontFamily: 'MaterialIcons');\n  static const IconData gradient = IconData(0xe2e0, fontFamily: 'MaterialIcons');\n  static const IconData grading = IconData(0xe2e1, fontFamily: 'MaterialIcons');\n  static const IconData grain = IconData(0xe2e2, fontFamily: 'MaterialIcons');\n  static const IconData graphic_eq = IconData(0xe2e3, fontFamily: 'MaterialIcons');\n  static const IconData grass = IconData(0xe2e4, fontFamily: 'MaterialIcons');\n  static const IconData grid_3x3 = IconData(0xe2e5, fontFamily: 'MaterialIcons');\n  static const IconData grid_4x4 = IconData(0xe2e6, fontFamily: 'MaterialIcons');\n  static const IconData grid_goldenratio = IconData(0xe2e7, fontFamily: 'MaterialIcons');\n  static const IconData grid_off = IconData(0xe2e8, fontFamily: 'MaterialIcons');\n  static const IconData grid_on = IconData(0xe2e9, fontFamily: 'MaterialIcons');\n  static const IconData grid_view = IconData(0xe2ea, fontFamily: 'MaterialIcons');\n  static const IconData group = IconData(0xe2eb, fontFamily: 'MaterialIcons');\n  static const IconData group_add = IconData(0xe2ec, fontFamily: 'MaterialIcons');\n  static const IconData group_off = IconData(0xf0514, fontFamily: 'MaterialIcons');\n  static const IconData group_remove = IconData(0xf0515, fontFamily: 'MaterialIcons');\n  static const IconData group_work = IconData(0xe2ed, fontFamily: 'MaterialIcons');\n  static const IconData groups = IconData(0xe2ee, fontFamily: 'MaterialIcons');\n  static const IconData h_mobiledata = IconData(0xe2ef, fontFamily: 'MaterialIcons');\n  static const IconData h_plus_mobiledata = IconData(0xe2f0, fontFamily: 'MaterialIcons');\n  static const IconData hail = IconData(0xe2f1, fontFamily: 'MaterialIcons');\n  static const IconData handshake = IconData(0xf06be, fontFamily: 'MaterialIcons');\n  static const IconData handyman = IconData(0xe2f2, fontFamily: 'MaterialIcons');\n  static const IconData hardware = IconData(0xe2f3, fontFamily: 'MaterialIcons');\n  static const IconData hd = IconData(0xe2f4, fontFamily: 'MaterialIcons');\n  static const IconData hdr_auto = IconData(0xe2f5, fontFamily: 'MaterialIcons');\n  static const IconData hdr_auto_select = IconData(0xe2f6, fontFamily: 'MaterialIcons');\n  static const IconData hdr_enhanced_select = IconData(0xe2f7, fontFamily: 'MaterialIcons');\n  static const IconData hdr_off = IconData(0xe2f8, fontFamily: 'MaterialIcons');\n  static const IconData hdr_off_select = IconData(0xe2f9, fontFamily: 'MaterialIcons');\n  static const IconData hdr_on = IconData(0xe2fa, fontFamily: 'MaterialIcons');\n  static const IconData hdr_on_select = IconData(0xe2fb, fontFamily: 'MaterialIcons');\n  static const IconData hdr_plus = IconData(0xe2fc, fontFamily: 'MaterialIcons');\n  static const IconData hdr_strong = IconData(0xe2fd, fontFamily: 'MaterialIcons');\n  static const IconData hdr_weak = IconData(0xe2fe, fontFamily: 'MaterialIcons');\n  static const IconData headphones = IconData(0xe2ff, fontFamily: 'MaterialIcons');\n  static const IconData headphones_battery = IconData(0xe300, fontFamily: 'MaterialIcons');\n  static const IconData headset = IconData(0xe301, fontFamily: 'MaterialIcons');\n  static const IconData headset_mic = IconData(0xe302, fontFamily: 'MaterialIcons');\n  static const IconData headset_off = IconData(0xe303, fontFamily: 'MaterialIcons');\n  static const IconData healing = IconData(0xe304, fontFamily: 'MaterialIcons');\n  static const IconData health_and_safety = IconData(0xe305, fontFamily: 'MaterialIcons');\n  static const IconData hearing = IconData(0xe306, fontFamily: 'MaterialIcons');\n  static const IconData hearing_disabled = IconData(0xe307, fontFamily: 'MaterialIcons');\n  static const IconData heart_broken = IconData(0xf0516, fontFamily: 'MaterialIcons');\n  static const IconData heat_pump = IconData(0xf07a5, fontFamily: 'MaterialIcons');\n  static const IconData height = IconData(0xe308, fontFamily: 'MaterialIcons');\n  static const IconData help = IconData(0xe309, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData help_center = IconData(0xe30a, fontFamily: 'MaterialIcons');\n  static const IconData help_outline = IconData(0xe30b, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData hevc = IconData(0xe30c, fontFamily: 'MaterialIcons');\n  static const IconData hexagon = IconData(0xf0517, fontFamily: 'MaterialIcons');\n  static const IconData hide_image = IconData(0xe30d, fontFamily: 'MaterialIcons');\n  static const IconData hide_source = IconData(0xe30e, fontFamily: 'MaterialIcons');\n  static const IconData high_quality = IconData(0xe30f, fontFamily: 'MaterialIcons');\n  static const IconData highlight = IconData(0xe310, fontFamily: 'MaterialIcons');\n  static const IconData highlight_alt = IconData(0xe311, fontFamily: 'MaterialIcons');\n  static const IconData highlight_off = IconData(0xe312, fontFamily: 'MaterialIcons');\n  static const IconData highlight_remove = IconData(0xe312, fontFamily: 'MaterialIcons');\n  static const IconData hiking = IconData(0xe313, fontFamily: 'MaterialIcons');\n  static const IconData history = IconData(0xe314, fontFamily: 'MaterialIcons');\n  static const IconData history_edu = IconData(0xe315, fontFamily: 'MaterialIcons');\n  static const IconData history_toggle_off = IconData(0xe316, fontFamily: 'MaterialIcons');\n  static const IconData hive = IconData(0xf0518, fontFamily: 'MaterialIcons');\n  static const IconData hls = IconData(0xf0519, fontFamily: 'MaterialIcons');\n  static const IconData hls_off = IconData(0xf051a, fontFamily: 'MaterialIcons');\n  static const IconData holiday_village = IconData(0xe317, fontFamily: 'MaterialIcons');\n  static const IconData home = IconData(0xe318, fontFamily: 'MaterialIcons');\n  static const IconData home_filled = IconData(0xe319, fontFamily: 'MaterialIcons');\n\n    static const IconData home_max = IconData(0xe31a, fontFamily: 'MaterialIcons');\n  static const IconData home_mini = IconData(0xe31b, fontFamily: 'MaterialIcons');\n  static const IconData home_repair_service = IconData(0xe31c, fontFamily: 'MaterialIcons');\n  static const IconData home_work = IconData(0xe31d, fontFamily: 'MaterialIcons');\n  static const IconData horizontal_distribute = IconData(0xe31e, fontFamily: 'MaterialIcons');\n  static const IconData horizontal_rule = IconData(0xe31f, fontFamily: 'MaterialIcons');\n  static const IconData horizontal_split = IconData(0xe320, fontFamily: 'MaterialIcons');\n  static const IconData hot_tub = IconData(0xe321, fontFamily: 'MaterialIcons');\n  static const IconData hotel = IconData(0xe322, fontFamily: 'MaterialIcons');\n  static const IconData hotel_class = IconData(0xf051b, fontFamily: 'MaterialIcons');\n  static const IconData hourglass_bottom = IconData(0xe323, fontFamily: 'MaterialIcons');\n  static const IconData hourglass_disabled = IconData(0xe324, fontFamily: 'MaterialIcons');\n  static const IconData hourglass_empty = IconData(0xe325, fontFamily: 'MaterialIcons');\n  static const IconData hourglass_full = IconData(0xe326, fontFamily: 'MaterialIcons');\n  static const IconData hourglass_top = IconData(0xe327, fontFamily: 'MaterialIcons');\n  static const IconData house = IconData(0xe328, fontFamily: 'MaterialIcons');\n  static const IconData house_siding = IconData(0xe329, fontFamily: 'MaterialIcons');\n  static const IconData houseboat = IconData(0xe32a, fontFamily: 'MaterialIcons');\n  static const IconData how_to_reg = IconData(0xe32b, fontFamily: 'MaterialIcons');\n  static const IconData how_to_vote = IconData(0xe32c, fontFamily: 'MaterialIcons');\n  static const IconData html = IconData(0xf051c, fontFamily: 'MaterialIcons');\n  static const IconData http = IconData(0xe32d, fontFamily: 'MaterialIcons');\n  static const IconData https = IconData(0xe32e, fontFamily: 'MaterialIcons');\n  static const IconData hub = IconData(0xf051d, fontFamily: 'MaterialIcons');\n  static const IconData hvac = IconData(0xe32f, fontFamily: 'MaterialIcons');\n  static const IconData ice_skating = IconData(0xe330, fontFamily: 'MaterialIcons');\n  static const IconData icecream = IconData(0xe331, fontFamily: 'MaterialIcons');\n  static const IconData image = IconData(0xe332, fontFamily: 'MaterialIcons');\n  static const IconData image_aspect_ratio = IconData(0xe333, fontFamily: 'MaterialIcons');\n  static const IconData image_not_supported = IconData(0xe334, fontFamily: 'MaterialIcons');\n  static const IconData image_search = IconData(0xe335, fontFamily: 'MaterialIcons');\n  static const IconData imagesearch_roller = IconData(0xe336, fontFamily: 'MaterialIcons');\n  static const IconData import_contacts = IconData(0xe337, fontFamily: 'MaterialIcons');\n  static const IconData import_export = IconData(0xe338, fontFamily: 'MaterialIcons');\n  static const IconData important_devices = IconData(0xe339, fontFamily: 'MaterialIcons');\n  static const IconData inbox = IconData(0xe33a, fontFamily: 'MaterialIcons');\n  static const IconData incomplete_circle = IconData(0xf051e, fontFamily: 'MaterialIcons');\n  static const IconData indeterminate_check_box = IconData(0xe33b, fontFamily: 'MaterialIcons');\n  static const IconData info = IconData(0xe33c, fontFamily: 'MaterialIcons');\n  static const IconData info_outline = IconData(0xe33d, fontFamily: 'MaterialIcons');\n  static const IconData input = IconData(0xe33e, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData insert_chart = IconData(0xe33f, fontFamily: 'MaterialIcons');\n  static const IconData insert_comment = IconData(0xe341, fontFamily: 'MaterialIcons');\n  static const IconData insert_drive_file = IconData(0xe342, fontFamily: 'MaterialIcons');\n  static const IconData insert_emoticon = IconData(0xe343, fontFamily: 'MaterialIcons');\n  static const IconData insert_invitation = IconData(0xe344, fontFamily: 'MaterialIcons');\n  static const IconData insert_link = IconData(0xe345, fontFamily: 'MaterialIcons');\n  static const IconData insert_page_break = IconData(0xf0520, fontFamily: 'MaterialIcons');\n  static const IconData insert_photo = IconData(0xe346, fontFamily: 'MaterialIcons');\n  static const IconData insights = IconData(0xe347, fontFamily: 'MaterialIcons');\n  static const IconData install_desktop = IconData(0xf0521, fontFamily: 'MaterialIcons');\n  static const IconData install_mobile = IconData(0xf0522, fontFamily: 'MaterialIcons');\n  static const IconData integration_instructions = IconData(0xe348, fontFamily: 'MaterialIcons');\n  static const IconData interests = IconData(0xf0523, fontFamily: 'MaterialIcons');\n  static const IconData interpreter_mode = IconData(0xf0524, fontFamily: 'MaterialIcons');\n  static const IconData inventory = IconData(0xe349, fontFamily: 'MaterialIcons');\n  static const IconData inventory_2 = IconData(0xe34a, fontFamily: 'MaterialIcons');\n  static const IconData invert_colors = IconData(0xe34b, fontFamily: 'MaterialIcons');\n  static const IconData invert_colors_off = IconData(0xe34c, fontFamily: 'MaterialIcons');\n  static const IconData invert_colors_on = IconData(0xe34b, fontFamily: 'MaterialIcons');\n  static const IconData ios_share = IconData(0xe34d, fontFamily: 'MaterialIcons');\n  static const IconData iron = IconData(0xe34e, fontFamily: 'MaterialIcons');\n  static const IconData iso = IconData(0xe34f, fontFamily: 'MaterialIcons');\n  static const IconData javascript = IconData(0xf0525, fontFamily: 'MaterialIcons');\n  static const IconData join_full = IconData(0xf0526, fontFamily: 'MaterialIcons');\n  static const IconData join_inner = IconData(0xf0527, fontFamily: 'MaterialIcons');\n  static const IconData join_left = IconData(0xf0528, fontFamily: 'MaterialIcons');\n  static const IconData join_right = IconData(0xf0529, fontFamily: 'MaterialIcons');\n  static const IconData kayaking = IconData(0xe350, fontFamily: 'MaterialIcons');\n  static const IconData kebab_dining = IconData(0xf052a, fontFamily: 'MaterialIcons');\n  static const IconData key = IconData(0xf052b, fontFamily: 'MaterialIcons');\n  static const IconData key_off = IconData(0xf052c, fontFamily: 'MaterialIcons');\n  static const IconData keyboard = IconData(0xe351, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_alt = IconData(0xe352, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_arrow_down = IconData(0xe353, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_arrow_left = IconData(0xe354, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_arrow_right = IconData(0xe355, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_arrow_up = IconData(0xe356, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_backspace = IconData(0xe357, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData keyboard_capslock = IconData(0xe358, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_command_key = IconData(0xf052d, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_control = IconData(0xe402, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_control_key = IconData(0xf052e, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_double_arrow_down = IconData(0xf052f, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_double_arrow_left = IconData(0xf0530, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_double_arrow_right = IconData(0xf0531, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_double_arrow_up = IconData(0xf0532, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_hide = IconData(0xe359, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_option_key = IconData(0xf0533, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_return = IconData(0xe35a, fontFamily: 'MaterialIcons');\n  static const IconData keyboard_tab = IconData(0xe35b, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData keyboard_voice = IconData(0xe35c, fontFamily: 'MaterialIcons');\n  static const IconData king_bed = IconData(0xe35d, fontFamily: 'MaterialIcons');\n  static const IconData kitchen = IconData(0xe35e, fontFamily: 'MaterialIcons');\n  static const IconData kitesurfing = IconData(0xe35f, fontFamily: 'MaterialIcons');\n  static const IconData label = IconData(0xe360, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData label_important = IconData(0xe361, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData label_important_outline = IconData(0xe362, fontFamily: 'MaterialIcons');\n  static const IconData label_off = IconData(0xe363, fontFamily: 'MaterialIcons');\n  static const IconData label_outline = IconData(0xe364, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData lan = IconData(0xf0534, fontFamily: 'MaterialIcons');\n  static const IconData landscape = IconData(0xe365, fontFamily: 'MaterialIcons');\n  static const IconData landslide = IconData(0xf07a6, fontFamily: 'MaterialIcons');\n  static const IconData language = IconData(0xe366, fontFamily: 'MaterialIcons');\n  static const IconData laptop = IconData(0xe367, fontFamily: 'MaterialIcons');\n  static const IconData laptop_chromebook = IconData(0xe368, fontFamily: 'MaterialIcons');\n  static const IconData laptop_mac = IconData(0xe369, fontFamily: 'MaterialIcons');\n  static const IconData laptop_windows = IconData(0xe36a, fontFamily: 'MaterialIcons');\n  static const IconData last_page = IconData(0xe36b, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData launch = IconData(0xe36c, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData layers = IconData(0xe36d, fontFamily: 'MaterialIcons');\n  static const IconData layers_clear = IconData(0xe36e, fontFamily: 'MaterialIcons');\n  static const IconData leaderboard = IconData(0xe36f, fontFamily: 'MaterialIcons');\n  static const IconData leak_add = IconData(0xe370, fontFamily: 'MaterialIcons');\n  static const IconData leak_remove = IconData(0xe371, fontFamily: 'MaterialIcons');\n  static const IconData leave_bags_at_home = IconData(0xe439, fontFamily: 'MaterialIcons');\n  static const IconData legend_toggle = IconData(0xe372, fontFamily: 'MaterialIcons');\n  static const IconData lens = IconData(0xe373, fontFamily: 'MaterialIcons');\n  static const IconData lens_blur = IconData(0xe374, fontFamily: 'MaterialIcons');\n  static const IconData library_add = IconData(0xe375, fontFamily: 'MaterialIcons');\n  static const IconData library_add_check = IconData(0xe376, fontFamily: 'MaterialIcons');\n  static const IconData library_books = IconData(0xe377, fontFamily: 'MaterialIcons');\n  static const IconData library_music = IconData(0xe378, fontFamily: 'MaterialIcons');\n  static const IconData light = IconData(0xe379, fontFamily: 'MaterialIcons');\n  static const IconData light_mode = IconData(0xe37a, fontFamily: 'MaterialIcons');\n  static const IconData lightbulb = IconData(0xe37b, fontFamily: 'MaterialIcons');\n  static const IconData lightbulb_circle = IconData(0xf07a7, fontFamily: 'MaterialIcons');\n  static const IconData lightbulb_outline = IconData(0xe37c, fontFamily: 'MaterialIcons');\n\n    static const IconData line_axis = IconData(0xf0535, fontFamily: 'MaterialIcons');\n  static const IconData line_style = IconData(0xe37d, fontFamily: 'MaterialIcons');\n  static const IconData line_weight = IconData(0xe37e, fontFamily: 'MaterialIcons');\n  static const IconData linear_scale = IconData(0xe37f, fontFamily: 'MaterialIcons');\n  static const IconData link = IconData(0xe380, fontFamily: 'MaterialIcons');\n  static const IconData link_off = IconData(0xe381, fontFamily: 'MaterialIcons');\n  static const IconData linked_camera = IconData(0xe382, fontFamily: 'MaterialIcons');\n  static const IconData liquor = IconData(0xe383, fontFamily: 'MaterialIcons');\n  static const IconData list = IconData(0xe384, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData list_alt = IconData(0xe385, fontFamily: 'MaterialIcons');\n  static const IconData live_help = IconData(0xe386, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData live_tv = IconData(0xe387, fontFamily: 'MaterialIcons');\n  static const IconData living = IconData(0xe388, fontFamily: 'MaterialIcons');\n  static const IconData local_activity = IconData(0xe389, fontFamily: 'MaterialIcons');\n  static const IconData local_airport = IconData(0xe38a, fontFamily: 'MaterialIcons');\n  static const IconData local_atm = IconData(0xe38b, fontFamily: 'MaterialIcons');\n  static const IconData local_attraction = IconData(0xe389, fontFamily: 'MaterialIcons');\n  static const IconData local_bar = IconData(0xe38c, fontFamily: 'MaterialIcons');\n  static const IconData local_cafe = IconData(0xe38d, fontFamily: 'MaterialIcons');\n  static const IconData local_car_wash = IconData(0xe38e, fontFamily: 'MaterialIcons');\n  static const IconData local_convenience_store = IconData(0xe38f, fontFamily: 'MaterialIcons');\n  static const IconData local_dining = IconData(0xe390, fontFamily: 'MaterialIcons');\n  static const IconData local_drink = IconData(0xe391, fontFamily: 'MaterialIcons');\n  static const IconData local_fire_department = IconData(0xe392, fontFamily: 'MaterialIcons');\n  static const IconData local_florist = IconData(0xe393, fontFamily: 'MaterialIcons');\n  static const IconData local_gas_station = IconData(0xe394, fontFamily: 'MaterialIcons');\n  static const IconData local_grocery_store = IconData(0xe395, fontFamily: 'MaterialIcons');\n  static const IconData local_hospital = IconData(0xe396, fontFamily: 'MaterialIcons');\n  static const IconData local_hotel = IconData(0xe397, fontFamily: 'MaterialIcons');\n  static const IconData local_laundry_service = IconData(0xe398, fontFamily: 'MaterialIcons');\n  static const IconData local_library = IconData(0xe399, fontFamily: 'MaterialIcons');\n  static const IconData local_mall = IconData(0xe39a, fontFamily: 'MaterialIcons');\n  static const IconData local_movies = IconData(0xe39b, fontFamily: 'MaterialIcons');\n  static const IconData local_offer = IconData(0xe39c, fontFamily: 'MaterialIcons');\n  static const IconData local_parking = IconData(0xe39d, fontFamily: 'MaterialIcons');\n  static const IconData local_pharmacy = IconData(0xe39e, fontFamily: 'MaterialIcons');\n  static const IconData local_phone = IconData(0xe39f, fontFamily: 'MaterialIcons');\n  static const IconData local_pizza = IconData(0xe3a0, fontFamily: 'MaterialIcons');\n  static const IconData local_play = IconData(0xe3a1, fontFamily: 'MaterialIcons');\n  static const IconData local_police = IconData(0xe3a2, fontFamily: 'MaterialIcons');\n  static const IconData local_post_office = IconData(0xe3a3, fontFamily: 'MaterialIcons');\n  static const IconData local_print_shop = IconData(0xe3a4, fontFamily: 'MaterialIcons');\n  static const IconData local_printshop = IconData(0xe3a4, fontFamily: 'MaterialIcons');\n  static const IconData local_restaurant = IconData(0xe390, fontFamily: 'MaterialIcons');\n  static const IconData local_see = IconData(0xe3a5, fontFamily: 'MaterialIcons');\n  static const IconData local_shipping = IconData(0xe3a6, fontFamily: 'MaterialIcons');\n  static const IconData local_taxi = IconData(0xe3a7, fontFamily: 'MaterialIcons');\n  static const IconData location_city = IconData(0xe3a8, fontFamily: 'MaterialIcons');\n  static const IconData location_disabled = IconData(0xe3a9, fontFamily: 'MaterialIcons');\n  static const IconData location_history = IconData(0xe498, fontFamily: 'MaterialIcons');\n  static const IconData location_off = IconData(0xe3aa, fontFamily: 'MaterialIcons');\n  static const IconData location_on = IconData(0xe3ab, fontFamily: 'MaterialIcons');\n  static const IconData location_pin = IconData(0xe3ac, fontFamily: 'MaterialIcons');\n\n    static const IconData location_searching = IconData(0xe3ad, fontFamily: 'MaterialIcons');\n  static const IconData lock = IconData(0xe3ae, fontFamily: 'MaterialIcons');\n  static const IconData lock_clock = IconData(0xe3af, fontFamily: 'MaterialIcons');\n  static const IconData lock_open = IconData(0xe3b0, fontFamily: 'MaterialIcons');\n  static const IconData lock_outline = IconData(0xe3b1, fontFamily: 'MaterialIcons');\n\n    static const IconData lock_person = IconData(0xf07a8, fontFamily: 'MaterialIcons');\n  static const IconData lock_reset = IconData(0xf0536, fontFamily: 'MaterialIcons');\n  static const IconData login = IconData(0xe3b2, fontFamily: 'MaterialIcons');\n  static const IconData logo_dev = IconData(0xf0537, fontFamily: 'MaterialIcons');\n  static const IconData logout = IconData(0xe3b3, fontFamily: 'MaterialIcons');\n  static const IconData looks = IconData(0xe3b4, fontFamily: 'MaterialIcons');\n  static const IconData looks_3 = IconData(0xe3b5, fontFamily: 'MaterialIcons');\n  static const IconData looks_4 = IconData(0xe3b6, fontFamily: 'MaterialIcons');\n  static const IconData looks_5 = IconData(0xe3b7, fontFamily: 'MaterialIcons');\n  static const IconData looks_6 = IconData(0xe3b8, fontFamily: 'MaterialIcons');\n  static const IconData looks_one = IconData(0xe3b9, fontFamily: 'MaterialIcons');\n  static const IconData looks_two = IconData(0xe3ba, fontFamily: 'MaterialIcons');\n  static const IconData loop = IconData(0xe3bb, fontFamily: 'MaterialIcons');\n  static const IconData loupe = IconData(0xe3bc, fontFamily: 'MaterialIcons');\n  static const IconData low_priority = IconData(0xe3bd, fontFamily: 'MaterialIcons');\n  static const IconData loyalty = IconData(0xe3be, fontFamily: 'MaterialIcons');\n  static const IconData lte_mobiledata = IconData(0xe3bf, fontFamily: 'MaterialIcons');\n  static const IconData lte_plus_mobiledata = IconData(0xe3c0, fontFamily: 'MaterialIcons');\n  static const IconData luggage = IconData(0xe3c1, fontFamily: 'MaterialIcons');\n  static const IconData lunch_dining = IconData(0xe3c2, fontFamily: 'MaterialIcons');\n  static const IconData lyrics = IconData(0xf07a9, fontFamily: 'MaterialIcons');\n  static const IconData mail = IconData(0xe3c3, fontFamily: 'MaterialIcons');\n  static const IconData mail_lock = IconData(0xf07aa, fontFamily: 'MaterialIcons');\n  static const IconData mail_outline = IconData(0xe3c4, fontFamily: 'MaterialIcons');\n  static const IconData male = IconData(0xe3c5, fontFamily: 'MaterialIcons');\n  static const IconData man = IconData(0xf0538, fontFamily: 'MaterialIcons');\n  static const IconData manage_accounts = IconData(0xe3c6, fontFamily: 'MaterialIcons');\n  static const IconData manage_history = IconData(0xf07ab, fontFamily: 'MaterialIcons');\n  static const IconData manage_search = IconData(0xe3c7, fontFamily: 'MaterialIcons');\n  static const IconData map = IconData(0xe3c8, fontFamily: 'MaterialIcons');\n  static const IconData maps_home_work = IconData(0xe3c9, fontFamily: 'MaterialIcons');\n  static const IconData maps_ugc = IconData(0xe3ca, fontFamily: 'MaterialIcons');\n  static const IconData margin = IconData(0xe3cb, fontFamily: 'MaterialIcons');\n  static const IconData mark_as_unread = IconData(0xe3cc, fontFamily: 'MaterialIcons');\n  static const IconData mark_chat_read = IconData(0xe3cd, fontFamily: 'MaterialIcons');\n  static const IconData mark_chat_unread = IconData(0xe3ce, fontFamily: 'MaterialIcons');\n  static const IconData mark_email_read = IconData(0xe3cf, fontFamily: 'MaterialIcons');\n  static const IconData mark_email_unread = IconData(0xe3d0, fontFamily: 'MaterialIcons');\n  static const IconData mark_unread_chat_alt = IconData(0xf0539, fontFamily: 'MaterialIcons');\n  static const IconData markunread = IconData(0xe3d1, fontFamily: 'MaterialIcons');\n  static const IconData markunread_mailbox = IconData(0xe3d2, fontFamily: 'MaterialIcons');\n  static const IconData masks = IconData(0xe3d3, fontFamily: 'MaterialIcons');\n  static const IconData maximize = IconData(0xe3d4, fontFamily: 'MaterialIcons');\n  static const IconData media_bluetooth_off = IconData(0xe3d5, fontFamily: 'MaterialIcons');\n  static const IconData media_bluetooth_on = IconData(0xe3d6, fontFamily: 'MaterialIcons');\n  static const IconData mediation = IconData(0xe3d7, fontFamily: 'MaterialIcons');\n  static const IconData medical_information = IconData(0xf07ac, fontFamily: 'MaterialIcons');\n  static const IconData medical_services = IconData(0xe3d8, fontFamily: 'MaterialIcons');\n  static const IconData medication = IconData(0xe3d9, fontFamily: 'MaterialIcons');\n  static const IconData medication_liquid = IconData(0xf053a, fontFamily: 'MaterialIcons');\n  static const IconData meeting_room = IconData(0xe3da, fontFamily: 'MaterialIcons');\n  static const IconData memory = IconData(0xe3db, fontFamily: 'MaterialIcons');\n  static const IconData menu = IconData(0xe3dc, fontFamily: 'MaterialIcons');\n  static const IconData menu_book = IconData(0xe3dd, fontFamily: 'MaterialIcons');\n  static const IconData menu_open = IconData(0xe3de, fontFamily: 'MaterialIcons');\n  static const IconData merge = IconData(0xf053b, fontFamily: 'MaterialIcons');\n  static const IconData merge_type = IconData(0xe3df, fontFamily: 'MaterialIcons');\n  static const IconData message = IconData(0xe3e0, fontFamily: 'MaterialIcons');\n  static const IconData messenger = IconData(0xe154, fontFamily: 'MaterialIcons');\n  static const IconData messenger_outline = IconData(0xe155, fontFamily: 'MaterialIcons');\n  static const IconData mic = IconData(0xe3e1, fontFamily: 'MaterialIcons');\n  static const IconData mic_external_off = IconData(0xe3e2, fontFamily: 'MaterialIcons');\n  static const IconData mic_external_on = IconData(0xe3e3, fontFamily: 'MaterialIcons');\n  static const IconData mic_none = IconData(0xe3e4, fontFamily: 'MaterialIcons');\n  static const IconData mic_off = IconData(0xe3e5, fontFamily: 'MaterialIcons');\n  static const IconData microwave = IconData(0xe3e6, fontFamily: 'MaterialIcons');\n  static const IconData military_tech = IconData(0xe3e7, fontFamily: 'MaterialIcons');\n  static const IconData minimize = IconData(0xe3e8, fontFamily: 'MaterialIcons');\n  static const IconData minor_crash = IconData(0xf07ad, fontFamily: 'MaterialIcons');\n  static const IconData miscellaneous_services = IconData(0xe3e9, fontFamily: 'MaterialIcons');\n  static const IconData missed_video_call = IconData(0xe3ea, fontFamily: 'MaterialIcons');\n  static const IconData mms = IconData(0xe3eb, fontFamily: 'MaterialIcons');\n  static const IconData mobile_friendly = IconData(0xe3ec, fontFamily: 'MaterialIcons');\n  static const IconData mobile_off = IconData(0xe3ed, fontFamily: 'MaterialIcons');\n  static const IconData mobile_screen_share = IconData(0xe3ee, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData mobiledata_off = IconData(0xe3ef, fontFamily: 'MaterialIcons');\n  static const IconData mode = IconData(0xe3f0, fontFamily: 'MaterialIcons');\n  static const IconData mode_comment = IconData(0xe3f1, fontFamily: 'MaterialIcons');\n  static const IconData mode_edit = IconData(0xe3f2, fontFamily: 'MaterialIcons');\n  static const IconData mode_edit_outline = IconData(0xe3f3, fontFamily: 'MaterialIcons');\n  static const IconData mode_fan_off = IconData(0xf07ae, fontFamily: 'MaterialIcons');\n  static const IconData mode_night = IconData(0xe3f4, fontFamily: 'MaterialIcons');\n  static const IconData mode_of_travel = IconData(0xf053c, fontFamily: 'MaterialIcons');\n  static const IconData mode_standby = IconData(0xe3f5, fontFamily: 'MaterialIcons');\n  static const IconData model_training = IconData(0xe3f6, fontFamily: 'MaterialIcons');\n  static const IconData monetization_on = IconData(0xe3f7, fontFamily: 'MaterialIcons');\n  static const IconData money = IconData(0xe3f8, fontFamily: 'MaterialIcons');\n  static const IconData money_off = IconData(0xe3f9, fontFamily: 'MaterialIcons');\n  static const IconData money_off_csred = IconData(0xe3fa, fontFamily: 'MaterialIcons');\n  static const IconData monitor = IconData(0xe3fb, fontFamily: 'MaterialIcons');\n  static const IconData monitor_heart = IconData(0xf053d, fontFamily: 'MaterialIcons');\n  static const IconData monitor_weight = IconData(0xe3fc, fontFamily: 'MaterialIcons');\n  static const IconData monochrome_photos = IconData(0xe3fd, fontFamily: 'MaterialIcons');\n  static const IconData mood = IconData(0xe3fe, fontFamily: 'MaterialIcons');\n  static const IconData mood_bad = IconData(0xe3ff, fontFamily: 'MaterialIcons');\n  static const IconData moped = IconData(0xe400, fontFamily: 'MaterialIcons');\n  static const IconData more = IconData(0xe401, fontFamily: 'MaterialIcons');\n  static const IconData more_horiz = IconData(0xe402, fontFamily: 'MaterialIcons');\n  static const IconData more_time = IconData(0xe403, fontFamily: 'MaterialIcons');\n  static const IconData more_vert = IconData(0xe404, fontFamily: 'MaterialIcons');\n  static const IconData mosque = IconData(0xf053e, fontFamily: 'MaterialIcons');\n  static const IconData motion_photos_auto = IconData(0xe405, fontFamily: 'MaterialIcons');\n  static const IconData motion_photos_off = IconData(0xe406, fontFamily: 'MaterialIcons');\n  static const IconData motion_photos_on = IconData(0xe407, fontFamily: 'MaterialIcons');\n  static const IconData motion_photos_pause = IconData(0xe408, fontFamily: 'MaterialIcons');\n  static const IconData motion_photos_paused = IconData(0xe409, fontFamily: 'MaterialIcons');\n  static const IconData motorcycle = IconData(0xe40a, fontFamily: 'MaterialIcons');\n  static const IconData mouse = IconData(0xe40b, fontFamily: 'MaterialIcons');\n  static const IconData move_down = IconData(0xf053f, fontFamily: 'MaterialIcons');\n  static const IconData move_to_inbox = IconData(0xe40c, fontFamily: 'MaterialIcons');\n  static const IconData move_up = IconData(0xf0540, fontFamily: 'MaterialIcons');\n  static const IconData movie = IconData(0xe40d, fontFamily: 'MaterialIcons');\n  static const IconData movie_creation = IconData(0xe40e, fontFamily: 'MaterialIcons');\n  static const IconData movie_filter = IconData(0xe40f, fontFamily: 'MaterialIcons');\n  static const IconData moving = IconData(0xe410, fontFamily: 'MaterialIcons');\n  static const IconData mp = IconData(0xe411, fontFamily: 'MaterialIcons');\n  static const IconData multiline_chart = IconData(0xe412, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData multiple_stop = IconData(0xe413, fontFamily: 'MaterialIcons');\n  static const IconData multitrack_audio = IconData(0xe2e3, fontFamily: 'MaterialIcons');\n  static const IconData museum = IconData(0xe414, fontFamily: 'MaterialIcons');\n  static const IconData music_note = IconData(0xe415, fontFamily: 'MaterialIcons');\n  static const IconData music_off = IconData(0xe416, fontFamily: 'MaterialIcons');\n  static const IconData music_video = IconData(0xe417, fontFamily: 'MaterialIcons');\n  static const IconData my_library_add = IconData(0xe375, fontFamily: 'MaterialIcons');\n  static const IconData my_library_books = IconData(0xe377, fontFamily: 'MaterialIcons');\n  static const IconData my_library_music = IconData(0xe378, fontFamily: 'MaterialIcons');\n  static const IconData my_location = IconData(0xe418, fontFamily: 'MaterialIcons');\n  static const IconData nat = IconData(0xe419, fontFamily: 'MaterialIcons');\n  static const IconData nature = IconData(0xe41a, fontFamily: 'MaterialIcons');\n  static const IconData nature_people = IconData(0xe41b, fontFamily: 'MaterialIcons');\n  static const IconData navigate_before = IconData(0xe41c, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData navigate_next = IconData(0xe41d, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData navigation = IconData(0xe41e, fontFamily: 'MaterialIcons');\n  static const IconData near_me = IconData(0xe41f, fontFamily: 'MaterialIcons');\n  static const IconData near_me_disabled = IconData(0xe420, fontFamily: 'MaterialIcons');\n  static const IconData nearby_error = IconData(0xe421, fontFamily: 'MaterialIcons');\n  static const IconData nearby_off = IconData(0xe422, fontFamily: 'MaterialIcons');\n  static const IconData nest_cam_wired_stand = IconData(0xf07af, fontFamily: 'MaterialIcons');\n  static const IconData network_cell = IconData(0xe423, fontFamily: 'MaterialIcons');\n  static const IconData network_check = IconData(0xe424, fontFamily: 'MaterialIcons');\n  static const IconData network_locked = IconData(0xe425, fontFamily: 'MaterialIcons');\n  static const IconData network_ping = IconData(0xf06bf, fontFamily: 'MaterialIcons');\n  static const IconData network_wifi = IconData(0xe426, fontFamily: 'MaterialIcons');\n  static const IconData network_wifi_1_bar = IconData(0xf07b0, fontFamily: 'MaterialIcons');\n  static const IconData network_wifi_2_bar = IconData(0xf07b1, fontFamily: 'MaterialIcons');\n  static const IconData network_wifi_3_bar = IconData(0xf07b2, fontFamily: 'MaterialIcons');\n  static const IconData new_label = IconData(0xe427, fontFamily: 'MaterialIcons');\n  static const IconData new_releases = IconData(0xe428, fontFamily: 'MaterialIcons');\n  static const IconData newspaper = IconData(0xf0541, fontFamily: 'MaterialIcons');\n  static const IconData next_plan = IconData(0xe429, fontFamily: 'MaterialIcons');\n  static const IconData next_week = IconData(0xe42a, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData nfc = IconData(0xe42b, fontFamily: 'MaterialIcons');\n  static const IconData night_shelter = IconData(0xe42c, fontFamily: 'MaterialIcons');\n  static const IconData nightlife = IconData(0xe42d, fontFamily: 'MaterialIcons');\n  static const IconData nightlight = IconData(0xe42e, fontFamily: 'MaterialIcons');\n  static const IconData nightlight_round = IconData(0xe42f, fontFamily: 'MaterialIcons');\n  static const IconData nights_stay = IconData(0xe430, fontFamily: 'MaterialIcons');\n  static const IconData no_accounts = IconData(0xe431, fontFamily: 'MaterialIcons');\n  static const IconData no_adult_content = IconData(0xf07b3, fontFamily: 'MaterialIcons');\n  static const IconData no_backpack = IconData(0xe432, fontFamily: 'MaterialIcons');\n  static const IconData no_cell = IconData(0xe433, fontFamily: 'MaterialIcons');\n  static const IconData no_crash = IconData(0xf07b4, fontFamily: 'MaterialIcons');\n  static const IconData no_drinks = IconData(0xe434, fontFamily: 'MaterialIcons');\n  static const IconData no_encryption = IconData(0xe435, fontFamily: 'MaterialIcons');\n  static const IconData no_encryption_gmailerrorred = IconData(0xe436, fontFamily: 'MaterialIcons');\n  static const IconData no_flash = IconData(0xe437, fontFamily: 'MaterialIcons');\n  static const IconData no_food = IconData(0xe438, fontFamily: 'MaterialIcons');\n  static const IconData no_luggage = IconData(0xe439, fontFamily: 'MaterialIcons');\n  static const IconData no_meals = IconData(0xe43a, fontFamily: 'MaterialIcons');\n  static const IconData no_meals_ouline = IconData(0xe43b, fontFamily: 'MaterialIcons');\n\n    static const IconData no_meeting_room = IconData(0xe43c, fontFamily: 'MaterialIcons');\n  static const IconData no_photography = IconData(0xe43d, fontFamily: 'MaterialIcons');\n  static const IconData no_sim = IconData(0xe43e, fontFamily: 'MaterialIcons');\n  static const IconData no_stroller = IconData(0xe43f, fontFamily: 'MaterialIcons');\n  static const IconData no_transfer = IconData(0xe440, fontFamily: 'MaterialIcons');\n  static const IconData noise_aware = IconData(0xf07b5, fontFamily: 'MaterialIcons');\n  static const IconData noise_control_off = IconData(0xf07b6, fontFamily: 'MaterialIcons');\n  static const IconData nordic_walking = IconData(0xe441, fontFamily: 'MaterialIcons');\n  static const IconData north = IconData(0xe442, fontFamily: 'MaterialIcons');\n  static const IconData north_east = IconData(0xe443, fontFamily: 'MaterialIcons');\n  static const IconData north_west = IconData(0xe444, fontFamily: 'MaterialIcons');\n  static const IconData not_accessible = IconData(0xe445, fontFamily: 'MaterialIcons');\n  static const IconData not_interested = IconData(0xe446, fontFamily: 'MaterialIcons');\n  static const IconData not_listed_location = IconData(0xe447, fontFamily: 'MaterialIcons');\n  static const IconData not_started = IconData(0xe448, fontFamily: 'MaterialIcons');\n  static const IconData note = IconData(0xe449, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData note_add = IconData(0xe44a, fontFamily: 'MaterialIcons');\n  static const IconData note_alt = IconData(0xe44b, fontFamily: 'MaterialIcons');\n  static const IconData notes = IconData(0xe44c, fontFamily: 'MaterialIcons');\n  static const IconData notification_add = IconData(0xe44d, fontFamily: 'MaterialIcons');\n  static const IconData notification_important = IconData(0xe44e, fontFamily: 'MaterialIcons');\n  static const IconData notifications = IconData(0xe44f, fontFamily: 'MaterialIcons');\n  static const IconData notifications_active = IconData(0xe450, fontFamily: 'MaterialIcons');\n  static const IconData notifications_none = IconData(0xe451, fontFamily: 'MaterialIcons');\n  static const IconData notifications_off = IconData(0xe452, fontFamily: 'MaterialIcons');\n  static const IconData notifications_on = IconData(0xe450, fontFamily: 'MaterialIcons');\n  static const IconData notifications_paused = IconData(0xe453, fontFamily: 'MaterialIcons');\n  static const IconData now_wallpaper = IconData(0xe6ca, fontFamily: 'MaterialIcons');\n  static const IconData now_widgets = IconData(0xe6e6, fontFamily: 'MaterialIcons');\n  static const IconData numbers = IconData(0xf0542, fontFamily: 'MaterialIcons');\n  static const IconData offline_bolt = IconData(0xe454, fontFamily: 'MaterialIcons');\n  static const IconData offline_pin = IconData(0xe455, fontFamily: 'MaterialIcons');\n  static const IconData offline_share = IconData(0xe456, fontFamily: 'MaterialIcons');\n  static const IconData oil_barrel = IconData(0xf07b7, fontFamily: 'MaterialIcons');\n  static const IconData on_device_training = IconData(0xf07b8, fontFamily: 'MaterialIcons');\n  static const IconData ondemand_video = IconData(0xe457, fontFamily: 'MaterialIcons');\n  static const IconData online_prediction = IconData(0xe458, fontFamily: 'MaterialIcons');\n  static const IconData opacity = IconData(0xe459, fontFamily: 'MaterialIcons');\n  static const IconData open_in_browser = IconData(0xe45a, fontFamily: 'MaterialIcons');\n  static const IconData open_in_full = IconData(0xe45b, fontFamily: 'MaterialIcons');\n  static const IconData open_in_new = IconData(0xe45c, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData open_in_new_off = IconData(0xe45d, fontFamily: 'MaterialIcons');\n  static const IconData open_with = IconData(0xe45e, fontFamily: 'MaterialIcons');\n  static const IconData other_houses = IconData(0xe45f, fontFamily: 'MaterialIcons');\n  static const IconData outbond = IconData(0xe460, fontFamily: 'MaterialIcons');\n  static const IconData outbound = IconData(0xe461, fontFamily: 'MaterialIcons');\n  static const IconData outbox = IconData(0xe462, fontFamily: 'MaterialIcons');\n  static const IconData outdoor_grill = IconData(0xe463, fontFamily: 'MaterialIcons');\n  static const IconData outgoing_mail = IconData(0xe464, fontFamily: 'MaterialIcons');\n\n    static const IconData outlet = IconData(0xe465, fontFamily: 'MaterialIcons');\n  static const IconData outlined_flag = IconData(0xe466, fontFamily: 'MaterialIcons');\n  static const IconData output = IconData(0xf0543, fontFamily: 'MaterialIcons');\n  static const IconData padding = IconData(0xe467, fontFamily: 'MaterialIcons');\n  static const IconData pages = IconData(0xe468, fontFamily: 'MaterialIcons');\n  static const IconData pageview = IconData(0xe469, fontFamily: 'MaterialIcons');\n  static const IconData paid = IconData(0xe46a, fontFamily: 'MaterialIcons');\n  static const IconData palette = IconData(0xe46b, fontFamily: 'MaterialIcons');\n  static const IconData pan_tool = IconData(0xe46c, fontFamily: 'MaterialIcons');\n  static const IconData pan_tool_alt = IconData(0xf0544, fontFamily: 'MaterialIcons');\n  static const IconData panorama = IconData(0xe46d, fontFamily: 'MaterialIcons');\n  static const IconData panorama_fish_eye = IconData(0xe46e, fontFamily: 'MaterialIcons');\n  static const IconData panorama_fisheye = IconData(0xe46e, fontFamily: 'MaterialIcons');\n  static const IconData panorama_horizontal = IconData(0xe46f, fontFamily: 'MaterialIcons');\n  static const IconData panorama_horizontal_select = IconData(0xe470, fontFamily: 'MaterialIcons');\n  static const IconData panorama_photosphere = IconData(0xe471, fontFamily: 'MaterialIcons');\n  static const IconData panorama_photosphere_select = IconData(0xe472, fontFamily: 'MaterialIcons');\n  static const IconData panorama_vertical = IconData(0xe473, fontFamily: 'MaterialIcons');\n  static const IconData panorama_vertical_select = IconData(0xe474, fontFamily: 'MaterialIcons');\n  static const IconData panorama_wide_angle = IconData(0xe475, fontFamily: 'MaterialIcons');\n  static const IconData panorama_wide_angle_select = IconData(0xe476, fontFamily: 'MaterialIcons');\n  static const IconData paragliding = IconData(0xe477, fontFamily: 'MaterialIcons');\n  static const IconData park = IconData(0xe478, fontFamily: 'MaterialIcons');\n  static const IconData party_mode = IconData(0xe479, fontFamily: 'MaterialIcons');\n  static const IconData password = IconData(0xe47a, fontFamily: 'MaterialIcons');\n  static const IconData paste = IconData(0xe192, fontFamily: 'MaterialIcons');\n  static const IconData pattern = IconData(0xe47b, fontFamily: 'MaterialIcons');\n  static const IconData pause = IconData(0xe47c, fontFamily: 'MaterialIcons');\n  static const IconData pause_circle = IconData(0xe47d, fontFamily: 'MaterialIcons');\n  static const IconData pause_circle_filled = IconData(0xe47e, fontFamily: 'MaterialIcons');\n  static const IconData pause_circle_outline = IconData(0xe47f, fontFamily: 'MaterialIcons');\n  static const IconData pause_presentation = IconData(0xe480, fontFamily: 'MaterialIcons');\n  static const IconData payment = IconData(0xe481, fontFamily: 'MaterialIcons');\n  static const IconData payments = IconData(0xe482, fontFamily: 'MaterialIcons');\n  static const IconData paypal = IconData(0xf0545, fontFamily: 'MaterialIcons');\n  static const IconData pedal_bike = IconData(0xe483, fontFamily: 'MaterialIcons');\n  static const IconData pending = IconData(0xe484, fontFamily: 'MaterialIcons');\n  static const IconData pending_actions = IconData(0xe485, fontFamily: 'MaterialIcons');\n  static const IconData pentagon = IconData(0xf0546, fontFamily: 'MaterialIcons');\n  static const IconData people = IconData(0xe486, fontFamily: 'MaterialIcons');\n  static const IconData people_alt = IconData(0xe487, fontFamily: 'MaterialIcons');\n  static const IconData people_outline = IconData(0xe488, fontFamily: 'MaterialIcons');\n  static const IconData percent = IconData(0xf0547, fontFamily: 'MaterialIcons');\n  static const IconData perm_camera_mic = IconData(0xe489, fontFamily: 'MaterialIcons');\n  static const IconData perm_contact_cal = IconData(0xe48a, fontFamily: 'MaterialIcons');\n  static const IconData perm_contact_calendar = IconData(0xe48a, fontFamily: 'MaterialIcons');\n  static const IconData perm_data_setting = IconData(0xe48b, fontFamily: 'MaterialIcons');\n  static const IconData perm_device_info = IconData(0xe48c, fontFamily: 'MaterialIcons');\n  static const IconData perm_device_information = IconData(0xe48c, fontFamily: 'MaterialIcons');\n  static const IconData perm_identity = IconData(0xe48d, fontFamily: 'MaterialIcons');\n  static const IconData perm_media = IconData(0xe48e, fontFamily: 'MaterialIcons');\n  static const IconData perm_phone_msg = IconData(0xe48f, fontFamily: 'MaterialIcons');\n  static const IconData perm_scan_wifi = IconData(0xe490, fontFamily: 'MaterialIcons');\n  static const IconData person = IconData(0xe491, fontFamily: 'MaterialIcons');\n  static const IconData person_add = IconData(0xe492, fontFamily: 'MaterialIcons');\n  static const IconData person_add_alt = IconData(0xe493, fontFamily: 'MaterialIcons');\n  static const IconData person_add_alt_1 = IconData(0xe494, fontFamily: 'MaterialIcons');\n  static const IconData person_add_disabled = IconData(0xe495, fontFamily: 'MaterialIcons');\n  static const IconData person_off = IconData(0xe496, fontFamily: 'MaterialIcons');\n  static const IconData person_outline = IconData(0xe497, fontFamily: 'MaterialIcons');\n  static const IconData person_pin = IconData(0xe498, fontFamily: 'MaterialIcons');\n  static const IconData person_pin_circle = IconData(0xe499, fontFamily: 'MaterialIcons');\n  static const IconData person_remove = IconData(0xe49a, fontFamily: 'MaterialIcons');\n  static const IconData person_remove_alt_1 = IconData(0xe49b, fontFamily: 'MaterialIcons');\n  static const IconData person_search = IconData(0xe49c, fontFamily: 'MaterialIcons');\n  static const IconData personal_injury = IconData(0xe49d, fontFamily: 'MaterialIcons');\n  static const IconData personal_video = IconData(0xe49e, fontFamily: 'MaterialIcons');\n  static const IconData pest_control = IconData(0xe49f, fontFamily: 'MaterialIcons');\n  static const IconData pest_control_rodent = IconData(0xe4a0, fontFamily: 'MaterialIcons');\n  static const IconData pets = IconData(0xe4a1, fontFamily: 'MaterialIcons');\n  static const IconData phishing = IconData(0xf0548, fontFamily: 'MaterialIcons');\n  static const IconData phone = IconData(0xe4a2, fontFamily: 'MaterialIcons');\n  static const IconData phone_android = IconData(0xe4a3, fontFamily: 'MaterialIcons');\n  static const IconData phone_bluetooth_speaker = IconData(0xe4a4, fontFamily: 'MaterialIcons');\n  static const IconData phone_callback = IconData(0xe4a5, fontFamily: 'MaterialIcons');\n  static const IconData phone_disabled = IconData(0xe4a6, fontFamily: 'MaterialIcons');\n  static const IconData phone_enabled = IconData(0xe4a7, fontFamily: 'MaterialIcons');\n  static const IconData phone_forwarded = IconData(0xe4a8, fontFamily: 'MaterialIcons');\n  static const IconData phone_in_talk = IconData(0xe4a9, fontFamily: 'MaterialIcons');\n  static const IconData phone_iphone = IconData(0xe4aa, fontFamily: 'MaterialIcons');\n  static const IconData phone_locked = IconData(0xe4ab, fontFamily: 'MaterialIcons');\n  static const IconData phone_missed = IconData(0xe4ac, fontFamily: 'MaterialIcons');\n  static const IconData phone_paused = IconData(0xe4ad, fontFamily: 'MaterialIcons');\n  static const IconData phonelink = IconData(0xe4ae, fontFamily: 'MaterialIcons');\n  static const IconData phonelink_erase = IconData(0xe4af, fontFamily: 'MaterialIcons');\n  static const IconData phonelink_lock = IconData(0xe4b0, fontFamily: 'MaterialIcons');\n  static const IconData phonelink_off = IconData(0xe4b1, fontFamily: 'MaterialIcons');\n  static const IconData phonelink_ring = IconData(0xe4b2, fontFamily: 'MaterialIcons');\n  static const IconData phonelink_setup = IconData(0xe4b3, fontFamily: 'MaterialIcons');\n  static const IconData photo = IconData(0xe4b4, fontFamily: 'MaterialIcons');\n  static const IconData photo_album = IconData(0xe4b5, fontFamily: 'MaterialIcons');\n  static const IconData photo_camera = IconData(0xe4b6, fontFamily: 'MaterialIcons');\n  static const IconData photo_camera_back = IconData(0xe4b7, fontFamily: 'MaterialIcons');\n  static const IconData photo_camera_front = IconData(0xe4b8, fontFamily: 'MaterialIcons');\n  static const IconData photo_filter = IconData(0xe4b9, fontFamily: 'MaterialIcons');\n  static const IconData photo_library = IconData(0xe4ba, fontFamily: 'MaterialIcons');\n  static const IconData photo_size_select_actual = IconData(0xe4bb, fontFamily: 'MaterialIcons');\n  static const IconData photo_size_select_large = IconData(0xe4bc, fontFamily: 'MaterialIcons');\n  static const IconData photo_size_select_small = IconData(0xe4bd, fontFamily: 'MaterialIcons');\n  static const IconData php = IconData(0xf0549, fontFamily: 'MaterialIcons');\n  static const IconData piano = IconData(0xe4be, fontFamily: 'MaterialIcons');\n  static const IconData piano_off = IconData(0xe4bf, fontFamily: 'MaterialIcons');\n  static const IconData picture_as_pdf = IconData(0xe4c0, fontFamily: 'MaterialIcons');\n  static const IconData picture_in_picture = IconData(0xe4c1, fontFamily: 'MaterialIcons');\n  static const IconData picture_in_picture_alt = IconData(0xe4c2, fontFamily: 'MaterialIcons');\n  static const IconData pie_chart = IconData(0xe4c3, fontFamily: 'MaterialIcons');\n\n    static const IconData pie_chart_outline = IconData(0xe4c5, fontFamily: 'MaterialIcons');\n  static const IconData pin = IconData(0xe4c6, fontFamily: 'MaterialIcons');\n  static const IconData pin_drop = IconData(0xe4c7, fontFamily: 'MaterialIcons');\n  static const IconData pin_end = IconData(0xf054b, fontFamily: 'MaterialIcons');\n  static const IconData pin_invoke = IconData(0xf054c, fontFamily: 'MaterialIcons');\n  static const IconData pinch = IconData(0xf054d, fontFamily: 'MaterialIcons');\n  static const IconData pivot_table_chart = IconData(0xe4c8, fontFamily: 'MaterialIcons');\n  static const IconData pix = IconData(0xf054e, fontFamily: 'MaterialIcons');\n  static const IconData place = IconData(0xe4c9, fontFamily: 'MaterialIcons');\n  static const IconData plagiarism = IconData(0xe4ca, fontFamily: 'MaterialIcons');\n  static const IconData play_arrow = IconData(0xe4cb, fontFamily: 'MaterialIcons');\n  static const IconData play_circle = IconData(0xe4cc, fontFamily: 'MaterialIcons');\n  static const IconData play_circle_fill = IconData(0xe4cd, fontFamily: 'MaterialIcons');\n  static const IconData play_circle_filled = IconData(0xe4cd, fontFamily: 'MaterialIcons');\n  static const IconData play_circle_outline = IconData(0xe4ce, fontFamily: 'MaterialIcons');\n  static const IconData play_disabled = IconData(0xe4cf, fontFamily: 'MaterialIcons');\n  static const IconData play_for_work = IconData(0xe4d0, fontFamily: 'MaterialIcons');\n  static const IconData play_lesson = IconData(0xe4d1, fontFamily: 'MaterialIcons');\n  static const IconData playlist_add = IconData(0xe4d2, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData playlist_add_check = IconData(0xe4d3, fontFamily: 'MaterialIcons');\n  static const IconData playlist_add_check_circle = IconData(0xf054f, fontFamily: 'MaterialIcons');\n  static const IconData playlist_add_circle = IconData(0xf0550, fontFamily: 'MaterialIcons');\n  static const IconData playlist_play = IconData(0xe4d4, fontFamily: 'MaterialIcons');\n  static const IconData playlist_remove = IconData(0xf0551, fontFamily: 'MaterialIcons');\n  static const IconData plumbing = IconData(0xe4d5, fontFamily: 'MaterialIcons');\n  static const IconData plus_one = IconData(0xe4d6, fontFamily: 'MaterialIcons');\n  static const IconData podcasts = IconData(0xe4d7, fontFamily: 'MaterialIcons');\n  static const IconData point_of_sale = IconData(0xe4d8, fontFamily: 'MaterialIcons');\n  static const IconData policy = IconData(0xe4d9, fontFamily: 'MaterialIcons');\n  static const IconData poll = IconData(0xe4da, fontFamily: 'MaterialIcons');\n  static const IconData polyline = IconData(0xf0552, fontFamily: 'MaterialIcons');\n  static const IconData polymer = IconData(0xe4db, fontFamily: 'MaterialIcons');\n  static const IconData pool = IconData(0xe4dc, fontFamily: 'MaterialIcons');\n  static const IconData portable_wifi_off = IconData(0xe4dd, fontFamily: 'MaterialIcons');\n  static const IconData portrait = IconData(0xe4de, fontFamily: 'MaterialIcons');\n  static const IconData post_add = IconData(0xe4df, fontFamily: 'MaterialIcons');\n  static const IconData power = IconData(0xe4e0, fontFamily: 'MaterialIcons');\n  static const IconData power_input = IconData(0xe4e1, fontFamily: 'MaterialIcons');\n  static const IconData power_off = IconData(0xe4e2, fontFamily: 'MaterialIcons');\n  static const IconData power_settings_new = IconData(0xe4e3, fontFamily: 'MaterialIcons');\n  static const IconData precision_manufacturing = IconData(0xe4e4, fontFamily: 'MaterialIcons');\n  static const IconData pregnant_woman = IconData(0xe4e5, fontFamily: 'MaterialIcons');\n  static const IconData present_to_all = IconData(0xe4e6, fontFamily: 'MaterialIcons');\n  static const IconData preview = IconData(0xe4e7, fontFamily: 'MaterialIcons');\n  static const IconData price_change = IconData(0xe4e8, fontFamily: 'MaterialIcons');\n  static const IconData price_check = IconData(0xe4e9, fontFamily: 'MaterialIcons');\n  static const IconData print = IconData(0xe4ea, fontFamily: 'MaterialIcons');\n  static const IconData print_disabled = IconData(0xe4eb, fontFamily: 'MaterialIcons');\n  static const IconData priority_high = IconData(0xe4ec, fontFamily: 'MaterialIcons');\n  static const IconData privacy_tip = IconData(0xe4ed, fontFamily: 'MaterialIcons');\n  static const IconData private_connectivity = IconData(0xf0553, fontFamily: 'MaterialIcons');\n  static const IconData production_quantity_limits = IconData(0xe4ee, fontFamily: 'MaterialIcons');\n  static const IconData propane = IconData(0xf07b9, fontFamily: 'MaterialIcons');\n  static const IconData propane_tank = IconData(0xf07ba, fontFamily: 'MaterialIcons');\n  static const IconData psychology = IconData(0xe4ef, fontFamily: 'MaterialIcons');\n  static const IconData public = IconData(0xe4f0, fontFamily: 'MaterialIcons');\n  static const IconData public_off = IconData(0xe4f1, fontFamily: 'MaterialIcons');\n  static const IconData publish = IconData(0xe4f2, fontFamily: 'MaterialIcons');\n  static const IconData published_with_changes = IconData(0xe4f3, fontFamily: 'MaterialIcons');\n  static const IconData punch_clock = IconData(0xf0554, fontFamily: 'MaterialIcons');\n  static const IconData push_pin = IconData(0xe4f4, fontFamily: 'MaterialIcons');\n  static const IconData qr_code = IconData(0xe4f5, fontFamily: 'MaterialIcons');\n  static const IconData qr_code_2 = IconData(0xe4f6, fontFamily: 'MaterialIcons');\n  static const IconData qr_code_scanner = IconData(0xe4f7, fontFamily: 'MaterialIcons');\n  static const IconData query_builder = IconData(0xe4f8, fontFamily: 'MaterialIcons');\n  static const IconData query_stats = IconData(0xe4f9, fontFamily: 'MaterialIcons');\n  static const IconData question_answer = IconData(0xe4fa, fontFamily: 'MaterialIcons');\n  static const IconData question_mark = IconData(0xf0555, fontFamily: 'MaterialIcons');\n  static const IconData queue = IconData(0xe4fb, fontFamily: 'MaterialIcons');\n  static const IconData queue_music = IconData(0xe4fc, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData queue_play_next = IconData(0xe4fd, fontFamily: 'MaterialIcons');\n  static const IconData quick_contacts_dialer = IconData(0xe18c, fontFamily: 'MaterialIcons');\n  static const IconData quick_contacts_mail = IconData(0xe18a, fontFamily: 'MaterialIcons');\n  static const IconData quickreply = IconData(0xe4fe, fontFamily: 'MaterialIcons');\n  static const IconData quiz = IconData(0xe4ff, fontFamily: 'MaterialIcons');\n  static const IconData quora = IconData(0xf0556, fontFamily: 'MaterialIcons');\n  static const IconData r_mobiledata = IconData(0xe500, fontFamily: 'MaterialIcons');\n  static const IconData radar = IconData(0xe501, fontFamily: 'MaterialIcons');\n  static const IconData radio = IconData(0xe502, fontFamily: 'MaterialIcons');\n  static const IconData radio_button_checked = IconData(0xe503, fontFamily: 'MaterialIcons');\n  static const IconData radio_button_off = IconData(0xe504, fontFamily: 'MaterialIcons');\n  static const IconData radio_button_on = IconData(0xe503, fontFamily: 'MaterialIcons');\n  static const IconData radio_button_unchecked = IconData(0xe504, fontFamily: 'MaterialIcons');\n  static const IconData railway_alert = IconData(0xe505, fontFamily: 'MaterialIcons');\n  static const IconData ramen_dining = IconData(0xe506, fontFamily: 'MaterialIcons');\n  static const IconData ramp_left = IconData(0xf0557, fontFamily: 'MaterialIcons');\n  static const IconData ramp_right = IconData(0xf0558, fontFamily: 'MaterialIcons');\n  static const IconData rate_review = IconData(0xe507, fontFamily: 'MaterialIcons');\n  static const IconData raw_off = IconData(0xe508, fontFamily: 'MaterialIcons');\n  static const IconData raw_on = IconData(0xe509, fontFamily: 'MaterialIcons');\n  static const IconData read_more = IconData(0xe50a, fontFamily: 'MaterialIcons');\n  static const IconData real_estate_agent = IconData(0xe50b, fontFamily: 'MaterialIcons');\n  static const IconData receipt = IconData(0xe50c, fontFamily: 'MaterialIcons');\n  static const IconData receipt_long = IconData(0xe50d, fontFamily: 'MaterialIcons');\n  static const IconData recent_actors = IconData(0xe50e, fontFamily: 'MaterialIcons');\n  static const IconData recommend = IconData(0xe50f, fontFamily: 'MaterialIcons');\n  static const IconData record_voice_over = IconData(0xe510, fontFamily: 'MaterialIcons');\n  static const IconData rectangle = IconData(0xf0559, fontFamily: 'MaterialIcons');\n  static const IconData recycling = IconData(0xf055a, fontFamily: 'MaterialIcons');\n  static const IconData reddit = IconData(0xf055b, fontFamily: 'MaterialIcons');\n  static const IconData redeem = IconData(0xe511, fontFamily: 'MaterialIcons');\n  static const IconData redo = IconData(0xe512, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData reduce_capacity = IconData(0xe513, fontFamily: 'MaterialIcons');\n  static const IconData refresh = IconData(0xe514, fontFamily: 'MaterialIcons');\n  static const IconData remember_me = IconData(0xe515, fontFamily: 'MaterialIcons');\n  static const IconData remove = IconData(0xe516, fontFamily: 'MaterialIcons');\n  static const IconData remove_circle = IconData(0xe517, fontFamily: 'MaterialIcons');\n  static const IconData remove_circle_outline = IconData(0xe518, fontFamily: 'MaterialIcons');\n  static const IconData remove_done = IconData(0xe519, fontFamily: 'MaterialIcons');\n  static const IconData remove_from_queue = IconData(0xe51a, fontFamily: 'MaterialIcons');\n  static const IconData remove_moderator = IconData(0xe51b, fontFamily: 'MaterialIcons');\n  static const IconData remove_red_eye = IconData(0xe51c, fontFamily: 'MaterialIcons');\n  static const IconData remove_road = IconData(0xf07bb, fontFamily: 'MaterialIcons');\n  static const IconData remove_shopping_cart = IconData(0xe51d, fontFamily: 'MaterialIcons');\n  static const IconData reorder = IconData(0xe51e, fontFamily: 'MaterialIcons');\n  static const IconData repeat = IconData(0xe51f, fontFamily: 'MaterialIcons');\n  static const IconData repeat_on = IconData(0xe520, fontFamily: 'MaterialIcons');\n  static const IconData repeat_one = IconData(0xe521, fontFamily: 'MaterialIcons');\n  static const IconData repeat_one_on = IconData(0xe522, fontFamily: 'MaterialIcons');\n  static const IconData replay = IconData(0xe523, fontFamily: 'MaterialIcons');\n  static const IconData replay_10 = IconData(0xe524, fontFamily: 'MaterialIcons');\n  static const IconData replay_30 = IconData(0xe525, fontFamily: 'MaterialIcons');\n  static const IconData replay_5 = IconData(0xe526, fontFamily: 'MaterialIcons');\n  static const IconData replay_circle_filled = IconData(0xe527, fontFamily: 'MaterialIcons');\n  static const IconData reply = IconData(0xe528, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData reply_all = IconData(0xe529, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData report = IconData(0xe52a, fontFamily: 'MaterialIcons');\n  static const IconData report_gmailerrorred = IconData(0xe52b, fontFamily: 'MaterialIcons');\n  static const IconData report_off = IconData(0xe52c, fontFamily: 'MaterialIcons');\n  static const IconData report_problem = IconData(0xe52d, fontFamily: 'MaterialIcons');\n  static const IconData request_page = IconData(0xe52e, fontFamily: 'MaterialIcons');\n  static const IconData request_quote = IconData(0xe52f, fontFamily: 'MaterialIcons');\n  static const IconData reset_tv = IconData(0xe530, fontFamily: 'MaterialIcons');\n  static const IconData restart_alt = IconData(0xe531, fontFamily: 'MaterialIcons');\n  static const IconData restaurant = IconData(0xe532, fontFamily: 'MaterialIcons');\n  static const IconData restaurant_menu = IconData(0xe533, fontFamily: 'MaterialIcons');\n  static const IconData restore = IconData(0xe534, fontFamily: 'MaterialIcons');\n  static const IconData restore_from_trash = IconData(0xe535, fontFamily: 'MaterialIcons');\n  static const IconData restore_page = IconData(0xe536, fontFamily: 'MaterialIcons');\n  static const IconData reviews = IconData(0xe537, fontFamily: 'MaterialIcons');\n  static const IconData rice_bowl = IconData(0xe538, fontFamily: 'MaterialIcons');\n  static const IconData ring_volume = IconData(0xe539, fontFamily: 'MaterialIcons');\n  static const IconData rocket = IconData(0xf055c, fontFamily: 'MaterialIcons');\n  static const IconData rocket_launch = IconData(0xf055d, fontFamily: 'MaterialIcons');\n  static const IconData roller_shades = IconData(0xf07bc, fontFamily: 'MaterialIcons');\n  static const IconData roller_shades_closed = IconData(0xf07bd, fontFamily: 'MaterialIcons');\n  static const IconData roller_skating = IconData(0xf06c0, fontFamily: 'MaterialIcons');\n  static const IconData roofing = IconData(0xe53a, fontFamily: 'MaterialIcons');\n  static const IconData room = IconData(0xe53b, fontFamily: 'MaterialIcons');\n  static const IconData room_preferences = IconData(0xe53c, fontFamily: 'MaterialIcons');\n  static const IconData room_service = IconData(0xe53d, fontFamily: 'MaterialIcons');\n  static const IconData rotate_90_degrees_ccw = IconData(0xe53e, fontFamily: 'MaterialIcons');\n  static const IconData rotate_90_degrees_cw = IconData(0xf055e, fontFamily: 'MaterialIcons');\n  static const IconData rotate_left = IconData(0xe53f, fontFamily: 'MaterialIcons');\n  static const IconData rotate_right = IconData(0xe540, fontFamily: 'MaterialIcons');\n  static const IconData roundabout_left = IconData(0xf055f, fontFamily: 'MaterialIcons');\n  static const IconData roundabout_right = IconData(0xf0560, fontFamily: 'MaterialIcons');\n  static const IconData rounded_corner = IconData(0xe541, fontFamily: 'MaterialIcons');\n  static const IconData route = IconData(0xf0561, fontFamily: 'MaterialIcons');\n  static const IconData router = IconData(0xe542, fontFamily: 'MaterialIcons');\n  static const IconData rowing = IconData(0xe543, fontFamily: 'MaterialIcons');\n  static const IconData rss_feed = IconData(0xe544, fontFamily: 'MaterialIcons');\n  static const IconData rsvp = IconData(0xe545, fontFamily: 'MaterialIcons');\n  static const IconData rtt = IconData(0xe546, fontFamily: 'MaterialIcons');\n  static const IconData rule = IconData(0xe547, fontFamily: 'MaterialIcons');\n  static const IconData rule_folder = IconData(0xe548, fontFamily: 'MaterialIcons');\n  static const IconData run_circle = IconData(0xe549, fontFamily: 'MaterialIcons');\n  static const IconData running_with_errors = IconData(0xe54a, fontFamily: 'MaterialIcons');\n  static const IconData rv_hookup = IconData(0xe54b, fontFamily: 'MaterialIcons');\n  static const IconData safety_check = IconData(0xf07be, fontFamily: 'MaterialIcons');\n  static const IconData safety_divider = IconData(0xe54c, fontFamily: 'MaterialIcons');\n  static const IconData sailing = IconData(0xe54d, fontFamily: 'MaterialIcons');\n  static const IconData sanitizer = IconData(0xe54e, fontFamily: 'MaterialIcons');\n  static const IconData satellite = IconData(0xe54f, fontFamily: 'MaterialIcons');\n  static const IconData satellite_alt = IconData(0xf0562, fontFamily: 'MaterialIcons');\n  static const IconData save = IconData(0xe550, fontFamily: 'MaterialIcons');\n  static const IconData save_alt = IconData(0xe551, fontFamily: 'MaterialIcons');\n  static const IconData save_as = IconData(0xf0563, fontFamily: 'MaterialIcons');\n  static const IconData saved_search = IconData(0xe552, fontFamily: 'MaterialIcons');\n  static const IconData savings = IconData(0xe553, fontFamily: 'MaterialIcons');\n  static const IconData scale = IconData(0xf0564, fontFamily: 'MaterialIcons');\n  static const IconData scanner = IconData(0xe554, fontFamily: 'MaterialIcons');\n  static const IconData scatter_plot = IconData(0xe555, fontFamily: 'MaterialIcons');\n  static const IconData schedule = IconData(0xe556, fontFamily: 'MaterialIcons');\n  static const IconData schedule_send = IconData(0xe557, fontFamily: 'MaterialIcons');\n  static const IconData schema = IconData(0xe558, fontFamily: 'MaterialIcons');\n  static const IconData school = IconData(0xe559, fontFamily: 'MaterialIcons');\n  static const IconData science = IconData(0xe55a, fontFamily: 'MaterialIcons');\n  static const IconData score = IconData(0xe55b, fontFamily: 'MaterialIcons');\n  static const IconData scoreboard = IconData(0xf06c1, fontFamily: 'MaterialIcons');\n  static const IconData screen_lock_landscape = IconData(0xe55c, fontFamily: 'MaterialIcons');\n  static const IconData screen_lock_portrait = IconData(0xe55d, fontFamily: 'MaterialIcons');\n  static const IconData screen_lock_rotation = IconData(0xe55e, fontFamily: 'MaterialIcons');\n  static const IconData screen_rotation = IconData(0xe55f, fontFamily: 'MaterialIcons');\n  static const IconData screen_rotation_alt = IconData(0xf07bf, fontFamily: 'MaterialIcons');\n  static const IconData screen_search_desktop = IconData(0xe560, fontFamily: 'MaterialIcons');\n  static const IconData screen_share = IconData(0xe561, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData screenshot = IconData(0xe562, fontFamily: 'MaterialIcons');\n  static const IconData screenshot_monitor = IconData(0xf07c0, fontFamily: 'MaterialIcons');\n  static const IconData scuba_diving = IconData(0xf06c2, fontFamily: 'MaterialIcons');\n  static const IconData sd = IconData(0xe563, fontFamily: 'MaterialIcons');\n  static const IconData sd_card = IconData(0xe564, fontFamily: 'MaterialIcons');\n  static const IconData sd_card_alert = IconData(0xe565, fontFamily: 'MaterialIcons');\n  static const IconData sd_storage = IconData(0xe566, fontFamily: 'MaterialIcons');\n  static const IconData search = IconData(0xe567, fontFamily: 'MaterialIcons');\n  static const IconData search_off = IconData(0xe568, fontFamily: 'MaterialIcons');\n  static const IconData security = IconData(0xe569, fontFamily: 'MaterialIcons');\n  static const IconData security_update = IconData(0xe56a, fontFamily: 'MaterialIcons');\n  static const IconData security_update_good = IconData(0xe56b, fontFamily: 'MaterialIcons');\n  static const IconData security_update_warning = IconData(0xe56c, fontFamily: 'MaterialIcons');\n  static const IconData segment = IconData(0xe56d, fontFamily: 'MaterialIcons');\n  static const IconData select_all = IconData(0xe56e, fontFamily: 'MaterialIcons');\n  static const IconData self_improvement = IconData(0xe56f, fontFamily: 'MaterialIcons');\n  static const IconData sell = IconData(0xe570, fontFamily: 'MaterialIcons');\n  static const IconData send = IconData(0xe571, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData send_and_archive = IconData(0xe572, fontFamily: 'MaterialIcons');\n  static const IconData send_time_extension = IconData(0xf0565, fontFamily: 'MaterialIcons');\n  static const IconData send_to_mobile = IconData(0xe573, fontFamily: 'MaterialIcons');\n  static const IconData sensor_door = IconData(0xe574, fontFamily: 'MaterialIcons');\n  static const IconData sensor_occupied = IconData(0xf07c1, fontFamily: 'MaterialIcons');\n  static const IconData sensor_window = IconData(0xe575, fontFamily: 'MaterialIcons');\n  static const IconData sensors = IconData(0xe576, fontFamily: 'MaterialIcons');\n  static const IconData sensors_off = IconData(0xe577, fontFamily: 'MaterialIcons');\n  static const IconData sentiment_dissatisfied = IconData(0xe578, fontFamily: 'MaterialIcons');\n  static const IconData sentiment_neutral = IconData(0xe579, fontFamily: 'MaterialIcons');\n  static const IconData sentiment_satisfied = IconData(0xe57a, fontFamily: 'MaterialIcons');\n  static const IconData sentiment_satisfied_alt = IconData(0xe57b, fontFamily: 'MaterialIcons');\n  static const IconData sentiment_very_dissatisfied = IconData(0xe57c, fontFamily: 'MaterialIcons');\n  static const IconData sentiment_very_satisfied = IconData(0xe57d, fontFamily: 'MaterialIcons');\n  static const IconData set_meal = IconData(0xe57e, fontFamily: 'MaterialIcons');\n  static const IconData settings = IconData(0xe57f, fontFamily: 'MaterialIcons');\n  static const IconData settings_accessibility = IconData(0xe580, fontFamily: 'MaterialIcons');\n  static const IconData settings_applications = IconData(0xe581, fontFamily: 'MaterialIcons');\n  static const IconData settings_backup_restore = IconData(0xe582, fontFamily: 'MaterialIcons');\n  static const IconData settings_bluetooth = IconData(0xe583, fontFamily: 'MaterialIcons');\n  static const IconData settings_brightness = IconData(0xe584, fontFamily: 'MaterialIcons');\n  static const IconData settings_cell = IconData(0xe585, fontFamily: 'MaterialIcons');\n  static const IconData settings_display = IconData(0xe584, fontFamily: 'MaterialIcons');\n  static const IconData settings_ethernet = IconData(0xe586, fontFamily: 'MaterialIcons');\n  static const IconData settings_input_antenna = IconData(0xe587, fontFamily: 'MaterialIcons');\n  static const IconData settings_input_component = IconData(0xe588, fontFamily: 'MaterialIcons');\n  static const IconData settings_input_composite = IconData(0xe589, fontFamily: 'MaterialIcons');\n  static const IconData settings_input_hdmi = IconData(0xe58a, fontFamily: 'MaterialIcons');\n  static const IconData settings_input_svideo = IconData(0xe58b, fontFamily: 'MaterialIcons');\n  static const IconData settings_overscan = IconData(0xe58c, fontFamily: 'MaterialIcons');\n  static const IconData settings_phone = IconData(0xe58d, fontFamily: 'MaterialIcons');\n  static const IconData settings_power = IconData(0xe58e, fontFamily: 'MaterialIcons');\n  static const IconData settings_remote = IconData(0xe58f, fontFamily: 'MaterialIcons');\n  static const IconData settings_suggest = IconData(0xe590, fontFamily: 'MaterialIcons');\n  static const IconData settings_system_daydream = IconData(0xe591, fontFamily: 'MaterialIcons');\n  static const IconData settings_voice = IconData(0xe592, fontFamily: 'MaterialIcons');\n  static const IconData severe_cold = IconData(0xf07c2, fontFamily: 'MaterialIcons');\n  static const IconData share = IconData(0xe593, fontFamily: 'MaterialIcons');\n  static const IconData share_arrival_time = IconData(0xe594, fontFamily: 'MaterialIcons');\n  static const IconData share_location = IconData(0xe595, fontFamily: 'MaterialIcons');\n  static const IconData shield = IconData(0xe596, fontFamily: 'MaterialIcons');\n  static const IconData shield_moon = IconData(0xf0566, fontFamily: 'MaterialIcons');\n  static const IconData shop = IconData(0xe597, fontFamily: 'MaterialIcons');\n  static const IconData shop_2 = IconData(0xe598, fontFamily: 'MaterialIcons');\n  static const IconData shop_two = IconData(0xe599, fontFamily: 'MaterialIcons');\n  static const IconData shopify = IconData(0xf0567, fontFamily: 'MaterialIcons');\n  static const IconData shopping_bag = IconData(0xe59a, fontFamily: 'MaterialIcons');\n  static const IconData shopping_basket = IconData(0xe59b, fontFamily: 'MaterialIcons');\n  static const IconData shopping_cart = IconData(0xe59c, fontFamily: 'MaterialIcons');\n  static const IconData shopping_cart_checkout = IconData(0xf0568, fontFamily: 'MaterialIcons');\n  static const IconData short_text = IconData(0xe59d, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData shortcut = IconData(0xe59e, fontFamily: 'MaterialIcons');\n  static const IconData show_chart = IconData(0xe59f, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData shower = IconData(0xe5a0, fontFamily: 'MaterialIcons');\n  static const IconData shuffle = IconData(0xe5a1, fontFamily: 'MaterialIcons');\n  static const IconData shuffle_on = IconData(0xe5a2, fontFamily: 'MaterialIcons');\n  static const IconData shutter_speed = IconData(0xe5a3, fontFamily: 'MaterialIcons');\n  static const IconData sick = IconData(0xe5a4, fontFamily: 'MaterialIcons');\n  static const IconData sign_language = IconData(0xf07c3, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_0_bar = IconData(0xe5a5, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_4_bar = IconData(0xe5a6, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_alt = IconData(0xe5a7, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_alt_1_bar = IconData(0xf07c4, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_alt_2_bar = IconData(0xf07c5, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_connected_no_internet_0_bar = IconData(0xe5a8, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_connected_no_internet_4_bar = IconData(0xe5a9, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_no_sim = IconData(0xe5aa, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_nodata = IconData(0xe5ab, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_null = IconData(0xe5ac, fontFamily: 'MaterialIcons');\n  static const IconData signal_cellular_off = IconData(0xe5ad, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_0_bar = IconData(0xe5ae, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_4_bar = IconData(0xe5af, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_4_bar_lock = IconData(0xe5b0, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_bad = IconData(0xe5b1, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_connected_no_internet_4 = IconData(0xe5b2, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_off = IconData(0xe5b3, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_statusbar_4_bar = IconData(0xe5b4, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_statusbar_connected_no_internet_4 = IconData(0xe5b5, fontFamily: 'MaterialIcons');\n  static const IconData signal_wifi_statusbar_null = IconData(0xe5b6, fontFamily: 'MaterialIcons');\n  static const IconData signpost = IconData(0xf0569, fontFamily: 'MaterialIcons');\n  static const IconData sim_card = IconData(0xe5b7, fontFamily: 'MaterialIcons');\n  static const IconData sim_card_alert = IconData(0xe5b8, fontFamily: 'MaterialIcons');\n  static const IconData sim_card_download = IconData(0xe5b9, fontFamily: 'MaterialIcons');\n  static const IconData single_bed = IconData(0xe5ba, fontFamily: 'MaterialIcons');\n  static const IconData sip = IconData(0xe5bb, fontFamily: 'MaterialIcons');\n  static const IconData skateboarding = IconData(0xe5bc, fontFamily: 'MaterialIcons');\n  static const IconData skip_next = IconData(0xe5bd, fontFamily: 'MaterialIcons');\n  static const IconData skip_previous = IconData(0xe5be, fontFamily: 'MaterialIcons');\n  static const IconData sledding = IconData(0xe5bf, fontFamily: 'MaterialIcons');\n  static const IconData slideshow = IconData(0xe5c0, fontFamily: 'MaterialIcons');\n  static const IconData slow_motion_video = IconData(0xe5c1, fontFamily: 'MaterialIcons');\n  static const IconData smart_button = IconData(0xe5c2, fontFamily: 'MaterialIcons');\n  static const IconData smart_display = IconData(0xe5c3, fontFamily: 'MaterialIcons');\n  static const IconData smart_screen = IconData(0xe5c4, fontFamily: 'MaterialIcons');\n  static const IconData smart_toy = IconData(0xe5c5, fontFamily: 'MaterialIcons');\n  static const IconData smartphone = IconData(0xe5c6, fontFamily: 'MaterialIcons');\n  static const IconData smoke_free = IconData(0xe5c7, fontFamily: 'MaterialIcons');\n  static const IconData smoking_rooms = IconData(0xe5c8, fontFamily: 'MaterialIcons');\n  static const IconData sms = IconData(0xe5c9, fontFamily: 'MaterialIcons');\n  static const IconData sms_failed = IconData(0xe5ca, fontFamily: 'MaterialIcons');\n  static const IconData snapchat = IconData(0xf056a, fontFamily: 'MaterialIcons');\n  static const IconData snippet_folder = IconData(0xe5cb, fontFamily: 'MaterialIcons');\n  static const IconData snooze = IconData(0xe5cc, fontFamily: 'MaterialIcons');\n  static const IconData snowboarding = IconData(0xe5cd, fontFamily: 'MaterialIcons');\n  static const IconData snowing = IconData(0xf056b, fontFamily: 'MaterialIcons');\n\n    static const IconData snowmobile = IconData(0xe5ce, fontFamily: 'MaterialIcons');\n  static const IconData snowshoeing = IconData(0xe5cf, fontFamily: 'MaterialIcons');\n  static const IconData soap = IconData(0xe5d0, fontFamily: 'MaterialIcons');\n  static const IconData social_distance = IconData(0xe5d1, fontFamily: 'MaterialIcons');\n  static const IconData solar_power = IconData(0xf07c6, fontFamily: 'MaterialIcons');\n  static const IconData sort = IconData(0xe5d2, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData sort_by_alpha = IconData(0xe5d3, fontFamily: 'MaterialIcons');\n  static const IconData sos = IconData(0xf07c7, fontFamily: 'MaterialIcons');\n  static const IconData soup_kitchen = IconData(0xf056c, fontFamily: 'MaterialIcons');\n  static const IconData source = IconData(0xe5d4, fontFamily: 'MaterialIcons');\n  static const IconData south = IconData(0xe5d5, fontFamily: 'MaterialIcons');\n  static const IconData south_america = IconData(0xf056d, fontFamily: 'MaterialIcons');\n  static const IconData south_east = IconData(0xe5d6, fontFamily: 'MaterialIcons');\n  static const IconData south_west = IconData(0xe5d7, fontFamily: 'MaterialIcons');\n  static const IconData spa = IconData(0xe5d8, fontFamily: 'MaterialIcons');\n  static const IconData space_bar = IconData(0xe5d9, fontFamily: 'MaterialIcons');\n  static const IconData space_dashboard = IconData(0xe5da, fontFamily: 'MaterialIcons');\n  static const IconData spatial_audio = IconData(0xf07c8, fontFamily: 'MaterialIcons');\n  static const IconData spatial_audio_off = IconData(0xf07c9, fontFamily: 'MaterialIcons');\n  static const IconData spatial_tracking = IconData(0xf07ca, fontFamily: 'MaterialIcons');\n  static const IconData speaker = IconData(0xe5db, fontFamily: 'MaterialIcons');\n  static const IconData speaker_group = IconData(0xe5dc, fontFamily: 'MaterialIcons');\n  static const IconData speaker_notes = IconData(0xe5dd, fontFamily: 'MaterialIcons');\n  static const IconData speaker_notes_off = IconData(0xe5de, fontFamily: 'MaterialIcons');\n  static const IconData speaker_phone = IconData(0xe5df, fontFamily: 'MaterialIcons');\n  static const IconData speed = IconData(0xe5e0, fontFamily: 'MaterialIcons');\n  static const IconData spellcheck = IconData(0xe5e1, fontFamily: 'MaterialIcons');\n  static const IconData splitscreen = IconData(0xe5e2, fontFamily: 'MaterialIcons');\n  static const IconData spoke = IconData(0xf056e, fontFamily: 'MaterialIcons');\n  static const IconData sports = IconData(0xe5e3, fontFamily: 'MaterialIcons');\n  static const IconData sports_bar = IconData(0xe5e4, fontFamily: 'MaterialIcons');\n  static const IconData sports_baseball = IconData(0xe5e5, fontFamily: 'MaterialIcons');\n  static const IconData sports_basketball = IconData(0xe5e6, fontFamily: 'MaterialIcons');\n  static const IconData sports_cricket = IconData(0xe5e7, fontFamily: 'MaterialIcons');\n  static const IconData sports_esports = IconData(0xe5e8, fontFamily: 'MaterialIcons');\n  static const IconData sports_football = IconData(0xe5e9, fontFamily: 'MaterialIcons');\n  static const IconData sports_golf = IconData(0xe5ea, fontFamily: 'MaterialIcons');\n  static const IconData sports_gymnastics = IconData(0xf06c3, fontFamily: 'MaterialIcons');\n  static const IconData sports_handball = IconData(0xe5eb, fontFamily: 'MaterialIcons');\n  static const IconData sports_hockey = IconData(0xe5ec, fontFamily: 'MaterialIcons');\n  static const IconData sports_kabaddi = IconData(0xe5ed, fontFamily: 'MaterialIcons');\n  static const IconData sports_martial_arts = IconData(0xf056f, fontFamily: 'MaterialIcons');\n  static const IconData sports_mma = IconData(0xe5ee, fontFamily: 'MaterialIcons');\n  static const IconData sports_motorsports = IconData(0xe5ef, fontFamily: 'MaterialIcons');\n  static const IconData sports_rugby = IconData(0xe5f0, fontFamily: 'MaterialIcons');\n  static const IconData sports_score = IconData(0xe5f1, fontFamily: 'MaterialIcons');\n  static const IconData sports_soccer = IconData(0xe5f2, fontFamily: 'MaterialIcons');\n  static const IconData sports_tennis = IconData(0xe5f3, fontFamily: 'MaterialIcons');\n  static const IconData sports_volleyball = IconData(0xe5f4, fontFamily: 'MaterialIcons');\n  static const IconData square = IconData(0xf0570, fontFamily: 'MaterialIcons');\n  static const IconData square_foot = IconData(0xe5f5, fontFamily: 'MaterialIcons');\n  static const IconData ssid_chart = IconData(0xf0571, fontFamily: 'MaterialIcons');\n  static const IconData stacked_bar_chart = IconData(0xe5f6, fontFamily: 'MaterialIcons');\n  static const IconData stacked_line_chart = IconData(0xe5f7, fontFamily: 'MaterialIcons');\n  static const IconData stadium = IconData(0xf0572, fontFamily: 'MaterialIcons');\n  static const IconData stairs = IconData(0xe5f8, fontFamily: 'MaterialIcons');\n  static const IconData star = IconData(0xe5f9, fontFamily: 'MaterialIcons');\n  static const IconData star_border = IconData(0xe5fa, fontFamily: 'MaterialIcons');\n  static const IconData star_border_purple500 = IconData(0xe5fb, fontFamily: 'MaterialIcons');\n  static const IconData star_half = IconData(0xe5fc, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData star_outline = IconData(0xe5fd, fontFamily: 'MaterialIcons');\n  static const IconData star_purple500 = IconData(0xe5fe, fontFamily: 'MaterialIcons');\n  static const IconData star_rate = IconData(0xe5ff, fontFamily: 'MaterialIcons');\n  static const IconData stars = IconData(0xe600, fontFamily: 'MaterialIcons');\n  static const IconData start = IconData(0xf0573, fontFamily: 'MaterialIcons');\n  static const IconData stay_current_landscape = IconData(0xe601, fontFamily: 'MaterialIcons');\n  static const IconData stay_current_portrait = IconData(0xe602, fontFamily: 'MaterialIcons');\n  static const IconData stay_primary_landscape = IconData(0xe603, fontFamily: 'MaterialIcons');\n  static const IconData stay_primary_portrait = IconData(0xe604, fontFamily: 'MaterialIcons');\n  static const IconData sticky_note_2 = IconData(0xe605, fontFamily: 'MaterialIcons');\n  static const IconData stop = IconData(0xe606, fontFamily: 'MaterialIcons');\n  static const IconData stop_circle = IconData(0xe607, fontFamily: 'MaterialIcons');\n  static const IconData stop_screen_share = IconData(0xe608, fontFamily: 'MaterialIcons');\n  static const IconData storage = IconData(0xe609, fontFamily: 'MaterialIcons');\n  static const IconData store = IconData(0xe60a, fontFamily: 'MaterialIcons');\n  static const IconData store_mall_directory = IconData(0xe60b, fontFamily: 'MaterialIcons');\n  static const IconData storefront = IconData(0xe60c, fontFamily: 'MaterialIcons');\n  static const IconData storm = IconData(0xe60d, fontFamily: 'MaterialIcons');\n  static const IconData straight = IconData(0xf0574, fontFamily: 'MaterialIcons');\n  static const IconData straighten = IconData(0xe60e, fontFamily: 'MaterialIcons');\n  static const IconData stream = IconData(0xe60f, fontFamily: 'MaterialIcons');\n  static const IconData streetview = IconData(0xe610, fontFamily: 'MaterialIcons');\n  static const IconData strikethrough_s = IconData(0xe611, fontFamily: 'MaterialIcons');\n  static const IconData stroller = IconData(0xe612, fontFamily: 'MaterialIcons');\n  static const IconData style = IconData(0xe613, fontFamily: 'MaterialIcons');\n  static const IconData subdirectory_arrow_left = IconData(0xe614, fontFamily: 'MaterialIcons');\n  static const IconData subdirectory_arrow_right = IconData(0xe615, fontFamily: 'MaterialIcons');\n  static const IconData subject = IconData(0xe616, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData subscript = IconData(0xe617, fontFamily: 'MaterialIcons');\n  static const IconData subscriptions = IconData(0xe618, fontFamily: 'MaterialIcons');\n  static const IconData subtitles = IconData(0xe619, fontFamily: 'MaterialIcons');\n  static const IconData subtitles_off = IconData(0xe61a, fontFamily: 'MaterialIcons');\n  static const IconData subway = IconData(0xe61b, fontFamily: 'MaterialIcons');\n  static const IconData summarize = IconData(0xe61c, fontFamily: 'MaterialIcons');\n  static const IconData sunny = IconData(0xf0575, fontFamily: 'MaterialIcons');\n\n    static const IconData sunny_snowing = IconData(0xf0576, fontFamily: 'MaterialIcons');\n\n    static const IconData superscript = IconData(0xe61d, fontFamily: 'MaterialIcons');\n  static const IconData supervised_user_circle = IconData(0xe61e, fontFamily: 'MaterialIcons');\n  static const IconData supervisor_account = IconData(0xe61f, fontFamily: 'MaterialIcons');\n  static const IconData support = IconData(0xe620, fontFamily: 'MaterialIcons');\n  static const IconData support_agent = IconData(0xe621, fontFamily: 'MaterialIcons');\n  static const IconData surfing = IconData(0xe622, fontFamily: 'MaterialIcons');\n  static const IconData surround_sound = IconData(0xe623, fontFamily: 'MaterialIcons');\n  static const IconData swap_calls = IconData(0xe624, fontFamily: 'MaterialIcons');\n  static const IconData swap_horiz = IconData(0xe625, fontFamily: 'MaterialIcons');\n  static const IconData swap_horizontal_circle = IconData(0xe626, fontFamily: 'MaterialIcons');\n  static const IconData swap_vert = IconData(0xe627, fontFamily: 'MaterialIcons');\n  static const IconData swap_vert_circle = IconData(0xe628, fontFamily: 'MaterialIcons');\n  static const IconData swap_vertical_circle = IconData(0xe628, fontFamily: 'MaterialIcons');\n  static const IconData swipe = IconData(0xe629, fontFamily: 'MaterialIcons');\n  static const IconData swipe_down = IconData(0xf0578, fontFamily: 'MaterialIcons');\n  static const IconData swipe_down_alt = IconData(0xf0577, fontFamily: 'MaterialIcons');\n  static const IconData swipe_left = IconData(0xf057a, fontFamily: 'MaterialIcons');\n  static const IconData swipe_left_alt = IconData(0xf0579, fontFamily: 'MaterialIcons');\n  static const IconData swipe_right = IconData(0xf057c, fontFamily: 'MaterialIcons');\n  static const IconData swipe_right_alt = IconData(0xf057b, fontFamily: 'MaterialIcons');\n  static const IconData swipe_up = IconData(0xf057e, fontFamily: 'MaterialIcons');\n  static const IconData swipe_up_alt = IconData(0xf057d, fontFamily: 'MaterialIcons');\n  static const IconData swipe_vertical = IconData(0xf057f, fontFamily: 'MaterialIcons');\n  static const IconData switch_access_shortcut = IconData(0xf0581, fontFamily: 'MaterialIcons');\n  static const IconData switch_access_shortcut_add = IconData(0xf0580, fontFamily: 'MaterialIcons');\n  static const IconData switch_account = IconData(0xe62a, fontFamily: 'MaterialIcons');\n  static const IconData switch_camera = IconData(0xe62b, fontFamily: 'MaterialIcons');\n  static const IconData switch_left = IconData(0xe62c, fontFamily: 'MaterialIcons');\n  static const IconData switch_right = IconData(0xe62d, fontFamily: 'MaterialIcons');\n  static const IconData switch_video = IconData(0xe62e, fontFamily: 'MaterialIcons');\n  static const IconData synagogue = IconData(0xf0582, fontFamily: 'MaterialIcons');\n  static const IconData sync = IconData(0xe62f, fontFamily: 'MaterialIcons');\n  static const IconData sync_alt = IconData(0xe630, fontFamily: 'MaterialIcons');\n  static const IconData sync_disabled = IconData(0xe631, fontFamily: 'MaterialIcons');\n  static const IconData sync_lock = IconData(0xf0583, fontFamily: 'MaterialIcons');\n  static const IconData sync_problem = IconData(0xe632, fontFamily: 'MaterialIcons');\n  static const IconData system_security_update = IconData(0xe633, fontFamily: 'MaterialIcons');\n  static const IconData system_security_update_good = IconData(0xe634, fontFamily: 'MaterialIcons');\n  static const IconData system_security_update_warning = IconData(0xe635, fontFamily: 'MaterialIcons');\n  static const IconData system_update = IconData(0xe636, fontFamily: 'MaterialIcons');\n  static const IconData system_update_alt = IconData(0xe637, fontFamily: 'MaterialIcons');\n  static const IconData system_update_tv = IconData(0xe637, fontFamily: 'MaterialIcons');\n  static const IconData tab = IconData(0xe638, fontFamily: 'MaterialIcons');\n  static const IconData tab_unselected = IconData(0xe639, fontFamily: 'MaterialIcons');\n  static const IconData table_bar = IconData(0xf0584, fontFamily: 'MaterialIcons');\n  static const IconData table_chart = IconData(0xe63a, fontFamily: 'MaterialIcons');\n  static const IconData table_restaurant = IconData(0xf0585, fontFamily: 'MaterialIcons');\n  static const IconData table_rows = IconData(0xe63b, fontFamily: 'MaterialIcons');\n  static const IconData table_view = IconData(0xe63c, fontFamily: 'MaterialIcons');\n  static const IconData tablet = IconData(0xe63d, fontFamily: 'MaterialIcons');\n  static const IconData tablet_android = IconData(0xe63e, fontFamily: 'MaterialIcons');\n  static const IconData tablet_mac = IconData(0xe63f, fontFamily: 'MaterialIcons');\n  static const IconData tag = IconData(0xe640, fontFamily: 'MaterialIcons');\n  static const IconData tag_faces = IconData(0xe641, fontFamily: 'MaterialIcons');\n  static const IconData takeout_dining = IconData(0xe642, fontFamily: 'MaterialIcons');\n  static const IconData tap_and_play = IconData(0xe643, fontFamily: 'MaterialIcons');\n  static const IconData tapas = IconData(0xe644, fontFamily: 'MaterialIcons');\n  static const IconData task = IconData(0xe645, fontFamily: 'MaterialIcons');\n  static const IconData task_alt = IconData(0xe646, fontFamily: 'MaterialIcons');\n  static const IconData taxi_alert = IconData(0xe647, fontFamily: 'MaterialIcons');\n  static const IconData telegram = IconData(0xf0586, fontFamily: 'MaterialIcons');\n  static const IconData temple_buddhist = IconData(0xf0587, fontFamily: 'MaterialIcons');\n  static const IconData temple_hindu = IconData(0xf0588, fontFamily: 'MaterialIcons');\n  static const IconData terminal = IconData(0xf0589, fontFamily: 'MaterialIcons');\n  static const IconData terrain = IconData(0xe648, fontFamily: 'MaterialIcons');\n  static const IconData text_decrease = IconData(0xf058a, fontFamily: 'MaterialIcons');\n  static const IconData text_fields = IconData(0xe649, fontFamily: 'MaterialIcons');\n  static const IconData text_format = IconData(0xe64a, fontFamily: 'MaterialIcons');\n  static const IconData text_increase = IconData(0xf058b, fontFamily: 'MaterialIcons');\n  static const IconData text_rotate_up = IconData(0xe64b, fontFamily: 'MaterialIcons');\n  static const IconData text_rotate_vertical = IconData(0xe64c, fontFamily: 'MaterialIcons');\n  static const IconData text_rotation_angledown = IconData(0xe64d, fontFamily: 'MaterialIcons');\n  static const IconData text_rotation_angleup = IconData(0xe64e, fontFamily: 'MaterialIcons');\n  static const IconData text_rotation_down = IconData(0xe64f, fontFamily: 'MaterialIcons');\n  static const IconData text_rotation_none = IconData(0xe650, fontFamily: 'MaterialIcons');\n  static const IconData text_snippet = IconData(0xe651, fontFamily: 'MaterialIcons');\n  static const IconData textsms = IconData(0xe652, fontFamily: 'MaterialIcons');\n  static const IconData texture = IconData(0xe653, fontFamily: 'MaterialIcons');\n  static const IconData theater_comedy = IconData(0xe654, fontFamily: 'MaterialIcons');\n  static const IconData theaters = IconData(0xe655, fontFamily: 'MaterialIcons');\n  static const IconData thermostat = IconData(0xe656, fontFamily: 'MaterialIcons');\n  static const IconData thermostat_auto = IconData(0xe657, fontFamily: 'MaterialIcons');\n  static const IconData thumb_down = IconData(0xe658, fontFamily: 'MaterialIcons');\n  static const IconData thumb_down_alt = IconData(0xe659, fontFamily: 'MaterialIcons');\n  static const IconData thumb_down_off_alt = IconData(0xe65a, fontFamily: 'MaterialIcons');\n  static const IconData thumb_up = IconData(0xe65b, fontFamily: 'MaterialIcons');\n  static const IconData thumb_up_alt = IconData(0xe65c, fontFamily: 'MaterialIcons');\n  static const IconData thumb_up_off_alt = IconData(0xe65d, fontFamily: 'MaterialIcons');\n  static const IconData thumbs_up_down = IconData(0xe65e, fontFamily: 'MaterialIcons');\n  static const IconData thunderstorm = IconData(0xf07cb, fontFamily: 'MaterialIcons');\n  static const IconData tiktok = IconData(0xf058c, fontFamily: 'MaterialIcons');\n  static const IconData time_to_leave = IconData(0xe65f, fontFamily: 'MaterialIcons');\n  static const IconData timelapse = IconData(0xe660, fontFamily: 'MaterialIcons');\n  static const IconData timeline = IconData(0xe661, fontFamily: 'MaterialIcons');\n  static const IconData timer = IconData(0xe662, fontFamily: 'MaterialIcons');\n  static const IconData timer_10 = IconData(0xe663, fontFamily: 'MaterialIcons');\n  static const IconData timer_10_select = IconData(0xe664, fontFamily: 'MaterialIcons');\n  static const IconData timer_3 = IconData(0xe665, fontFamily: 'MaterialIcons');\n  static const IconData timer_3_select = IconData(0xe666, fontFamily: 'MaterialIcons');\n  static const IconData timer_off = IconData(0xe667, fontFamily: 'MaterialIcons');\n  static const IconData tips_and_updates = IconData(0xf058d, fontFamily: 'MaterialIcons');\n  static const IconData tire_repair = IconData(0xf06c4, fontFamily: 'MaterialIcons');\n  static const IconData title = IconData(0xe668, fontFamily: 'MaterialIcons');\n  static const IconData toc = IconData(0xe669, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData today = IconData(0xe66a, fontFamily: 'MaterialIcons');\n  static const IconData toggle_off = IconData(0xe66b, fontFamily: 'MaterialIcons');\n  static const IconData toggle_on = IconData(0xe66c, fontFamily: 'MaterialIcons');\n  static const IconData token = IconData(0xf058e, fontFamily: 'MaterialIcons');\n  static const IconData toll = IconData(0xe66d, fontFamily: 'MaterialIcons');\n  static const IconData tonality = IconData(0xe66e, fontFamily: 'MaterialIcons');\n  static const IconData topic = IconData(0xe66f, fontFamily: 'MaterialIcons');\n  static const IconData tornado = IconData(0xf07cc, fontFamily: 'MaterialIcons');\n  static const IconData touch_app = IconData(0xe670, fontFamily: 'MaterialIcons');\n  static const IconData tour = IconData(0xe671, fontFamily: 'MaterialIcons');\n  static const IconData toys = IconData(0xe672, fontFamily: 'MaterialIcons');\n  static const IconData track_changes = IconData(0xe673, fontFamily: 'MaterialIcons');\n  static const IconData traffic = IconData(0xe674, fontFamily: 'MaterialIcons');\n  static const IconData train = IconData(0xe675, fontFamily: 'MaterialIcons');\n  static const IconData tram = IconData(0xe676, fontFamily: 'MaterialIcons');\n  static const IconData transcribe = IconData(0xf07cd, fontFamily: 'MaterialIcons');\n  static const IconData transfer_within_a_station = IconData(0xe677, fontFamily: 'MaterialIcons');\n  static const IconData transform = IconData(0xe678, fontFamily: 'MaterialIcons');\n  static const IconData transgender = IconData(0xe679, fontFamily: 'MaterialIcons');\n  static const IconData transit_enterexit = IconData(0xe67a, fontFamily: 'MaterialIcons');\n  static const IconData translate = IconData(0xe67b, fontFamily: 'MaterialIcons');\n  static const IconData travel_explore = IconData(0xe67c, fontFamily: 'MaterialIcons');\n  static const IconData trending_down = IconData(0xe67d, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData trending_flat = IconData(0xe67e, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData trending_neutral = IconData(0xe67e, fontFamily: 'MaterialIcons');\n  static const IconData trending_up = IconData(0xe67f, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData trip_origin = IconData(0xe680, fontFamily: 'MaterialIcons');\n  static const IconData troubleshoot = IconData(0xf07ce, fontFamily: 'MaterialIcons');\n  static const IconData try_sms_star = IconData(0xe681, fontFamily: 'MaterialIcons');\n  static const IconData tsunami = IconData(0xf07cf, fontFamily: 'MaterialIcons');\n  static const IconData tty = IconData(0xe682, fontFamily: 'MaterialIcons');\n  static const IconData tune = IconData(0xe683, fontFamily: 'MaterialIcons');\n  static const IconData tungsten = IconData(0xe684, fontFamily: 'MaterialIcons');\n  static const IconData turn_left = IconData(0xf058f, fontFamily: 'MaterialIcons');\n  static const IconData turn_right = IconData(0xf0590, fontFamily: 'MaterialIcons');\n  static const IconData turn_sharp_left = IconData(0xf0591, fontFamily: 'MaterialIcons');\n  static const IconData turn_sharp_right = IconData(0xf0592, fontFamily: 'MaterialIcons');\n  static const IconData turn_slight_left = IconData(0xf0593, fontFamily: 'MaterialIcons');\n  static const IconData turn_slight_right = IconData(0xf0594, fontFamily: 'MaterialIcons');\n  static const IconData turned_in = IconData(0xe685, fontFamily: 'MaterialIcons');\n  static const IconData turned_in_not = IconData(0xe686, fontFamily: 'MaterialIcons');\n  static const IconData tv = IconData(0xe687, fontFamily: 'MaterialIcons');\n  static const IconData tv_off = IconData(0xe688, fontFamily: 'MaterialIcons');\n  static const IconData two_wheeler = IconData(0xe689, fontFamily: 'MaterialIcons');\n  static const IconData type_specimen = IconData(0xf07d0, fontFamily: 'MaterialIcons');\n  static const IconData u_turn_left = IconData(0xf0595, fontFamily: 'MaterialIcons');\n  static const IconData u_turn_right = IconData(0xf0596, fontFamily: 'MaterialIcons');\n  static const IconData umbrella = IconData(0xe68a, fontFamily: 'MaterialIcons');\n  static const IconData unarchive = IconData(0xe68b, fontFamily: 'MaterialIcons');\n  static const IconData undo = IconData(0xe68c, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData unfold_less = IconData(0xe68d, fontFamily: 'MaterialIcons');\n  static const IconData unfold_more = IconData(0xe68e, fontFamily: 'MaterialIcons');\n  static const IconData unpublished = IconData(0xe68f, fontFamily: 'MaterialIcons');\n  static const IconData unsubscribe = IconData(0xe690, fontFamily: 'MaterialIcons');\n  static const IconData upcoming = IconData(0xe691, fontFamily: 'MaterialIcons');\n  static const IconData update = IconData(0xe692, fontFamily: 'MaterialIcons');\n  static const IconData update_disabled = IconData(0xe693, fontFamily: 'MaterialIcons');\n  static const IconData upgrade = IconData(0xe694, fontFamily: 'MaterialIcons');\n  static const IconData upload = IconData(0xe695, fontFamily: 'MaterialIcons');\n  static const IconData upload_file = IconData(0xe696, fontFamily: 'MaterialIcons');\n  static const IconData usb = IconData(0xe697, fontFamily: 'MaterialIcons');\n  static const IconData usb_off = IconData(0xe698, fontFamily: 'MaterialIcons');\n  static const IconData vaccines = IconData(0xf0597, fontFamily: 'MaterialIcons');\n  static const IconData vape_free = IconData(0xf06c5, fontFamily: 'MaterialIcons');\n  static const IconData vaping_rooms = IconData(0xf06c6, fontFamily: 'MaterialIcons');\n  static const IconData verified = IconData(0xe699, fontFamily: 'MaterialIcons');\n  static const IconData verified_user = IconData(0xe69a, fontFamily: 'MaterialIcons');\n  static const IconData vertical_align_bottom = IconData(0xe69b, fontFamily: 'MaterialIcons');\n  static const IconData vertical_align_center = IconData(0xe69c, fontFamily: 'MaterialIcons');\n  static const IconData vertical_align_top = IconData(0xe69d, fontFamily: 'MaterialIcons');\n  static const IconData vertical_distribute = IconData(0xe69e, fontFamily: 'MaterialIcons');\n  static const IconData vertical_shades = IconData(0xf07d1, fontFamily: 'MaterialIcons');\n  static const IconData vertical_shades_closed = IconData(0xf07d2, fontFamily: 'MaterialIcons');\n  static const IconData vertical_split = IconData(0xe69f, fontFamily: 'MaterialIcons');\n  static const IconData vibration = IconData(0xe6a0, fontFamily: 'MaterialIcons');\n  static const IconData video_call = IconData(0xe6a1, fontFamily: 'MaterialIcons');\n  static const IconData video_camera_back = IconData(0xe6a2, fontFamily: 'MaterialIcons');\n  static const IconData video_camera_front = IconData(0xe6a3, fontFamily: 'MaterialIcons');\n  static const IconData video_collection = IconData(0xe6a5, fontFamily: 'MaterialIcons');\n  static const IconData video_file = IconData(0xf0598, fontFamily: 'MaterialIcons');\n  static const IconData video_label = IconData(0xe6a4, fontFamily: 'MaterialIcons');\n  static const IconData video_library = IconData(0xe6a5, fontFamily: 'MaterialIcons');\n  static const IconData video_settings = IconData(0xe6a6, fontFamily: 'MaterialIcons');\n  static const IconData video_stable = IconData(0xe6a7, fontFamily: 'MaterialIcons');\n  static const IconData videocam = IconData(0xe6a8, fontFamily: 'MaterialIcons');\n  static const IconData videocam_off = IconData(0xe6a9, fontFamily: 'MaterialIcons');\n  static const IconData videogame_asset = IconData(0xe6aa, fontFamily: 'MaterialIcons');\n  static const IconData videogame_asset_off = IconData(0xe6ab, fontFamily: 'MaterialIcons');\n  static const IconData view_agenda = IconData(0xe6ac, fontFamily: 'MaterialIcons');\n  static const IconData view_array = IconData(0xe6ad, fontFamily: 'MaterialIcons');\n  static const IconData view_carousel = IconData(0xe6ae, fontFamily: 'MaterialIcons');\n  static const IconData view_column = IconData(0xe6af, fontFamily: 'MaterialIcons');\n  static const IconData view_comfortable = IconData(0xe6b0, fontFamily: 'MaterialIcons');\n  static const IconData view_comfy = IconData(0xe6b0, fontFamily: 'MaterialIcons');\n  static const IconData view_comfy_alt = IconData(0xf0599, fontFamily: 'MaterialIcons');\n  static const IconData view_compact = IconData(0xe6b1, fontFamily: 'MaterialIcons');\n  static const IconData view_compact_alt = IconData(0xf059a, fontFamily: 'MaterialIcons');\n  static const IconData view_cozy = IconData(0xf059b, fontFamily: 'MaterialIcons');\n  static const IconData view_day = IconData(0xe6b2, fontFamily: 'MaterialIcons');\n  static const IconData view_headline = IconData(0xe6b3, fontFamily: 'MaterialIcons');\n  static const IconData view_in_ar = IconData(0xe6b4, fontFamily: 'MaterialIcons');\n  static const IconData view_kanban = IconData(0xf059c, fontFamily: 'MaterialIcons');\n  static const IconData view_list = IconData(0xe6b5, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData view_module = IconData(0xe6b6, fontFamily: 'MaterialIcons');\n  static const IconData view_quilt = IconData(0xe6b7, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData view_sidebar = IconData(0xe6b8, fontFamily: 'MaterialIcons');\n  static const IconData view_stream = IconData(0xe6b9, fontFamily: 'MaterialIcons');\n  static const IconData view_timeline = IconData(0xf059d, fontFamily: 'MaterialIcons');\n  static const IconData view_week = IconData(0xe6ba, fontFamily: 'MaterialIcons');\n  static const IconData vignette = IconData(0xe6bb, fontFamily: 'MaterialIcons');\n  static const IconData villa = IconData(0xe6bc, fontFamily: 'MaterialIcons');\n  static const IconData visibility = IconData(0xe6bd, fontFamily: 'MaterialIcons');\n  static const IconData visibility_off = IconData(0xe6be, fontFamily: 'MaterialIcons');\n  static const IconData voice_chat = IconData(0xe6bf, fontFamily: 'MaterialIcons');\n  static const IconData voice_over_off = IconData(0xe6c0, fontFamily: 'MaterialIcons');\n  static const IconData voicemail = IconData(0xe6c1, fontFamily: 'MaterialIcons');\n  static const IconData volcano = IconData(0xf07d3, fontFamily: 'MaterialIcons');\n  static const IconData volume_down = IconData(0xe6c2, fontFamily: 'MaterialIcons');\n  static const IconData volume_down_alt = IconData(0xf059e, fontFamily: 'MaterialIcons');\n\n    static const IconData volume_mute = IconData(0xe6c3, fontFamily: 'MaterialIcons');\n  static const IconData volume_off = IconData(0xe6c4, fontFamily: 'MaterialIcons');\n  static const IconData volume_up = IconData(0xe6c5, fontFamily: 'MaterialIcons');\n  static const IconData volunteer_activism = IconData(0xe6c6, fontFamily: 'MaterialIcons');\n  static const IconData vpn_key = IconData(0xe6c7, fontFamily: 'MaterialIcons');\n  static const IconData vpn_key_off = IconData(0xf059f, fontFamily: 'MaterialIcons');\n  static const IconData vpn_lock = IconData(0xe6c8, fontFamily: 'MaterialIcons');\n  static const IconData vrpano = IconData(0xe6c9, fontFamily: 'MaterialIcons');\n  static const IconData wallet = IconData(0xf07d4, fontFamily: 'MaterialIcons');\n  static const IconData wallet_giftcard = IconData(0xe13e, fontFamily: 'MaterialIcons');\n  static const IconData wallet_membership = IconData(0xe13f, fontFamily: 'MaterialIcons');\n  static const IconData wallet_travel = IconData(0xe140, fontFamily: 'MaterialIcons');\n  static const IconData wallpaper = IconData(0xe6ca, fontFamily: 'MaterialIcons');\n  static const IconData warehouse = IconData(0xf05a0, fontFamily: 'MaterialIcons');\n  static const IconData warning = IconData(0xe6cb, fontFamily: 'MaterialIcons');\n  static const IconData warning_amber = IconData(0xe6cc, fontFamily: 'MaterialIcons');\n  static const IconData wash = IconData(0xe6cd, fontFamily: 'MaterialIcons');\n  static const IconData watch = IconData(0xe6ce, fontFamily: 'MaterialIcons');\n  static const IconData watch_later = IconData(0xe6cf, fontFamily: 'MaterialIcons');\n  static const IconData watch_off = IconData(0xf05a1, fontFamily: 'MaterialIcons');\n  static const IconData water = IconData(0xe6d0, fontFamily: 'MaterialIcons');\n  static const IconData water_damage = IconData(0xe6d1, fontFamily: 'MaterialIcons');\n  static const IconData water_drop = IconData(0xf05a2, fontFamily: 'MaterialIcons');\n  static const IconData waterfall_chart = IconData(0xe6d2, fontFamily: 'MaterialIcons');\n  static const IconData waves = IconData(0xe6d3, fontFamily: 'MaterialIcons');\n  static const IconData waving_hand = IconData(0xf05a3, fontFamily: 'MaterialIcons');\n  static const IconData wb_auto = IconData(0xe6d4, fontFamily: 'MaterialIcons');\n  static const IconData wb_cloudy = IconData(0xe6d5, fontFamily: 'MaterialIcons');\n  static const IconData wb_incandescent = IconData(0xe6d6, fontFamily: 'MaterialIcons');\n  static const IconData wb_iridescent = IconData(0xe6d7, fontFamily: 'MaterialIcons');\n  static const IconData wb_shade = IconData(0xe6d8, fontFamily: 'MaterialIcons');\n  static const IconData wb_sunny = IconData(0xe6d9, fontFamily: 'MaterialIcons');\n  static const IconData wb_twighlight = IconData(0xe6da, fontFamily: 'MaterialIcons');\n\n    static const IconData wb_twilight = IconData(0xe6db, fontFamily: 'MaterialIcons');\n  static const IconData wc = IconData(0xe6dc, fontFamily: 'MaterialIcons');\n  static const IconData web = IconData(0xe6dd, fontFamily: 'MaterialIcons');\n  static const IconData web_asset = IconData(0xe6de, fontFamily: 'MaterialIcons');\n  static const IconData web_asset_off = IconData(0xe6df, fontFamily: 'MaterialIcons');\n  static const IconData web_stories = IconData(0xe6e0, fontFamily: 'MaterialIcons');\n\n    static const IconData webhook = IconData(0xf05a4, fontFamily: 'MaterialIcons');\n  static const IconData wechat = IconData(0xf05a5, fontFamily: 'MaterialIcons');\n  static const IconData weekend = IconData(0xe6e1, fontFamily: 'MaterialIcons');\n  static const IconData west = IconData(0xe6e2, fontFamily: 'MaterialIcons');\n  static const IconData whatsapp = IconData(0xf05a6, fontFamily: 'MaterialIcons');\n  static const IconData whatshot = IconData(0xe6e3, fontFamily: 'MaterialIcons');\n  static const IconData wheelchair_pickup = IconData(0xe6e4, fontFamily: 'MaterialIcons');\n  static const IconData where_to_vote = IconData(0xe6e5, fontFamily: 'MaterialIcons');\n  static const IconData widgets = IconData(0xe6e6, fontFamily: 'MaterialIcons');\n  static const IconData width_full = IconData(0xf07d5, fontFamily: 'MaterialIcons');\n  static const IconData width_normal = IconData(0xf07d6, fontFamily: 'MaterialIcons');\n  static const IconData width_wide = IconData(0xf07d7, fontFamily: 'MaterialIcons');\n  static const IconData wifi = IconData(0xe6e7, fontFamily: 'MaterialIcons');\n  static const IconData wifi_1_bar = IconData(0xf07d8, fontFamily: 'MaterialIcons');\n  static const IconData wifi_2_bar = IconData(0xf07d9, fontFamily: 'MaterialIcons');\n  static const IconData wifi_calling = IconData(0xe6e8, fontFamily: 'MaterialIcons');\n  static const IconData wifi_calling_3 = IconData(0xe6e9, fontFamily: 'MaterialIcons');\n  static const IconData wifi_channel = IconData(0xf05a7, fontFamily: 'MaterialIcons');\n  static const IconData wifi_find = IconData(0xf05a8, fontFamily: 'MaterialIcons');\n  static const IconData wifi_lock = IconData(0xe6ea, fontFamily: 'MaterialIcons');\n  static const IconData wifi_off = IconData(0xe6eb, fontFamily: 'MaterialIcons');\n  static const IconData wifi_password = IconData(0xf05a9, fontFamily: 'MaterialIcons');\n  static const IconData wifi_protected_setup = IconData(0xe6ec, fontFamily: 'MaterialIcons');\n  static const IconData wifi_tethering = IconData(0xe6ed, fontFamily: 'MaterialIcons');\n  static const IconData wifi_tethering_error = IconData(0xf05aa, fontFamily: 'MaterialIcons');\n  static const IconData wifi_tethering_off = IconData(0xe6ef, fontFamily: 'MaterialIcons');\n  static const IconData wind_power = IconData(0xf07da, fontFamily: 'MaterialIcons');\n  static const IconData window = IconData(0xe6f0, fontFamily: 'MaterialIcons');\n  static const IconData wine_bar = IconData(0xe6f1, fontFamily: 'MaterialIcons');\n  static const IconData woman = IconData(0xf05ab, fontFamily: 'MaterialIcons');\n  static const IconData woo_commerce = IconData(0xf05ac, fontFamily: 'MaterialIcons');\n  static const IconData wordpress = IconData(0xf05ad, fontFamily: 'MaterialIcons');\n  static const IconData work = IconData(0xe6f2, fontFamily: 'MaterialIcons');\n  static const IconData work_history = IconData(0xf07db, fontFamily: 'MaterialIcons');\n  static const IconData work_off = IconData(0xe6f3, fontFamily: 'MaterialIcons');\n  static const IconData work_outline = IconData(0xe6f4, fontFamily: 'MaterialIcons');\n  static const IconData workspace_premium = IconData(0xf05ae, fontFamily: 'MaterialIcons');\n  static const IconData workspaces = IconData(0xe6f5, fontFamily: 'MaterialIcons');\n  static const IconData workspaces_filled = IconData(0xe6f6, fontFamily: 'MaterialIcons');\n  static const IconData workspaces_outline = IconData(0xe6f7, fontFamily: 'MaterialIcons');\n  static const IconData wrap_text = IconData(0xe6f8, fontFamily: 'MaterialIcons', matchTextDirection: true);\n  static const IconData wrong_location = IconData(0xe6f9, fontFamily: 'MaterialIcons');\n  static const IconData wysiwyg = IconData(0xe6fa, fontFamily: 'MaterialIcons');\n  static const IconData yard = IconData(0xe6fb, fontFamily: 'MaterialIcons');\n  static const IconData youtube_searched_for = IconData(0xe6fc, fontFamily: 'MaterialIcons');\n  static const IconData zoom_in = IconData(0xe6fd, fontFamily: 'MaterialIcons');\n  static const IconData zoom_in_map = IconData(0xf05af, fontFamily: 'MaterialIcons');\n  static const IconData zoom_out = IconData(0xe6fe, fontFamily: 'MaterialIcons');\n  static const IconData zoom_out_map = IconData(0xe6ff, fontFamily: 'MaterialIcons');\n}\n"
        },
        {
            "uri": "package:flutter/painting.dart",
            "source": "library painting;\n\nexport 'package:flutter/src/painting/alignment.dart';\nexport 'package:flutter/src/painting/basic_types.dart';\nexport 'package:flutter/src/painting/borders.dart';\nexport 'package:flutter/src/painting/box_border.dart';\nexport 'package:flutter/src/painting/box_decoration.dart';\nexport 'package:flutter/src/painting/decoration.dart';\nexport 'package:flutter/src/painting/edge_insets.dart';\nexport 'package:flutter/src/painting/text_style.dart';\n"
        },
        {
            "uri": "package:flutter/src/painting/basic_types.dart",
            "source": "export 'dart:ui' show\n  BlendMode,\n  BlurStyle,\n  Canvas,\n  Clip,\n  Color,\n  ColorFilter,\n  FilterQuality,\n  FontStyle,\n  FontWeight,\n  ImageShader,\n  Locale,\n  MaskFilter,\n  Offset,\n  Paint,\n  PaintingStyle,\n  Path,\n  PathFillType,\n  PathOperation,\n  Radius,\n  RRect,\n  RSTransform,\n  Rect,\n  Shader,\n  Size,\n  StrokeCap,\n  StrokeJoin,\n  TextAffinity,\n  TextAlign,\n  TextBaseline,\n  TextBox,\n  TextDecoration,\n  TextDecorationStyle,\n  TextDirection,\n  TextPosition,\n  TileMode,\n  VertexMode,\n  // TODO(werainkhatri): remove these after their deprecation period in engine\n  // https://github.com/flutter/flutter/pull/99505\n  hashValues,\n  hashList;\n\nexport 'package:flutter/foundation.dart' show VoidCallback;\n "
        },
        {
            "uri": "package:flutter/rendering.dart",
            "source": "export 'package:flutter/src/rendering/box.dart';\nexport 'package:flutter/src/rendering/flex.dart';\nexport 'package:flutter/src/rendering/object.dart';\n"
        },
        {
            "uri": "package:flutter/widgets.dart",
            "source": "library widgets;\n    \nexport 'package:flutter/foundation.dart' show UniqueKey;\nexport 'package:flutter/src/widgets/app.dart';\nexport 'package:flutter/src/widgets/basic.dart';\nexport 'package:flutter/src/widgets/container.dart';\nexport 'package:flutter/src/widgets/editable_text.dart';\nexport 'package:flutter/src/widgets/framework.dart';\nexport 'package:flutter/src/widgets/icon.dart';\nexport 'package:flutter/src/widgets/icon_data.dart';\nexport 'package:flutter/src/widgets/spacer.dart';\nexport 'package:flutter/src/widgets/text.dart';\nexport 'package:flutter/src/widgets/navigator.dart';\n"
        },
        {
            "uri": "package:flutter/src/widgets/framework.dart",
            "source": "export 'package:flutter/foundation.dart' show FlutterError, ErrorSummary, ErrorDescription, ErrorHint,\n                    debugPrint, debugPrintStack, VoidCallback, ValueChanged, \n                    ValueGetter, ValueSetter, DiagnosticsNode, DiagnosticLevel, \n                    Key, LocalKey, ValueKey;\n"
        },
        {
            "uri": "package:flutter/src/widgets/basic.dart",
            "source": "export 'package:flutter/animation.dart';\nexport 'package:flutter/foundation.dart' show\n    ChangeNotifier,\n    FlutterErrorDetails,\n    Listenable,\n    TargetPlatform,\n    ValueNotifier;\nexport 'package:flutter/painting.dart';\nexport 'package:flutter/rendering.dart' show\n  MainAxisSize,\n  MainAxisAlignment,\n  CrossAxisAlignment;\n"
        }
    ]
}